(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function e(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerpolicy&&(s.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?s.credentials="include":o.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(o){if(o.ep)return;o.ep=!0;const s=e(o);fetch(o.href,s)}})();function se(i,t){const e=Object.create(null),n=i.split(",");for(let o=0;o<n.length;o++)e[n[o]]=!0;return t?o=>!!e[o.toLowerCase()]:o=>!!e[o]}function B1(i){if(f1(i)){const t={};for(let e=0;e<i.length;e++){const n=i[e],o=G1(n)?Ji(n):B1(n);if(o)for(const s in o)t[s]=o[s]}return t}else{if(G1(i))return i;if(A1(i))return i}}const Ki=/;(?![^(]*\))/g,Yi=/:([^]+)/,Xi=/\/\*.*?\*\//gs;function Ji(i){const t={};return i.replace(Xi,"").split(Ki).forEach(e=>{if(e){const n=e.split(Yi);n.length>1&&(t[n[0].trim()]=n[1].trim())}}),t}function t2(i){let t="";if(G1(i))t=i;else if(f1(i))for(let e=0;e<i.length;e++){const n=t2(i[e]);n&&(t+=n+" ")}else if(A1(i))for(const e in i)i[e]&&(t+=e+" ");return t.trim()}const Qi="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",tn=se(Qi);function t0(i){return!!i||i===""}const K1=i=>G1(i)?i:i==null?"":f1(i)||A1(i)&&(i.toString===o0||!p1(i.toString))?JSON.stringify(i,e0,2):String(i),e0=(i,t)=>t&&t.__v_isRef?e0(i,t.value):c8(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((e,[n,o])=>(e[`${n} =>`]=o,e),{})}:i0(t)?{[`Set(${t.size})`]:[...t.values()]}:A1(t)&&!f1(t)&&!s0(t)?String(t):t,O1={},a8=[],P2=()=>{},en=()=>!1,nn=/^on[^a-z]/,vt=i=>nn.test(i),re=i=>i.startsWith("onUpdate:"),o2=Object.assign,le=(i,t)=>{const e=i.indexOf(t);e>-1&&i.splice(e,1)},on=Object.prototype.hasOwnProperty,b1=(i,t)=>on.call(i,t),f1=Array.isArray,c8=i=>mt(i)==="[object Map]",i0=i=>mt(i)==="[object Set]",p1=i=>typeof i=="function",G1=i=>typeof i=="string",ae=i=>typeof i=="symbol",A1=i=>i!==null&&typeof i=="object",n0=i=>A1(i)&&p1(i.then)&&p1(i.catch),o0=Object.prototype.toString,mt=i=>o0.call(i),sn=i=>mt(i).slice(8,-1),s0=i=>mt(i)==="[object Object]",ce=i=>G1(i)&&i!=="NaN"&&i[0]!=="-"&&""+parseInt(i,10)===i,q6=se(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),yt=i=>{const t=Object.create(null);return e=>t[e]||(t[e]=i(e))},rn=/-(\w)/g,H2=yt(i=>i.replace(rn,(t,e)=>e?e.toUpperCase():"")),ln=/\B([A-Z])/g,P8=yt(i=>i.replace(ln,"-$1").toLowerCase()),gt=yt(i=>i.charAt(0).toUpperCase()+i.slice(1)),Gt=yt(i=>i?`on${gt(i)}`:""),o6=(i,t)=>!Object.is(i,t),Kt=(i,t)=>{for(let e=0;e<i.length;e++)i[e](t)},tt=(i,t,e)=>{Object.defineProperty(i,t,{configurable:!0,enumerable:!1,value:e})},an=i=>{const t=parseFloat(i);return isNaN(t)?i:t};let c9;const cn=()=>c9||(c9=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let f2;class r0{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=f2,!t&&f2&&(this.index=(f2.scopes||(f2.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const e=f2;try{return f2=this,t()}finally{f2=e}}}on(){f2=this}off(){f2=this.parent}stop(t){if(this._active){let e,n;for(e=0,n=this.effects.length;e<n;e++)this.effects[e].stop();for(e=0,n=this.cleanups.length;e<n;e++)this.cleanups[e]();if(this.scopes)for(e=0,n=this.scopes.length;e<n;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!t){const o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this._active=!1}}}function l0(i){return new r0(i)}function un(i,t=f2){t&&t.active&&t.effects.push(i)}function a0(){return f2}function hn(i){f2&&f2.cleanups.push(i)}const ue=i=>{const t=new Set(i);return t.w=0,t.n=0,t},c0=i=>(i.w&w5)>0,u0=i=>(i.n&w5)>0,fn=({deps:i})=>{if(i.length)for(let t=0;t<i.length;t++)i[t].w|=w5},dn=i=>{const{deps:t}=i;if(t.length){let e=0;for(let n=0;n<t.length;n++){const o=t[n];c0(o)&&!u0(o)?o.delete(i):t[e++]=o,o.w&=~w5,o.n&=~w5}t.length=e}},et=new WeakMap;let H8=0,w5=1;const R4=30;let k2;const H5=Symbol(""),I4=Symbol("");class he{constructor(t,e=null,n){this.fn=t,this.scheduler=e,this.active=!0,this.deps=[],this.parent=void 0,un(this,n)}run(){if(!this.active)return this.fn();let t=k2,e=_5;for(;t;){if(t===this)return;t=t.parent}try{return this.parent=k2,k2=this,_5=!0,w5=1<<++H8,H8<=R4?fn(this):u9(this),this.fn()}finally{H8<=R4&&dn(this),w5=1<<--H8,k2=this.parent,_5=e,this.parent=void 0,this.deferStop&&this.stop()}}stop(){k2===this?this.deferStop=!0:this.active&&(u9(this),this.onStop&&this.onStop(),this.active=!1)}}function u9(i){const{deps:t}=i;if(t.length){for(let e=0;e<t.length;e++)t[e].delete(i);t.length=0}}let _5=!0;const h0=[];function S8(){h0.push(_5),_5=!1}function O8(){const i=h0.pop();_5=i===void 0?!0:i}function u2(i,t,e){if(_5&&k2){let n=et.get(i);n||et.set(i,n=new Map);let o=n.get(e);o||n.set(e,o=ue()),f0(o)}}function f0(i,t){let e=!1;H8<=R4?u0(i)||(i.n|=w5,e=!c0(i)):e=!i.has(k2),e&&(i.add(k2),k2.deps.push(i))}function s5(i,t,e,n,o,s){const r=et.get(i);if(!r)return;let l=[];if(t==="clear")l=[...r.values()];else if(e==="length"&&f1(i)){const a=Number(n);r.forEach((c,u)=>{(u==="length"||u>=a)&&l.push(c)})}else switch(e!==void 0&&l.push(r.get(e)),t){case"add":f1(i)?ce(e)&&l.push(r.get("length")):(l.push(r.get(H5)),c8(i)&&l.push(r.get(I4)));break;case"delete":f1(i)||(l.push(r.get(H5)),c8(i)&&l.push(r.get(I4)));break;case"set":c8(i)&&l.push(r.get(H5));break}if(l.length===1)l[0]&&T4(l[0]);else{const a=[];for(const c of l)c&&a.push(...c);T4(ue(a))}}function T4(i,t){const e=f1(i)?i:[...i];for(const n of e)n.computed&&h9(n);for(const n of e)n.computed||h9(n)}function h9(i,t){(i!==k2||i.allowRecurse)&&(i.scheduler?i.scheduler():i.run())}function Cn(i,t){var e;return(e=et.get(i))===null||e===void 0?void 0:e.get(t)}const pn=se("__proto__,__v_isRef,__isVue"),d0=new Set(Object.getOwnPropertyNames(Symbol).filter(i=>i!=="arguments"&&i!=="caller").map(i=>Symbol[i]).filter(ae)),vn=fe(),mn=fe(!1,!0),yn=fe(!0),f9=gn();function gn(){const i={};return["includes","indexOf","lastIndexOf"].forEach(t=>{i[t]=function(...e){const n=_1(this);for(let s=0,r=this.length;s<r;s++)u2(n,"get",s+"");const o=n[t](...e);return o===-1||o===!1?n[t](...e.map(_1)):o}}),["push","pop","shift","unshift","splice"].forEach(t=>{i[t]=function(...e){S8();const n=_1(this)[t].apply(this,e);return O8(),n}}),i}function _n(i){const t=_1(this);return u2(t,"has",i),t.hasOwnProperty(i)}function fe(i=!1,t=!1){return function(n,o,s){if(o==="__v_isReactive")return!i;if(o==="__v_isReadonly")return i;if(o==="__v_isShallow")return t;if(o==="__v_raw"&&s===(i?t?An:y0:t?m0:v0).get(n))return n;const r=f1(n);if(!i){if(r&&b1(f9,o))return Reflect.get(f9,o,s);if(o==="hasOwnProperty")return _n}const l=Reflect.get(n,o,s);return(ae(o)?d0.has(o):pn(o))||(i||u2(n,"get",o),t)?l:j1(l)?r&&ce(o)?l:l.value:A1(l)?i?g0(l):P5(l):l}}const bn=C0(),wn=C0(!0);function C0(i=!1){return function(e,n,o,s){let r=e[n];if(v8(r)&&j1(r)&&!j1(o))return!1;if(!i&&(!it(o)&&!v8(o)&&(r=_1(r),o=_1(o)),!f1(e)&&j1(r)&&!j1(o)))return r.value=o,!0;const l=f1(e)&&ce(n)?Number(n)<e.length:b1(e,n),a=Reflect.set(e,n,o,s);return e===_1(s)&&(l?o6(o,r)&&s5(e,"set",n,o):s5(e,"add",n,o)),a}}function Mn(i,t){const e=b1(i,t);i[t];const n=Reflect.deleteProperty(i,t);return n&&e&&s5(i,"delete",t,void 0),n}function Ln(i,t){const e=Reflect.has(i,t);return(!ae(t)||!d0.has(t))&&u2(i,"has",t),e}function xn(i){return u2(i,"iterate",f1(i)?"length":H5),Reflect.ownKeys(i)}const p0={get:vn,set:bn,deleteProperty:Mn,has:Ln,ownKeys:xn},kn={get:yn,set(i,t){return!0},deleteProperty(i,t){return!0}},zn=o2({},p0,{get:mn,set:wn}),de=i=>i,_t=i=>Reflect.getPrototypeOf(i);function D6(i,t,e=!1,n=!1){i=i.__v_raw;const o=_1(i),s=_1(t);e||(t!==s&&u2(o,"get",t),u2(o,"get",s));const{has:r}=_t(o),l=n?de:e?ve:s6;if(r.call(o,t))return l(i.get(t));if(r.call(o,s))return l(i.get(s));i!==o&&i.get(t)}function $6(i,t=!1){const e=this.__v_raw,n=_1(e),o=_1(i);return t||(i!==o&&u2(n,"has",i),u2(n,"has",o)),i===o?e.has(i):e.has(i)||e.has(o)}function F6(i,t=!1){return i=i.__v_raw,!t&&u2(_1(i),"iterate",H5),Reflect.get(i,"size",i)}function d9(i){i=_1(i);const t=_1(this);return _t(t).has.call(t,i)||(t.add(i),s5(t,"add",i,i)),this}function C9(i,t){t=_1(t);const e=_1(this),{has:n,get:o}=_t(e);let s=n.call(e,i);s||(i=_1(i),s=n.call(e,i));const r=o.call(e,i);return e.set(i,t),s?o6(t,r)&&s5(e,"set",i,t):s5(e,"add",i,t),this}function p9(i){const t=_1(this),{has:e,get:n}=_t(t);let o=e.call(t,i);o||(i=_1(i),o=e.call(t,i)),n&&n.call(t,i);const s=t.delete(i);return o&&s5(t,"delete",i,void 0),s}function v9(){const i=_1(this),t=i.size!==0,e=i.clear();return t&&s5(i,"clear",void 0,void 0),e}function j6(i,t){return function(n,o){const s=this,r=s.__v_raw,l=_1(r),a=t?de:i?ve:s6;return!i&&u2(l,"iterate",H5),r.forEach((c,u)=>n.call(o,a(c),a(u),s))}}function N6(i,t,e){return function(...n){const o=this.__v_raw,s=_1(o),r=c8(s),l=i==="entries"||i===Symbol.iterator&&r,a=i==="keys"&&r,c=o[i](...n),u=e?de:t?ve:s6;return!t&&u2(s,"iterate",a?I4:H5),{next(){const{value:h,done:f}=c.next();return f?{value:h,done:f}:{value:l?[u(h[0]),u(h[1])]:u(h),done:f}},[Symbol.iterator](){return this}}}}function f5(i){return function(...t){return i==="delete"?!1:this}}function En(){const i={get(s){return D6(this,s)},get size(){return F6(this)},has:$6,add:d9,set:C9,delete:p9,clear:v9,forEach:j6(!1,!1)},t={get(s){return D6(this,s,!1,!0)},get size(){return F6(this)},has:$6,add:d9,set:C9,delete:p9,clear:v9,forEach:j6(!1,!0)},e={get(s){return D6(this,s,!0)},get size(){return F6(this,!0)},has(s){return $6.call(this,s,!0)},add:f5("add"),set:f5("set"),delete:f5("delete"),clear:f5("clear"),forEach:j6(!0,!1)},n={get(s){return D6(this,s,!0,!0)},get size(){return F6(this,!0)},has(s){return $6.call(this,s,!0)},add:f5("add"),set:f5("set"),delete:f5("delete"),clear:f5("clear"),forEach:j6(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{i[s]=N6(s,!1,!1),e[s]=N6(s,!0,!1),t[s]=N6(s,!1,!0),n[s]=N6(s,!0,!0)}),[i,e,t,n]}const[Pn,Sn,On,Rn]=En();function Ce(i,t){const e=t?i?Rn:On:i?Sn:Pn;return(n,o,s)=>o==="__v_isReactive"?!i:o==="__v_isReadonly"?i:o==="__v_raw"?n:Reflect.get(b1(e,o)&&o in n?e:n,o,s)}const In={get:Ce(!1,!1)},Tn={get:Ce(!1,!0)},Zn={get:Ce(!0,!1)},v0=new WeakMap,m0=new WeakMap,y0=new WeakMap,An=new WeakMap;function Dn(i){switch(i){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function $n(i){return i.__v_skip||!Object.isExtensible(i)?0:Dn(sn(i))}function P5(i){return v8(i)?i:pe(i,!1,p0,In,v0)}function Fn(i){return pe(i,!1,zn,Tn,m0)}function g0(i){return pe(i,!0,kn,Zn,y0)}function pe(i,t,e,n,o){if(!A1(i)||i.__v_raw&&!(t&&i.__v_isReactive))return i;const s=o.get(i);if(s)return s;const r=$n(i);if(r===0)return i;const l=new Proxy(i,r===2?n:e);return o.set(i,l),l}function i5(i){return v8(i)?i5(i.__v_raw):!!(i&&i.__v_isReactive)}function v8(i){return!!(i&&i.__v_isReadonly)}function it(i){return!!(i&&i.__v_isShallow)}function _0(i){return i5(i)||v8(i)}function _1(i){const t=i&&i.__v_raw;return t?_1(t):i}function m8(i){return tt(i,"__v_skip",!0),i}const s6=i=>A1(i)?P5(i):i,ve=i=>A1(i)?g0(i):i;function b0(i){_5&&k2&&(i=_1(i),f0(i.dep||(i.dep=ue())))}function w0(i,t){i=_1(i);const e=i.dep;e&&T4(e)}function j1(i){return!!(i&&i.__v_isRef===!0)}function z1(i){return M0(i,!1)}function jn(i){return M0(i,!0)}function M0(i,t){return j1(i)?i:new Nn(i,t)}class Nn{constructor(t,e){this.__v_isShallow=e,this.dep=void 0,this.__v_isRef=!0,this._rawValue=e?t:_1(t),this._value=e?t:s6(t)}get value(){return b0(this),this._value}set value(t){const e=this.__v_isShallow||it(t)||v8(t);t=e?t:_1(t),o6(t,this._rawValue)&&(this._rawValue=t,this._value=e?t:s6(t),w0(this))}}function $(i){return j1(i)?i.value:i}const Bn={get:(i,t,e)=>$(Reflect.get(i,t,e)),set:(i,t,e,n)=>{const o=i[t];return j1(o)&&!j1(e)?(o.value=e,!0):Reflect.set(i,t,e,n)}};function L0(i){return i5(i)?i:new Proxy(i,Bn)}function Hn(i){const t=f1(i)?new Array(i.length):{};for(const e in i)t[e]=x0(i,e);return t}class Vn{constructor(t,e,n){this._object=t,this._key=e,this._defaultValue=n,this.__v_isRef=!0}get value(){const t=this._object[this._key];return t===void 0?this._defaultValue:t}set value(t){this._object[this._key]=t}get dep(){return Cn(_1(this._object),this._key)}}function x0(i,t,e){const n=i[t];return j1(n)?n:new Vn(i,t,e)}var k0;class qn{constructor(t,e,n,o){this._setter=e,this.dep=void 0,this.__v_isRef=!0,this[k0]=!1,this._dirty=!0,this.effect=new he(t,()=>{this._dirty||(this._dirty=!0,w0(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!o,this.__v_isReadonly=n}get value(){const t=_1(this);return b0(t),(t._dirty||!t._cacheable)&&(t._dirty=!1,t._value=t.effect.run()),t._value}set value(t){this._setter(t)}}k0="__v_isReadonly";function Un(i,t,e=!1){let n,o;const s=p1(i);return s?(n=i,o=P2):(n=i.get,o=i.set),new qn(n,o,s||!o,e)}function b5(i,t,e,n){let o;try{o=n?i(...n):i()}catch(s){bt(s,t,e)}return o}function S2(i,t,e,n){if(p1(i)){const s=b5(i,t,e,n);return s&&n0(s)&&s.catch(r=>{bt(r,t,e)}),s}const o=[];for(let s=0;s<i.length;s++)o.push(S2(i[s],t,e,n));return o}function bt(i,t,e,n=!0){const o=t?t.vnode:null;if(t){let s=t.parent;const r=t.proxy,l=e;for(;s;){const c=s.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](i,r,l)===!1)return}s=s.parent}const a=t.appContext.config.errorHandler;if(a){b5(a,null,10,[i,r,l]);return}}Wn(i,e,o,n)}function Wn(i,t,e,n=!0){console.error(i)}let r6=!1,Z4=!1;const Q1=[];let j2=0;const u8=[];let Y2=null,$5=0;const z0=Promise.resolve();let me=null;function w6(i){const t=me||z0;return i?t.then(this?i.bind(this):i):t}function Gn(i){let t=j2+1,e=Q1.length;for(;t<e;){const n=t+e>>>1;l6(Q1[n])<i?t=n+1:e=n}return t}function ye(i){(!Q1.length||!Q1.includes(i,r6&&i.allowRecurse?j2+1:j2))&&(i.id==null?Q1.push(i):Q1.splice(Gn(i.id),0,i),E0())}function E0(){!r6&&!Z4&&(Z4=!0,me=z0.then(S0))}function Kn(i){const t=Q1.indexOf(i);t>j2&&Q1.splice(t,1)}function Yn(i){f1(i)?u8.push(...i):(!Y2||!Y2.includes(i,i.allowRecurse?$5+1:$5))&&u8.push(i),E0()}function m9(i,t=r6?j2+1:0){for(;t<Q1.length;t++){const e=Q1[t];e&&e.pre&&(Q1.splice(t,1),t--,e())}}function P0(i){if(u8.length){const t=[...new Set(u8)];if(u8.length=0,Y2){Y2.push(...t);return}for(Y2=t,Y2.sort((e,n)=>l6(e)-l6(n)),$5=0;$5<Y2.length;$5++)Y2[$5]();Y2=null,$5=0}}const l6=i=>i.id==null?1/0:i.id,Xn=(i,t)=>{const e=l6(i)-l6(t);if(e===0){if(i.pre&&!t.pre)return-1;if(t.pre&&!i.pre)return 1}return e};function S0(i){Z4=!1,r6=!0,Q1.sort(Xn);const t=P2;try{for(j2=0;j2<Q1.length;j2++){const e=Q1[j2];e&&e.active!==!1&&b5(e,null,14)}}finally{j2=0,Q1.length=0,P0(),r6=!1,me=null,(Q1.length||u8.length)&&S0()}}function Jn(i,t,...e){if(i.isUnmounted)return;const n=i.vnode.props||O1;let o=e;const s=t.startsWith("update:"),r=s&&t.slice(7);if(r&&r in n){const u=`${r==="modelValue"?"model":r}Modifiers`,{number:h,trim:f}=n[u]||O1;f&&(o=e.map(C=>G1(C)?C.trim():C)),h&&(o=e.map(an))}let l,a=n[l=Gt(t)]||n[l=Gt(H2(t))];!a&&s&&(a=n[l=Gt(P8(t))]),a&&S2(a,i,6,o);const c=n[l+"Once"];if(c){if(!i.emitted)i.emitted={};else if(i.emitted[l])return;i.emitted[l]=!0,S2(c,i,6,o)}}function O0(i,t,e=!1){const n=t.emitsCache,o=n.get(i);if(o!==void 0)return o;const s=i.emits;let r={},l=!1;if(!p1(i)){const a=c=>{const u=O0(c,t,!0);u&&(l=!0,o2(r,u))};!e&&t.mixins.length&&t.mixins.forEach(a),i.extends&&a(i.extends),i.mixins&&i.mixins.forEach(a)}return!s&&!l?(A1(i)&&n.set(i,null),null):(f1(s)?s.forEach(a=>r[a]=null):o2(r,s),A1(i)&&n.set(i,r),r)}function wt(i,t){return!i||!vt(t)?!1:(t=t.slice(2).replace(/Once$/,""),b1(i,t[0].toLowerCase()+t.slice(1))||b1(i,P8(t))||b1(i,t))}let J1=null,Mt=null;function nt(i){const t=J1;return J1=i,Mt=i&&i.type.__scopeId||null,t}function c5(i){Mt=i}function u5(){Mt=null}function M5(i,t=J1,e){if(!t||i._n)return i;const n=(...o)=>{n._d&&k9(-1);const s=nt(t);let r;try{r=i(...o)}finally{nt(s),n._d&&k9(1)}return r};return n._n=!0,n._c=!0,n._d=!0,n}function Yt(i){const{type:t,vnode:e,proxy:n,withProxy:o,props:s,propsOptions:[r],slots:l,attrs:a,emit:c,render:u,renderCache:h,data:f,setupState:C,ctx:d,inheritAttrs:p}=i;let v,g;const _=nt(i);try{if(e.shapeFlag&4){const P=o||n;v=$2(u.call(P,P,h,s,C,f,d)),g=a}else{const P=t;v=$2(P.length>1?P(s,{attrs:a,slots:l,emit:c}):P(s,null)),g=t.props?a:Qn(a)}}catch(P){G8.length=0,bt(P,i,1),v=u1(L5)}let b=v;if(g&&p!==!1){const P=Object.keys(g),{shapeFlag:E}=b;P.length&&E&7&&(r&&P.some(re)&&(g=to(g,r)),b=g8(b,g))}return e.dirs&&(b=g8(b),b.dirs=b.dirs?b.dirs.concat(e.dirs):e.dirs),e.transition&&(b.transition=e.transition),v=b,nt(_),v}const Qn=i=>{let t;for(const e in i)(e==="class"||e==="style"||vt(e))&&((t||(t={}))[e]=i[e]);return t},to=(i,t)=>{const e={};for(const n in i)(!re(n)||!(n.slice(9)in t))&&(e[n]=i[n]);return e};function eo(i,t,e){const{props:n,children:o,component:s}=i,{props:r,children:l,patchFlag:a}=t,c=s.emitsOptions;if(t.dirs||t.transition)return!0;if(e&&a>=0){if(a&1024)return!0;if(a&16)return n?y9(n,r,c):!!r;if(a&8){const u=t.dynamicProps;for(let h=0;h<u.length;h++){const f=u[h];if(r[f]!==n[f]&&!wt(c,f))return!0}}}else return(o||l)&&(!l||!l.$stable)?!0:n===r?!1:n?r?y9(n,r,c):!0:!!r;return!1}function y9(i,t,e){const n=Object.keys(t);if(n.length!==Object.keys(i).length)return!0;for(let o=0;o<n.length;o++){const s=n[o];if(t[s]!==i[s]&&!wt(e,s))return!0}return!1}function io({vnode:i,parent:t},e){for(;t&&t.subTree===i;)(i=t.vnode).el=e,t=t.parent}const no=i=>i.__isSuspense;function oo(i,t){t&&t.pendingBranch?f1(i)?t.effects.push(...i):t.effects.push(i):Yn(i)}function q8(i,t){if(H1){let e=H1.provides;const n=H1.parent&&H1.parent.provides;n===e&&(e=H1.provides=Object.create(n)),e[i]=t}}function p2(i,t,e=!1){const n=H1||J1;if(n){const o=n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides;if(o&&i in o)return o[i];if(arguments.length>1)return e&&p1(t)?t.call(n.proxy):t}}const B6={};function O2(i,t,e){return R0(i,t,e)}function R0(i,t,{immediate:e,deep:n,flush:o,onTrack:s,onTrigger:r}=O1){const l=a0()===(H1==null?void 0:H1.scope)?H1:null;let a,c=!1,u=!1;if(j1(i)?(a=()=>i.value,c=it(i)):i5(i)?(a=()=>i,n=!0):f1(i)?(u=!0,c=i.some(b=>i5(b)||it(b)),a=()=>i.map(b=>{if(j1(b))return b.value;if(i5(b))return j5(b);if(p1(b))return b5(b,l,2)})):p1(i)?t?a=()=>b5(i,l,2):a=()=>{if(!(l&&l.isUnmounted))return h&&h(),S2(i,l,3,[f])}:a=P2,t&&n){const b=a;a=()=>j5(b())}let h,f=b=>{h=g.onStop=()=>{b5(b,l,4)}},C;if(u6)if(f=P2,t?e&&S2(t,l,3,[a(),u?[]:void 0,f]):a(),o==="sync"){const b=Yo();C=b.__watcherHandles||(b.__watcherHandles=[])}else return P2;let d=u?new Array(i.length).fill(B6):B6;const p=()=>{if(g.active)if(t){const b=g.run();(n||c||(u?b.some((P,E)=>o6(P,d[E])):o6(b,d)))&&(h&&h(),S2(t,l,3,[b,d===B6?void 0:u&&d[0]===B6?[]:d,f]),d=b)}else g.run()};p.allowRecurse=!!t;let v;o==="sync"?v=p:o==="post"?v=()=>r2(p,l&&l.suspense):(p.pre=!0,l&&(p.id=l.uid),v=()=>ye(p));const g=new he(a,v);t?e?p():d=g.run():o==="post"?r2(g.run.bind(g),l&&l.suspense):g.run();const _=()=>{g.stop(),l&&l.scope&&le(l.scope.effects,g)};return C&&C.push(_),_}function so(i,t,e){const n=this.proxy,o=G1(i)?i.includes(".")?I0(n,i):()=>n[i]:i.bind(n,n);let s;p1(t)?s=t:(s=t.handler,e=t);const r=H1;_8(this);const l=R0(o,s.bind(n),e);return r?_8(r):V5(),l}function I0(i,t){const e=t.split(".");return()=>{let n=i;for(let o=0;o<e.length&&n;o++)n=n[e[o]];return n}}function j5(i,t){if(!A1(i)||i.__v_skip||(t=t||new Set,t.has(i)))return i;if(t.add(i),j1(i))j5(i.value,t);else if(f1(i))for(let e=0;e<i.length;e++)j5(i[e],t);else if(i0(i)||c8(i))i.forEach(e=>{j5(e,t)});else if(s0(i))for(const e in i)j5(i[e],t);return i}function R8(i){return p1(i)?{setup:i,name:i.name}:i}const U8=i=>!!i.type.__asyncLoader,T0=i=>i.type.__isKeepAlive;function ro(i,t){Z0(i,"a",t)}function lo(i,t){Z0(i,"da",t)}function Z0(i,t,e=H1){const n=i.__wdc||(i.__wdc=()=>{let o=e;for(;o;){if(o.isDeactivated)return;o=o.parent}return i()});if(Lt(t,n,e),e){let o=e.parent;for(;o&&o.parent;)T0(o.parent.vnode)&&ao(n,t,e,o),o=o.parent}}function ao(i,t,e,n){const o=Lt(t,i,n,!0);ot(()=>{le(n[t],o)},e)}function Lt(i,t,e=H1,n=!1){if(e){const o=e[i]||(e[i]=[]),s=t.__weh||(t.__weh=(...r)=>{if(e.isUnmounted)return;S8(),_8(e);const l=S2(t,e,i,r);return V5(),O8(),l});return n?o.unshift(s):o.push(s),s}}const h5=i=>(t,e=H1)=>(!u6||i==="sp")&&Lt(i,(...n)=>t(...n),e),co=h5("bm"),y8=h5("m"),uo=h5("bu"),A0=h5("u"),D0=h5("bum"),ot=h5("um"),ho=h5("sp"),fo=h5("rtg"),Co=h5("rtc");function po(i,t=H1){Lt("ec",i,t)}function U1(i,t){const e=J1;if(e===null)return i;const n=zt(e)||e.proxy,o=i.dirs||(i.dirs=[]);for(let s=0;s<t.length;s++){let[r,l,a,c=O1]=t[s];r&&(p1(r)&&(r={mounted:r,updated:r}),r.deep&&j5(l),o.push({dir:r,instance:n,value:l,oldValue:void 0,arg:a,modifiers:c}))}return i}function T5(i,t,e,n){const o=i.dirs,s=t&&t.dirs;for(let r=0;r<o.length;r++){const l=o[r];s&&(l.oldValue=s[r].value);let a=l.dir[n];a&&(S8(),S2(a,e,8,[i.el,l,i,t]),O8())}}const ge="components";function _e(i,t){return F0(ge,i,!0,t)||i}const $0=Symbol();function vo(i){return G1(i)?F0(ge,i,!1)||i:i||$0}function F0(i,t,e=!0,n=!1){const o=J1||H1;if(o){const s=o.type;if(i===ge){const l=Wo(s,!1);if(l&&(l===t||l===H2(t)||l===gt(H2(t))))return s}const r=g9(o[i]||s[i],t)||g9(o.appContext[i],t);return!r&&n?s:r}}function g9(i,t){return i&&(i[t]||i[H2(t)]||i[gt(H2(t))])}function Q2(i,t,e,n){let o;const s=e&&e[n];if(f1(i)||G1(i)){o=new Array(i.length);for(let r=0,l=i.length;r<l;r++)o[r]=t(i[r],r,void 0,s&&s[r])}else if(typeof i=="number"){o=new Array(i);for(let r=0;r<i;r++)o[r]=t(r+1,r,void 0,s&&s[r])}else if(A1(i))if(i[Symbol.iterator])o=Array.from(i,(r,l)=>t(r,l,void 0,s&&s[l]));else{const r=Object.keys(i);o=new Array(r.length);for(let l=0,a=r.length;l<a;l++){const c=r[l];o[l]=t(i[c],c,l,s&&s[l])}}else o=[];return e&&(e[n]=o),o}function st(i,t,e={},n,o){if(J1.isCE||J1.parent&&U8(J1.parent)&&J1.parent.isCE)return t!=="default"&&(e.name=t),u1("slot",e,n&&n());let s=i[t];s&&s._c&&(s._d=!1),Y();const r=s&&j0(s(e)),l=U5(R1,{key:e.key||r&&r.key||`_${t}`},r||(n?n():[]),r&&i._===1?64:-2);return!o&&l.scopeId&&(l.slotScopeIds=[l.scopeId+"-s"]),s&&s._c&&(s._d=!0),l}function j0(i){return i.some(t=>lt(t)?!(t.type===L5||t.type===R1&&!j0(t.children)):!0)?i:null}const A4=i=>i?X0(i)?zt(i)||i.proxy:A4(i.parent):null,W8=o2(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>A4(i.parent),$root:i=>A4(i.root),$emit:i=>i.emit,$options:i=>be(i),$forceUpdate:i=>i.f||(i.f=()=>ye(i.update)),$nextTick:i=>i.n||(i.n=w6.bind(i.proxy)),$watch:i=>so.bind(i)}),Xt=(i,t)=>i!==O1&&!i.__isScriptSetup&&b1(i,t),mo={get({_:i},t){const{ctx:e,setupState:n,data:o,props:s,accessCache:r,type:l,appContext:a}=i;let c;if(t[0]!=="$"){const C=r[t];if(C!==void 0)switch(C){case 1:return n[t];case 2:return o[t];case 4:return e[t];case 3:return s[t]}else{if(Xt(n,t))return r[t]=1,n[t];if(o!==O1&&b1(o,t))return r[t]=2,o[t];if((c=i.propsOptions[0])&&b1(c,t))return r[t]=3,s[t];if(e!==O1&&b1(e,t))return r[t]=4,e[t];D4&&(r[t]=0)}}const u=W8[t];let h,f;if(u)return t==="$attrs"&&u2(i,"get",t),u(i);if((h=l.__cssModules)&&(h=h[t]))return h;if(e!==O1&&b1(e,t))return r[t]=4,e[t];if(f=a.config.globalProperties,b1(f,t))return f[t]},set({_:i},t,e){const{data:n,setupState:o,ctx:s}=i;return Xt(o,t)?(o[t]=e,!0):n!==O1&&b1(n,t)?(n[t]=e,!0):b1(i.props,t)||t[0]==="$"&&t.slice(1)in i?!1:(s[t]=e,!0)},has({_:{data:i,setupState:t,accessCache:e,ctx:n,appContext:o,propsOptions:s}},r){let l;return!!e[r]||i!==O1&&b1(i,r)||Xt(t,r)||(l=s[0])&&b1(l,r)||b1(n,r)||b1(W8,r)||b1(o.config.globalProperties,r)},defineProperty(i,t,e){return e.get!=null?i._.accessCache[t]=0:b1(e,"value")&&this.set(i,t,e.value,null),Reflect.defineProperty(i,t,e)}};let D4=!0;function yo(i){const t=be(i),e=i.proxy,n=i.ctx;D4=!1,t.beforeCreate&&_9(t.beforeCreate,i,"bc");const{data:o,computed:s,methods:r,watch:l,provide:a,inject:c,created:u,beforeMount:h,mounted:f,beforeUpdate:C,updated:d,activated:p,deactivated:v,beforeDestroy:g,beforeUnmount:_,destroyed:b,unmounted:P,render:E,renderTracked:O,renderTriggered:M,errorCaptured:z,serverPrefetch:X,expose:V,inheritAttrs:Z,components:F,directives:U,filters:T}=t;if(c&&go(c,n,null,i.appContext.config.unwrapInjectedRef),r)for(const q in r){const W=r[q];p1(W)&&(n[q]=W.bind(e))}if(o){const q=o.call(e,e);A1(q)&&(i.data=P5(q))}if(D4=!0,s)for(const q in s){const W=s[q],e1=p1(W)?W.bind(e,e):p1(W.get)?W.get.bind(e,e):P2,N=!p1(W)&&p1(W.set)?W.set.bind(e):P2,Q=m1({get:e1,set:N});Object.defineProperty(n,q,{enumerable:!0,configurable:!0,get:()=>Q.value,set:a1=>Q.value=a1})}if(l)for(const q in l)N0(l[q],n,e,q);if(a){const q=p1(a)?a.call(e):a;Reflect.ownKeys(q).forEach(W=>{q8(W,q[W])})}u&&_9(u,i,"c");function D(q,W){f1(W)?W.forEach(e1=>q(e1.bind(e))):W&&q(W.bind(e))}if(D(co,h),D(y8,f),D(uo,C),D(A0,d),D(ro,p),D(lo,v),D(po,z),D(Co,O),D(fo,M),D(D0,_),D(ot,P),D(ho,X),f1(V))if(V.length){const q=i.exposed||(i.exposed={});V.forEach(W=>{Object.defineProperty(q,W,{get:()=>e[W],set:e1=>e[W]=e1})})}else i.exposed||(i.exposed={});E&&i.render===P2&&(i.render=E),Z!=null&&(i.inheritAttrs=Z),F&&(i.components=F),U&&(i.directives=U)}function go(i,t,e=P2,n=!1){f1(i)&&(i=$4(i));for(const o in i){const s=i[o];let r;A1(s)?"default"in s?r=p2(s.from||o,s.default,!0):r=p2(s.from||o):r=p2(s),j1(r)&&n?Object.defineProperty(t,o,{enumerable:!0,configurable:!0,get:()=>r.value,set:l=>r.value=l}):t[o]=r}}function _9(i,t,e){S2(f1(i)?i.map(n=>n.bind(t.proxy)):i.bind(t.proxy),t,e)}function N0(i,t,e,n){const o=n.includes(".")?I0(e,n):()=>e[n];if(G1(i)){const s=t[i];p1(s)&&O2(o,s)}else if(p1(i))O2(o,i.bind(e));else if(A1(i))if(f1(i))i.forEach(s=>N0(s,t,e,n));else{const s=p1(i.handler)?i.handler.bind(e):t[i.handler];p1(s)&&O2(o,s,i)}}function be(i){const t=i.type,{mixins:e,extends:n}=t,{mixins:o,optionsCache:s,config:{optionMergeStrategies:r}}=i.appContext,l=s.get(t);let a;return l?a=l:!o.length&&!e&&!n?a=t:(a={},o.length&&o.forEach(c=>rt(a,c,r,!0)),rt(a,t,r)),A1(t)&&s.set(t,a),a}function rt(i,t,e,n=!1){const{mixins:o,extends:s}=t;s&&rt(i,s,e,!0),o&&o.forEach(r=>rt(i,r,e,!0));for(const r in t)if(!(n&&r==="expose")){const l=_o[r]||e&&e[r];i[r]=l?l(i[r],t[r]):t[r]}return i}const _o={data:b9,props:D5,emits:D5,methods:D5,computed:D5,beforeCreate:i2,created:i2,beforeMount:i2,mounted:i2,beforeUpdate:i2,updated:i2,beforeDestroy:i2,beforeUnmount:i2,destroyed:i2,unmounted:i2,activated:i2,deactivated:i2,errorCaptured:i2,serverPrefetch:i2,components:D5,directives:D5,watch:wo,provide:b9,inject:bo};function b9(i,t){return t?i?function(){return o2(p1(i)?i.call(this,this):i,p1(t)?t.call(this,this):t)}:t:i}function bo(i,t){return D5($4(i),$4(t))}function $4(i){if(f1(i)){const t={};for(let e=0;e<i.length;e++)t[i[e]]=i[e];return t}return i}function i2(i,t){return i?[...new Set([].concat(i,t))]:t}function D5(i,t){return i?o2(o2(Object.create(null),i),t):t}function wo(i,t){if(!i)return t;if(!t)return i;const e=o2(Object.create(null),i);for(const n in t)e[n]=i2(i[n],t[n]);return e}function Mo(i,t,e,n=!1){const o={},s={};tt(s,kt,1),i.propsDefaults=Object.create(null),B0(i,t,o,s);for(const r in i.propsOptions[0])r in o||(o[r]=void 0);e?i.props=n?o:Fn(o):i.type.props?i.props=o:i.props=s,i.attrs=s}function Lo(i,t,e,n){const{props:o,attrs:s,vnode:{patchFlag:r}}=i,l=_1(o),[a]=i.propsOptions;let c=!1;if((n||r>0)&&!(r&16)){if(r&8){const u=i.vnode.dynamicProps;for(let h=0;h<u.length;h++){let f=u[h];if(wt(i.emitsOptions,f))continue;const C=t[f];if(a)if(b1(s,f))C!==s[f]&&(s[f]=C,c=!0);else{const d=H2(f);o[d]=F4(a,l,d,C,i,!1)}else C!==s[f]&&(s[f]=C,c=!0)}}}else{B0(i,t,o,s)&&(c=!0);let u;for(const h in l)(!t||!b1(t,h)&&((u=P8(h))===h||!b1(t,u)))&&(a?e&&(e[h]!==void 0||e[u]!==void 0)&&(o[h]=F4(a,l,h,void 0,i,!0)):delete o[h]);if(s!==l)for(const h in s)(!t||!b1(t,h))&&(delete s[h],c=!0)}c&&s5(i,"set","$attrs")}function B0(i,t,e,n){const[o,s]=i.propsOptions;let r=!1,l;if(t)for(let a in t){if(q6(a))continue;const c=t[a];let u;o&&b1(o,u=H2(a))?!s||!s.includes(u)?e[u]=c:(l||(l={}))[u]=c:wt(i.emitsOptions,a)||(!(a in n)||c!==n[a])&&(n[a]=c,r=!0)}if(s){const a=_1(e),c=l||O1;for(let u=0;u<s.length;u++){const h=s[u];e[h]=F4(o,a,h,c[h],i,!b1(c,h))}}return r}function F4(i,t,e,n,o,s){const r=i[e];if(r!=null){const l=b1(r,"default");if(l&&n===void 0){const a=r.default;if(r.type!==Function&&p1(a)){const{propsDefaults:c}=o;e in c?n=c[e]:(_8(o),n=c[e]=a.call(null,t),V5())}else n=a}r[0]&&(s&&!l?n=!1:r[1]&&(n===""||n===P8(e))&&(n=!0))}return n}function H0(i,t,e=!1){const n=t.propsCache,o=n.get(i);if(o)return o;const s=i.props,r={},l=[];let a=!1;if(!p1(i)){const u=h=>{a=!0;const[f,C]=H0(h,t,!0);o2(r,f),C&&l.push(...C)};!e&&t.mixins.length&&t.mixins.forEach(u),i.extends&&u(i.extends),i.mixins&&i.mixins.forEach(u)}if(!s&&!a)return A1(i)&&n.set(i,a8),a8;if(f1(s))for(let u=0;u<s.length;u++){const h=H2(s[u]);w9(h)&&(r[h]=O1)}else if(s)for(const u in s){const h=H2(u);if(w9(h)){const f=s[u],C=r[h]=f1(f)||p1(f)?{type:f}:Object.assign({},f);if(C){const d=x9(Boolean,C.type),p=x9(String,C.type);C[0]=d>-1,C[1]=p<0||d<p,(d>-1||b1(C,"default"))&&l.push(h)}}}const c=[r,l];return A1(i)&&n.set(i,c),c}function w9(i){return i[0]!=="$"}function M9(i){const t=i&&i.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:i===null?"null":""}function L9(i,t){return M9(i)===M9(t)}function x9(i,t){return f1(t)?t.findIndex(e=>L9(e,i)):p1(t)&&L9(t,i)?0:-1}const V0=i=>i[0]==="_"||i==="$stable",we=i=>f1(i)?i.map($2):[$2(i)],xo=(i,t,e)=>{if(t._n)return t;const n=M5((...o)=>we(t(...o)),e);return n._c=!1,n},q0=(i,t,e)=>{const n=i._ctx;for(const o in i){if(V0(o))continue;const s=i[o];if(p1(s))t[o]=xo(o,s,n);else if(s!=null){const r=we(s);t[o]=()=>r}}},U0=(i,t)=>{const e=we(t);i.slots.default=()=>e},ko=(i,t)=>{if(i.vnode.shapeFlag&32){const e=t._;e?(i.slots=_1(t),tt(t,"_",e)):q0(t,i.slots={})}else i.slots={},t&&U0(i,t);tt(i.slots,kt,1)},zo=(i,t,e)=>{const{vnode:n,slots:o}=i;let s=!0,r=O1;if(n.shapeFlag&32){const l=t._;l?e&&l===1?s=!1:(o2(o,t),!e&&l===1&&delete o._):(s=!t.$stable,q0(t,o)),r=t}else t&&(U0(i,t),r={default:1});if(s)for(const l in o)!V0(l)&&!(l in r)&&delete o[l]};function W0(){return{app:null,config:{isNativeTag:en,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Eo=0;function Po(i,t){return function(n,o=null){p1(n)||(n=Object.assign({},n)),o!=null&&!A1(o)&&(o=null);const s=W0(),r=new Set;let l=!1;const a=s.app={_uid:Eo++,_component:n,_props:o,_container:null,_context:s,_instance:null,version:Xo,get config(){return s.config},set config(c){},use(c,...u){return r.has(c)||(c&&p1(c.install)?(r.add(c),c.install(a,...u)):p1(c)&&(r.add(c),c(a,...u))),a},mixin(c){return s.mixins.includes(c)||s.mixins.push(c),a},component(c,u){return u?(s.components[c]=u,a):s.components[c]},directive(c,u){return u?(s.directives[c]=u,a):s.directives[c]},mount(c,u,h){if(!l){const f=u1(n,o);return f.appContext=s,u&&t?t(f,c):i(f,c,h),l=!0,a._container=c,c.__vue_app__=a,zt(f.component)||f.component.proxy}},unmount(){l&&(i(null,a._container),delete a._container.__vue_app__)},provide(c,u){return s.provides[c]=u,a}};return a}}function j4(i,t,e,n,o=!1){if(f1(i)){i.forEach((f,C)=>j4(f,t&&(f1(t)?t[C]:t),e,n,o));return}if(U8(n)&&!o)return;const s=n.shapeFlag&4?zt(n.component)||n.component.proxy:n.el,r=o?null:s,{i:l,r:a}=i,c=t&&t.r,u=l.refs===O1?l.refs={}:l.refs,h=l.setupState;if(c!=null&&c!==a&&(G1(c)?(u[c]=null,b1(h,c)&&(h[c]=null)):j1(c)&&(c.value=null)),p1(a))b5(a,l,12,[r,u]);else{const f=G1(a),C=j1(a);if(f||C){const d=()=>{if(i.f){const p=f?b1(h,a)?h[a]:u[a]:a.value;o?f1(p)&&le(p,s):f1(p)?p.includes(s)||p.push(s):f?(u[a]=[s],b1(h,a)&&(h[a]=u[a])):(a.value=[s],i.k&&(u[i.k]=a.value))}else f?(u[a]=r,b1(h,a)&&(h[a]=r)):C&&(a.value=r,i.k&&(u[i.k]=r))};r?(d.id=-1,r2(d,e)):d()}}}const r2=oo;function So(i){return Oo(i)}function Oo(i,t){const e=cn();e.__VUE__=!0;const{insert:n,remove:o,patchProp:s,createElement:r,createText:l,createComment:a,setText:c,setElementText:u,parentNode:h,nextSibling:f,setScopeId:C=P2,insertStaticContent:d}=i,p=(y,m,L,S=null,I=null,B=null,J=!1,H=null,G=!!m.dynamicChildren)=>{if(y===m)return;y&&!$8(y,m)&&(S=A(y),a1(y,I,B,!0),y=null),m.patchFlag===-2&&(G=!1,m.dynamicChildren=null);const{type:j,ref:s1,shapeFlag:n1}=m;switch(j){case xt:v(y,m,L,S);break;case L5:g(y,m,L,S);break;case U6:y==null&&_(m,L,S,J);break;case R1:F(y,m,L,S,I,B,J,H,G);break;default:n1&1?E(y,m,L,S,I,B,J,H,G):n1&6?U(y,m,L,S,I,B,J,H,G):(n1&64||n1&128)&&j.process(y,m,L,S,I,B,J,H,G,o1)}s1!=null&&I&&j4(s1,y&&y.ref,B,m||y,!m)},v=(y,m,L,S)=>{if(y==null)n(m.el=l(m.children),L,S);else{const I=m.el=y.el;m.children!==y.children&&c(I,m.children)}},g=(y,m,L,S)=>{y==null?n(m.el=a(m.children||""),L,S):m.el=y.el},_=(y,m,L,S)=>{[y.el,y.anchor]=d(y.children,m,L,S,y.el,y.anchor)},b=({el:y,anchor:m},L,S)=>{let I;for(;y&&y!==m;)I=f(y),n(y,L,S),y=I;n(m,L,S)},P=({el:y,anchor:m})=>{let L;for(;y&&y!==m;)L=f(y),o(y),y=L;o(m)},E=(y,m,L,S,I,B,J,H,G)=>{J=J||m.type==="svg",y==null?O(m,L,S,I,B,J,H,G):X(y,m,I,B,J,H,G)},O=(y,m,L,S,I,B,J,H)=>{let G,j;const{type:s1,props:n1,shapeFlag:r1,transition:h1,dirs:g1}=y;if(G=y.el=r(y.type,B,n1&&n1.is,n1),r1&8?u(G,y.children):r1&16&&z(y.children,G,null,S,I,B&&s1!=="foreignObject",J,H),g1&&T5(y,null,S,"created"),M(G,y,y.scopeId,J,S),n1){for(const k1 in n1)k1!=="value"&&!q6(k1)&&s(G,k1,null,n1[k1],B,y.children,S,I,x);"value"in n1&&s(G,"value",null,n1.value),(j=n1.onVnodeBeforeMount)&&D2(j,S,y)}g1&&T5(y,null,S,"beforeMount");const E1=(!I||I&&!I.pendingBranch)&&h1&&!h1.persisted;E1&&h1.beforeEnter(G),n(G,m,L),((j=n1&&n1.onVnodeMounted)||E1||g1)&&r2(()=>{j&&D2(j,S,y),E1&&h1.enter(G),g1&&T5(y,null,S,"mounted")},I)},M=(y,m,L,S,I)=>{if(L&&C(y,L),S)for(let B=0;B<S.length;B++)C(y,S[B]);if(I){let B=I.subTree;if(m===B){const J=I.vnode;M(y,J,J.scopeId,J.slotScopeIds,I.parent)}}},z=(y,m,L,S,I,B,J,H,G=0)=>{for(let j=G;j<y.length;j++){const s1=y[j]=H?C5(y[j]):$2(y[j]);p(null,s1,m,L,S,I,B,J,H)}},X=(y,m,L,S,I,B,J)=>{const H=m.el=y.el;let{patchFlag:G,dynamicChildren:j,dirs:s1}=m;G|=y.patchFlag&16;const n1=y.props||O1,r1=m.props||O1;let h1;L&&Z5(L,!1),(h1=r1.onVnodeBeforeUpdate)&&D2(h1,L,m,y),s1&&T5(m,y,L,"beforeUpdate"),L&&Z5(L,!0);const g1=I&&m.type!=="foreignObject";if(j?V(y.dynamicChildren,j,H,L,S,g1,B):J||W(y,m,H,null,L,S,g1,B,!1),G>0){if(G&16)Z(H,m,n1,r1,L,S,I);else if(G&2&&n1.class!==r1.class&&s(H,"class",null,r1.class,I),G&4&&s(H,"style",n1.style,r1.style,I),G&8){const E1=m.dynamicProps;for(let k1=0;k1<E1.length;k1++){const q1=E1[k1],L2=n1[q1],t8=r1[q1];(t8!==L2||q1==="value")&&s(H,q1,L2,t8,I,y.children,L,S,x)}}G&1&&y.children!==m.children&&u(H,m.children)}else!J&&j==null&&Z(H,m,n1,r1,L,S,I);((h1=r1.onVnodeUpdated)||s1)&&r2(()=>{h1&&D2(h1,L,m,y),s1&&T5(m,y,L,"updated")},S)},V=(y,m,L,S,I,B,J)=>{for(let H=0;H<m.length;H++){const G=y[H],j=m[H],s1=G.el&&(G.type===R1||!$8(G,j)||G.shapeFlag&70)?h(G.el):L;p(G,j,s1,null,S,I,B,J,!0)}},Z=(y,m,L,S,I,B,J)=>{if(L!==S){if(L!==O1)for(const H in L)!q6(H)&&!(H in S)&&s(y,H,L[H],null,J,m.children,I,B,x);for(const H in S){if(q6(H))continue;const G=S[H],j=L[H];G!==j&&H!=="value"&&s(y,H,j,G,J,m.children,I,B,x)}"value"in S&&s(y,"value",L.value,S.value)}},F=(y,m,L,S,I,B,J,H,G)=>{const j=m.el=y?y.el:l(""),s1=m.anchor=y?y.anchor:l("");let{patchFlag:n1,dynamicChildren:r1,slotScopeIds:h1}=m;h1&&(H=H?H.concat(h1):h1),y==null?(n(j,L,S),n(s1,L,S),z(m.children,L,s1,I,B,J,H,G)):n1>0&&n1&64&&r1&&y.dynamicChildren?(V(y.dynamicChildren,r1,L,I,B,J,H),(m.key!=null||I&&m===I.subTree)&&G0(y,m,!0)):W(y,m,L,s1,I,B,J,H,G)},U=(y,m,L,S,I,B,J,H,G)=>{m.slotScopeIds=H,y==null?m.shapeFlag&512?I.ctx.activate(m,L,S,J,G):T(m,L,S,I,B,J,G):k(y,m,G)},T=(y,m,L,S,I,B,J)=>{const H=y.component=No(y,S,I);if(T0(y)&&(H.ctx.renderer=o1),Ho(H),H.asyncDep){if(I&&I.registerDep(H,D),!y.el){const G=H.subTree=u1(L5);g(null,G,m,L)}return}D(H,y,m,L,I,B,J)},k=(y,m,L)=>{const S=m.component=y.component;if(eo(y,m,L))if(S.asyncDep&&!S.asyncResolved){q(S,m,L);return}else S.next=m,Kn(S.update),S.update();else m.el=y.el,S.vnode=m},D=(y,m,L,S,I,B,J)=>{const H=()=>{if(y.isMounted){let{next:s1,bu:n1,u:r1,parent:h1,vnode:g1}=y,E1=s1,k1;Z5(y,!1),s1?(s1.el=g1.el,q(y,s1,J)):s1=g1,n1&&Kt(n1),(k1=s1.props&&s1.props.onVnodeBeforeUpdate)&&D2(k1,h1,s1,g1),Z5(y,!0);const q1=Yt(y),L2=y.subTree;y.subTree=q1,p(L2,q1,h(L2.el),A(L2),y,I,B),s1.el=q1.el,E1===null&&io(y,q1.el),r1&&r2(r1,I),(k1=s1.props&&s1.props.onVnodeUpdated)&&r2(()=>D2(k1,h1,s1,g1),I)}else{let s1;const{el:n1,props:r1}=m,{bm:h1,m:g1,parent:E1}=y,k1=U8(m);if(Z5(y,!1),h1&&Kt(h1),!k1&&(s1=r1&&r1.onVnodeBeforeMount)&&D2(s1,E1,m),Z5(y,!0),n1&&v1){const q1=()=>{y.subTree=Yt(y),v1(n1,y.subTree,y,I,null)};k1?m.type.__asyncLoader().then(()=>!y.isUnmounted&&q1()):q1()}else{const q1=y.subTree=Yt(y);p(null,q1,L,S,y,I,B),m.el=q1.el}if(g1&&r2(g1,I),!k1&&(s1=r1&&r1.onVnodeMounted)){const q1=m;r2(()=>D2(s1,E1,q1),I)}(m.shapeFlag&256||E1&&U8(E1.vnode)&&E1.vnode.shapeFlag&256)&&y.a&&r2(y.a,I),y.isMounted=!0,m=L=S=null}},G=y.effect=new he(H,()=>ye(j),y.scope),j=y.update=()=>G.run();j.id=y.uid,Z5(y,!0),j()},q=(y,m,L)=>{m.component=y;const S=y.vnode.props;y.vnode=m,y.next=null,Lo(y,m.props,S,L),zo(y,m.children,L),S8(),m9(),O8()},W=(y,m,L,S,I,B,J,H,G=!1)=>{const j=y&&y.children,s1=y?y.shapeFlag:0,n1=m.children,{patchFlag:r1,shapeFlag:h1}=m;if(r1>0){if(r1&128){N(j,n1,L,S,I,B,J,H,G);return}else if(r1&256){e1(j,n1,L,S,I,B,J,H,G);return}}h1&8?(s1&16&&x(j,I,B),n1!==j&&u(L,n1)):s1&16?h1&16?N(j,n1,L,S,I,B,J,H,G):x(j,I,B,!0):(s1&8&&u(L,""),h1&16&&z(n1,L,S,I,B,J,H,G))},e1=(y,m,L,S,I,B,J,H,G)=>{y=y||a8,m=m||a8;const j=y.length,s1=m.length,n1=Math.min(j,s1);let r1;for(r1=0;r1<n1;r1++){const h1=m[r1]=G?C5(m[r1]):$2(m[r1]);p(y[r1],h1,L,null,I,B,J,H,G)}j>s1?x(y,I,B,!0,!1,n1):z(m,L,S,I,B,J,H,G,n1)},N=(y,m,L,S,I,B,J,H,G)=>{let j=0;const s1=m.length;let n1=y.length-1,r1=s1-1;for(;j<=n1&&j<=r1;){const h1=y[j],g1=m[j]=G?C5(m[j]):$2(m[j]);if($8(h1,g1))p(h1,g1,L,null,I,B,J,H,G);else break;j++}for(;j<=n1&&j<=r1;){const h1=y[n1],g1=m[r1]=G?C5(m[r1]):$2(m[r1]);if($8(h1,g1))p(h1,g1,L,null,I,B,J,H,G);else break;n1--,r1--}if(j>n1){if(j<=r1){const h1=r1+1,g1=h1<s1?m[h1].el:S;for(;j<=r1;)p(null,m[j]=G?C5(m[j]):$2(m[j]),L,g1,I,B,J,H,G),j++}}else if(j>r1)for(;j<=n1;)a1(y[j],I,B,!0),j++;else{const h1=j,g1=j,E1=new Map;for(j=g1;j<=r1;j++){const h2=m[j]=G?C5(m[j]):$2(m[j]);h2.key!=null&&E1.set(h2.key,j)}let k1,q1=0;const L2=r1-g1+1;let t8=!1,r9=0;const D8=new Array(L2);for(j=0;j<L2;j++)D8[j]=0;for(j=h1;j<=n1;j++){const h2=y[j];if(q1>=L2){a1(h2,I,B,!0);continue}let A2;if(h2.key!=null)A2=E1.get(h2.key);else for(k1=g1;k1<=r1;k1++)if(D8[k1-g1]===0&&$8(h2,m[k1])){A2=k1;break}A2===void 0?a1(h2,I,B,!0):(D8[A2-g1]=j+1,A2>=r9?r9=A2:t8=!0,p(h2,m[A2],L,null,I,B,J,H,G),q1++)}const l9=t8?Ro(D8):a8;for(k1=l9.length-1,j=L2-1;j>=0;j--){const h2=g1+j,A2=m[h2],a9=h2+1<s1?m[h2+1].el:S;D8[j]===0?p(null,A2,L,a9,I,B,J,H,G):t8&&(k1<0||j!==l9[k1]?Q(A2,L,a9,2):k1--)}}},Q=(y,m,L,S,I=null)=>{const{el:B,type:J,transition:H,children:G,shapeFlag:j}=y;if(j&6){Q(y.component.subTree,m,L,S);return}if(j&128){y.suspense.move(m,L,S);return}if(j&64){J.move(y,m,L,o1);return}if(J===R1){n(B,m,L);for(let n1=0;n1<G.length;n1++)Q(G[n1],m,L,S);n(y.anchor,m,L);return}if(J===U6){b(y,m,L);return}if(S!==2&&j&1&&H)if(S===0)H.beforeEnter(B),n(B,m,L),r2(()=>H.enter(B),I);else{const{leave:n1,delayLeave:r1,afterLeave:h1}=H,g1=()=>n(B,m,L),E1=()=>{n1(B,()=>{g1(),h1&&h1()})};r1?r1(B,g1,E1):E1()}else n(B,m,L)},a1=(y,m,L,S=!1,I=!1)=>{const{type:B,props:J,ref:H,children:G,dynamicChildren:j,shapeFlag:s1,patchFlag:n1,dirs:r1}=y;if(H!=null&&j4(H,null,L,y,!0),s1&256){m.ctx.deactivate(y);return}const h1=s1&1&&r1,g1=!U8(y);let E1;if(g1&&(E1=J&&J.onVnodeBeforeUnmount)&&D2(E1,m,y),s1&6)R(y.component,L,S);else{if(s1&128){y.suspense.unmount(L,S);return}h1&&T5(y,null,m,"beforeUnmount"),s1&64?y.type.remove(y,m,L,I,o1,S):j&&(B!==R1||n1>0&&n1&64)?x(j,m,L,!1,!0):(B===R1&&n1&384||!I&&s1&16)&&x(G,m,L),S&&c1(y)}(g1&&(E1=J&&J.onVnodeUnmounted)||h1)&&r2(()=>{E1&&D2(E1,m,y),h1&&T5(y,null,m,"unmounted")},L)},c1=y=>{const{type:m,el:L,anchor:S,transition:I}=y;if(m===R1){w1(L,S);return}if(m===U6){P(y);return}const B=()=>{o(L),I&&!I.persisted&&I.afterLeave&&I.afterLeave()};if(y.shapeFlag&1&&I&&!I.persisted){const{leave:J,delayLeave:H}=I,G=()=>J(L,B);H?H(y.el,B,G):G()}else B()},w1=(y,m)=>{let L;for(;y!==m;)L=f(y),o(y),y=L;o(m)},R=(y,m,L)=>{const{bum:S,scope:I,update:B,subTree:J,um:H}=y;S&&Kt(S),I.stop(),B&&(B.active=!1,a1(J,y,m,L)),H&&r2(H,m),r2(()=>{y.isUnmounted=!0},m),m&&m.pendingBranch&&!m.isUnmounted&&y.asyncDep&&!y.asyncResolved&&y.suspenseId===m.pendingId&&(m.deps--,m.deps===0&&m.resolve())},x=(y,m,L,S=!1,I=!1,B=0)=>{for(let J=B;J<y.length;J++)a1(y[J],m,L,S,I)},A=y=>y.shapeFlag&6?A(y.component.subTree):y.shapeFlag&128?y.suspense.next():f(y.anchor||y.el),t1=(y,m,L)=>{y==null?m._vnode&&a1(m._vnode,null,null,!0):p(m._vnode||null,y,m,null,null,null,L),m9(),P0(),m._vnode=y},o1={p,um:a1,m:Q,r:c1,mt:T,mc:z,pc:W,pbc:V,n:A,o:i};let y1,v1;return t&&([y1,v1]=t(o1)),{render:t1,hydrate:y1,createApp:Po(t1,y1)}}function Z5({effect:i,update:t},e){i.allowRecurse=t.allowRecurse=e}function G0(i,t,e=!1){const n=i.children,o=t.children;if(f1(n)&&f1(o))for(let s=0;s<n.length;s++){const r=n[s];let l=o[s];l.shapeFlag&1&&!l.dynamicChildren&&((l.patchFlag<=0||l.patchFlag===32)&&(l=o[s]=C5(o[s]),l.el=r.el),e||G0(r,l)),l.type===xt&&(l.el=r.el)}}function Ro(i){const t=i.slice(),e=[0];let n,o,s,r,l;const a=i.length;for(n=0;n<a;n++){const c=i[n];if(c!==0){if(o=e[e.length-1],i[o]<c){t[n]=o,e.push(n);continue}for(s=0,r=e.length-1;s<r;)l=s+r>>1,i[e[l]]<c?s=l+1:r=l;c<i[e[s]]&&(s>0&&(t[n]=e[s-1]),e[s]=n)}}for(s=e.length,r=e[s-1];s-- >0;)e[s]=r,r=t[r];return e}const Io=i=>i.__isTeleport,R1=Symbol(void 0),xt=Symbol(void 0),L5=Symbol(void 0),U6=Symbol(void 0),G8=[];let z2=null;function Y(i=!1){G8.push(z2=i?null:[])}function To(){G8.pop(),z2=G8[G8.length-1]||null}let a6=1;function k9(i){a6+=i}function K0(i){return i.dynamicChildren=a6>0?z2||a8:null,To(),a6>0&&z2&&z2.push(i),i}function i1(i,t,e,n,o,s){return K0(w(i,t,e,n,o,s,!0))}function U5(i,t,e,n,o){return K0(u1(i,t,e,n,o,!0))}function lt(i){return i?i.__v_isVNode===!0:!1}function $8(i,t){return i.type===t.type&&i.key===t.key}const kt="__vInternal",Y0=({key:i})=>i??null,W6=({ref:i,ref_key:t,ref_for:e})=>i!=null?G1(i)||j1(i)||p1(i)?{i:J1,r:i,k:t,f:!!e}:i:null;function w(i,t=null,e=null,n=0,o=null,s=i===R1?0:1,r=!1,l=!1){const a={__v_isVNode:!0,__v_skip:!0,type:i,props:t,key:t&&Y0(t),ref:t&&W6(t),scopeId:Mt,slotScopeIds:null,children:e,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:n,dynamicProps:o,dynamicChildren:null,appContext:null,ctx:J1};return l?(Me(a,e),s&128&&i.normalize(a)):e&&(a.shapeFlag|=G1(e)?8:16),a6>0&&!r&&z2&&(a.patchFlag>0||s&6)&&a.patchFlag!==32&&z2.push(a),a}const u1=Zo;function Zo(i,t=null,e=null,n=0,o=null,s=!1){if((!i||i===$0)&&(i=L5),lt(i)){const l=g8(i,t,!0);return e&&Me(l,e),a6>0&&!s&&z2&&(l.shapeFlag&6?z2[z2.indexOf(i)]=l:z2.push(l)),l.patchFlag|=-2,l}if(Go(i)&&(i=i.__vccOpts),t){t=Ao(t);let{class:l,style:a}=t;l&&!G1(l)&&(t.class=t2(l)),A1(a)&&(_0(a)&&!f1(a)&&(a=o2({},a)),t.style=B1(a))}const r=G1(i)?1:no(i)?128:Io(i)?64:A1(i)?4:p1(i)?2:0;return w(i,t,e,n,o,r,s,!0)}function Ao(i){return i?_0(i)||kt in i?o2({},i):i:null}function g8(i,t,e=!1){const{props:n,ref:o,patchFlag:s,children:r}=i,l=t?$o(n||{},t):n;return{__v_isVNode:!0,__v_skip:!0,type:i.type,props:l,key:l&&Y0(l),ref:t&&t.ref?e&&o?f1(o)?o.concat(W6(t)):[o,W6(t)]:W6(t):o,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:r,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:t&&i.type!==R1?s===-1?16:s|16:s,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&g8(i.ssContent),ssFallback:i.ssFallback&&g8(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce}}function c6(i=" ",t=0){return u1(xt,null,i,t)}function J5(i,t){const e=u1(U6,null,i);return e.staticCount=t,e}function Do(i="",t=!1){return t?(Y(),U5(L5,null,i)):u1(L5,null,i)}function $2(i){return i==null||typeof i=="boolean"?u1(L5):f1(i)?u1(R1,null,i.slice()):typeof i=="object"?C5(i):u1(xt,null,String(i))}function C5(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:g8(i)}function Me(i,t){let e=0;const{shapeFlag:n}=i;if(t==null)t=null;else if(f1(t))e=16;else if(typeof t=="object")if(n&65){const o=t.default;o&&(o._c&&(o._d=!1),Me(i,o()),o._c&&(o._d=!0));return}else{e=32;const o=t._;!o&&!(kt in t)?t._ctx=J1:o===3&&J1&&(J1.slots._===1?t._=1:(t._=2,i.patchFlag|=1024))}else p1(t)?(t={default:t,_ctx:J1},e=32):(t=String(t),n&64?(e=16,t=[c6(t)]):e=8);i.children=t,i.shapeFlag|=e}function $o(...i){const t={};for(let e=0;e<i.length;e++){const n=i[e];for(const o in n)if(o==="class")t.class!==n.class&&(t.class=t2([t.class,n.class]));else if(o==="style")t.style=B1([t.style,n.style]);else if(vt(o)){const s=t[o],r=n[o];r&&s!==r&&!(f1(s)&&s.includes(r))&&(t[o]=s?[].concat(s,r):r)}else o!==""&&(t[o]=n[o])}return t}function D2(i,t,e,n=null){S2(i,t,7,[e,n])}const Fo=W0();let jo=0;function No(i,t,e){const n=i.type,o=(t?t.appContext:i.appContext)||Fo,s={uid:jo++,vnode:i,type:n,parent:t,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new r0(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:H0(n,o),emitsOptions:O0(n,o),emit:null,emitted:null,propsDefaults:O1,inheritAttrs:n.inheritAttrs,ctx:O1,data:O1,props:O1,attrs:O1,slots:O1,refs:O1,setupState:O1,setupContext:null,suspense:e,suspenseId:e?e.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=t?t.root:s,s.emit=Jn.bind(null,s),i.ce&&i.ce(s),s}let H1=null;const Bo=()=>H1||J1,_8=i=>{H1=i,i.scope.on()},V5=()=>{H1&&H1.scope.off(),H1=null};function X0(i){return i.vnode.shapeFlag&4}let u6=!1;function Ho(i,t=!1){u6=t;const{props:e,children:n}=i.vnode,o=X0(i);Mo(i,e,o,t),ko(i,n);const s=o?Vo(i,t):void 0;return u6=!1,s}function Vo(i,t){const e=i.type;i.accessCache=Object.create(null),i.proxy=m8(new Proxy(i.ctx,mo));const{setup:n}=e;if(n){const o=i.setupContext=n.length>1?Uo(i):null;_8(i),S8();const s=b5(n,i,0,[i.props,o]);if(O8(),V5(),n0(s)){if(s.then(V5,V5),t)return s.then(r=>{z9(i,r,t)}).catch(r=>{bt(r,i,0)});i.asyncDep=s}else z9(i,s,t)}else J0(i,t)}function z9(i,t,e){p1(t)?i.type.__ssrInlineRender?i.ssrRender=t:i.render=t:A1(t)&&(i.setupState=L0(t)),J0(i,e)}let E9;function J0(i,t,e){const n=i.type;if(!i.render){if(!t&&E9&&!n.render){const o=n.template||be(i).template;if(o){const{isCustomElement:s,compilerOptions:r}=i.appContext.config,{delimiters:l,compilerOptions:a}=n,c=o2(o2({isCustomElement:s,delimiters:l},r),a);n.render=E9(o,c)}}i.render=n.render||P2}_8(i),S8(),yo(i),O8(),V5()}function qo(i){return new Proxy(i.attrs,{get(t,e){return u2(i,"get","$attrs"),t[e]}})}function Uo(i){const t=n=>{i.exposed=n||{}};let e;return{get attrs(){return e||(e=qo(i))},slots:i.slots,emit:i.emit,expose:t}}function zt(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(L0(m8(i.exposed)),{get(t,e){if(e in t)return t[e];if(e in W8)return W8[e](i)},has(t,e){return e in t||e in W8}}))}function Wo(i,t=!0){return p1(i)?i.displayName||i.name:i.name||t&&i.__name}function Go(i){return p1(i)&&"__vccOpts"in i}const m1=(i,t)=>Un(i,t,u6);function Q0(i,t,e){const n=arguments.length;return n===2?A1(t)&&!f1(t)?lt(t)?u1(i,null,[t]):u1(i,t):u1(i,null,t):(n>3?e=Array.prototype.slice.call(arguments,2):n===3&&lt(e)&&(e=[e]),u1(i,t,e))}const Ko=Symbol(""),Yo=()=>p2(Ko),Xo="3.2.47",Jo="http://www.w3.org/2000/svg",F5=typeof document<"u"?document:null,P9=F5&&F5.createElement("template"),Qo={insert:(i,t,e)=>{t.insertBefore(i,e||null)},remove:i=>{const t=i.parentNode;t&&t.removeChild(i)},createElement:(i,t,e,n)=>{const o=t?F5.createElementNS(Jo,i):F5.createElement(i,e?{is:e}:void 0);return i==="select"&&n&&n.multiple!=null&&o.setAttribute("multiple",n.multiple),o},createText:i=>F5.createTextNode(i),createComment:i=>F5.createComment(i),setText:(i,t)=>{i.nodeValue=t},setElementText:(i,t)=>{i.textContent=t},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,querySelector:i=>F5.querySelector(i),setScopeId(i,t){i.setAttribute(t,"")},insertStaticContent(i,t,e,n,o,s){const r=e?e.previousSibling:t.lastChild;if(o&&(o===s||o.nextSibling))for(;t.insertBefore(o.cloneNode(!0),e),!(o===s||!(o=o.nextSibling)););else{P9.innerHTML=n?`<svg>${i}</svg>`:i;const l=P9.content;if(n){const a=l.firstChild;for(;a.firstChild;)l.appendChild(a.firstChild);l.removeChild(a)}t.insertBefore(l,e)}return[r?r.nextSibling:t.firstChild,e?e.previousSibling:t.lastChild]}};function ts(i,t,e){const n=i._vtc;n&&(t=(t?[t,...n]:[...n]).join(" ")),t==null?i.removeAttribute("class"):e?i.setAttribute("class",t):i.className=t}function es(i,t,e){const n=i.style,o=G1(e);if(e&&!o){if(t&&!G1(t))for(const s in t)e[s]==null&&N4(n,s,"");for(const s in e)N4(n,s,e[s])}else{const s=n.display;o?t!==e&&(n.cssText=e):t&&i.removeAttribute("style"),"_vod"in i&&(n.display=s)}}const S9=/\s*!important$/;function N4(i,t,e){if(f1(e))e.forEach(n=>N4(i,t,n));else if(e==null&&(e=""),t.startsWith("--"))i.setProperty(t,e);else{const n=is(i,t);S9.test(e)?i.setProperty(P8(n),e.replace(S9,""),"important"):i[n]=e}}const O9=["Webkit","Moz","ms"],Jt={};function is(i,t){const e=Jt[t];if(e)return e;let n=H2(t);if(n!=="filter"&&n in i)return Jt[t]=n;n=gt(n);for(let o=0;o<O9.length;o++){const s=O9[o]+n;if(s in i)return Jt[t]=s}return t}const R9="http://www.w3.org/1999/xlink";function ns(i,t,e,n,o){if(n&&t.startsWith("xlink:"))e==null?i.removeAttributeNS(R9,t.slice(6,t.length)):i.setAttributeNS(R9,t,e);else{const s=tn(t);e==null||s&&!t0(e)?i.removeAttribute(t):i.setAttribute(t,s?"":e)}}function os(i,t,e,n,o,s,r){if(t==="innerHTML"||t==="textContent"){n&&r(n,o,s),i[t]=e??"";return}if(t==="value"&&i.tagName!=="PROGRESS"&&!i.tagName.includes("-")){i._value=e;const a=e??"";(i.value!==a||i.tagName==="OPTION")&&(i.value=a),e==null&&i.removeAttribute(t);return}let l=!1;if(e===""||e==null){const a=typeof i[t];a==="boolean"?e=t0(e):e==null&&a==="string"?(e="",l=!0):a==="number"&&(e=0,l=!0)}try{i[t]=e}catch{}l&&i.removeAttribute(t)}function ss(i,t,e,n){i.addEventListener(t,e,n)}function rs(i,t,e,n){i.removeEventListener(t,e,n)}function ls(i,t,e,n,o=null){const s=i._vei||(i._vei={}),r=s[t];if(n&&r)r.value=n;else{const[l,a]=as(t);if(n){const c=s[t]=hs(n,o);ss(i,l,c,a)}else r&&(rs(i,l,r,a),s[t]=void 0)}}const I9=/(?:Once|Passive|Capture)$/;function as(i){let t;if(I9.test(i)){t={};let n;for(;n=i.match(I9);)i=i.slice(0,i.length-n[0].length),t[n[0].toLowerCase()]=!0}return[i[2]===":"?i.slice(3):P8(i.slice(2)),t]}let Qt=0;const cs=Promise.resolve(),us=()=>Qt||(cs.then(()=>Qt=0),Qt=Date.now());function hs(i,t){const e=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=e.attached)return;S2(fs(n,e.value),t,5,[n])};return e.value=i,e.attached=us(),e}function fs(i,t){if(f1(t)){const e=i.stopImmediatePropagation;return i.stopImmediatePropagation=()=>{e.call(i),i._stopped=!0},t.map(n=>o=>!o._stopped&&n&&n(o))}else return t}const T9=/^on[a-z]/,ds=(i,t,e,n,o=!1,s,r,l,a)=>{t==="class"?ts(i,n,o):t==="style"?es(i,e,n):vt(t)?re(t)||ls(i,t,e,n,r):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):Cs(i,t,n,o))?os(i,t,n,s,r,l,a):(t==="true-value"?i._trueValue=n:t==="false-value"&&(i._falseValue=n),ns(i,t,n,o))};function Cs(i,t,e,n){return n?!!(t==="innerHTML"||t==="textContent"||t in i&&T9.test(t)&&p1(e)):t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&i.tagName==="INPUT"||t==="type"&&i.tagName==="TEXTAREA"||T9.test(t)&&G1(e)?!1:t in i}const n5={beforeMount(i,{value:t},{transition:e}){i._vod=i.style.display==="none"?"":i.style.display,e&&t?e.beforeEnter(i):F8(i,t)},mounted(i,{value:t},{transition:e}){e&&t&&e.enter(i)},updated(i,{value:t,oldValue:e},{transition:n}){!t!=!e&&(n?t?(n.beforeEnter(i),F8(i,!0),n.enter(i)):n.leave(i,()=>{F8(i,!1)}):F8(i,t))},beforeUnmount(i,{value:t}){F8(i,t)}};function F8(i,t){i.style.display=t?i._vod:"none"}const ps=o2({patchProp:ds},Qo);let Z9;function vs(){return Z9||(Z9=So(ps))}const ms=(...i)=>{const t=vs().createApp(...i),{mount:e}=t;return t.mount=n=>{const o=ys(n);if(!o)return;const s=t._component;!p1(s)&&!s.render&&!s.template&&(s.template=o.innerHTML),o.innerHTML="";const r=e(o,!1,o instanceof SVGElement);return o instanceof Element&&(o.removeAttribute("v-cloak"),o.setAttribute("data-v-app","")),r},t};function ys(i){return G1(i)?document.querySelector(i):i}var gs=!1;/*!
  * pinia v2.0.30
  * (c) 2023 Eduardo San Martin Morote
  * @license MIT
  */let t7;const Et=i=>t7=i,e7=Symbol();function B4(i){return i&&typeof i=="object"&&Object.prototype.toString.call(i)==="[object Object]"&&typeof i.toJSON!="function"}var K8;(function(i){i.direct="direct",i.patchObject="patch object",i.patchFunction="patch function"})(K8||(K8={}));function _s(){const i=l0(!0),t=i.run(()=>z1({}));let e=[],n=[];const o=m8({install(s){Et(o),o._a=s,s.provide(e7,o),s.config.globalProperties.$pinia=o,n.forEach(r=>e.push(r)),n=[]},use(s){return!this._a&&!gs?n.push(s):e.push(s),this},_p:e,_a:null,_e:i,_s:new Map,state:t});return o}const i7=()=>{};function A9(i,t,e,n=i7){i.push(t);const o=()=>{const s=i.indexOf(t);s>-1&&(i.splice(s,1),n())};return!e&&a0()&&hn(o),o}function e8(i,...t){i.slice().forEach(e=>{e(...t)})}function H4(i,t){i instanceof Map&&t instanceof Map&&t.forEach((e,n)=>i.set(n,e)),i instanceof Set&&t instanceof Set&&t.forEach(i.add,i);for(const e in t){if(!t.hasOwnProperty(e))continue;const n=t[e],o=i[e];B4(o)&&B4(n)&&i.hasOwnProperty(e)&&!j1(n)&&!i5(n)?i[e]=H4(o,n):i[e]=n}return i}const bs=Symbol();function ws(i){return!B4(i)||!i.hasOwnProperty(bs)}const{assign:p5}=Object;function Ms(i){return!!(j1(i)&&i.effect)}function Ls(i,t,e,n){const{state:o,actions:s,getters:r}=t,l=e.state.value[i];let a;function c(){l||(e.state.value[i]=o?o():{});const u=Hn(e.state.value[i]);return p5(u,s,Object.keys(r||{}).reduce((h,f)=>(h[f]=m8(m1(()=>{Et(e);const C=e._s.get(i);return r[f].call(C,C)})),h),{}))}return a=n7(i,c,t,e,n,!0),a.$reset=function(){const h=o?o():{};this.$patch(f=>{p5(f,h)})},a}function n7(i,t,e={},n,o,s){let r;const l=p5({actions:{}},e),a={deep:!0};let c,u,h=m8([]),f=m8([]),C;const d=n.state.value[i];!s&&!d&&(n.state.value[i]={}),z1({});let p;function v(M){let z;c=u=!1,typeof M=="function"?(M(n.state.value[i]),z={type:K8.patchFunction,storeId:i,events:C}):(H4(n.state.value[i],M),z={type:K8.patchObject,payload:M,storeId:i,events:C});const X=p=Symbol();w6().then(()=>{p===X&&(c=!0)}),u=!0,e8(h,z,n.state.value[i])}const g=i7;function _(){r.stop(),h=[],f=[],n._s.delete(i)}function b(M,z){return function(){Et(n);const X=Array.from(arguments),V=[],Z=[];function F(k){V.push(k)}function U(k){Z.push(k)}e8(f,{args:X,name:M,store:E,after:F,onError:U});let T;try{T=z.apply(this&&this.$id===i?this:E,X)}catch(k){throw e8(Z,k),k}return T instanceof Promise?T.then(k=>(e8(V,k),k)).catch(k=>(e8(Z,k),Promise.reject(k))):(e8(V,T),T)}}const P={_p:n,$id:i,$onAction:A9.bind(null,f),$patch:v,$reset:g,$subscribe(M,z={}){const X=A9(h,M,z.detached,()=>V()),V=r.run(()=>O2(()=>n.state.value[i],Z=>{(z.flush==="sync"?u:c)&&M({storeId:i,type:K8.direct,events:C},Z)},p5({},a,z)));return X},$dispose:_},E=P5(P);n._s.set(i,E);const O=n._e.run(()=>(r=l0(),r.run(()=>t())));for(const M in O){const z=O[M];if(j1(z)&&!Ms(z)||i5(z))s||(d&&ws(z)&&(j1(z)?z.value=d[M]:H4(z,d[M])),n.state.value[i][M]=z);else if(typeof z=="function"){const X=b(M,z);O[M]=X,l.actions[M]=z}}return p5(E,O),p5(_1(E),O),Object.defineProperty(E,"$state",{get:()=>n.state.value[i],set:M=>{v(z=>{p5(z,M)})}}),n._p.forEach(M=>{p5(E,r.run(()=>M({store:E,app:n._a,pinia:n,options:l})))}),d&&s&&e.hydrate&&e.hydrate(E.$state,d),c=!0,u=!0,E}function Le(i,t,e){let n,o;const s=typeof t=="function";typeof i=="string"?(n=i,o=s?e:t):(o=i,n=i.id);function r(l,a){const c=Bo();return l=l||c&&p2(e7,null),l&&Et(l),l=t7,l._s.has(n)||(s?n7(n,t,o,l):Ls(n,o,l)),l._s.get(n)}return r.$id=n,r}function V2(i){{i=_1(i);const t={};for(const e in i){const n=i[e];(j1(n)||i5(n))&&(t[e]=x0(i,e))}return t}}/*!
  * vue-router v4.1.6
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */const o8=typeof window<"u";function xs(i){return i.__esModule||i[Symbol.toStringTag]==="Module"}const M1=Object.assign;function t4(i,t){const e={};for(const n in t){const o=t[n];e[n]=R2(o)?o.map(i):i(o)}return e}const Y8=()=>{},R2=Array.isArray,ks=/\/$/,zs=i=>i.replace(ks,"");function e4(i,t,e="/"){let n,o={},s="",r="";const l=t.indexOf("#");let a=t.indexOf("?");return l<a&&l>=0&&(a=-1),a>-1&&(n=t.slice(0,a),s=t.slice(a+1,l>-1?l:t.length),o=i(s)),l>-1&&(n=n||t.slice(0,l),r=t.slice(l,t.length)),n=Os(n??t,e),{fullPath:n+(s&&"?")+s+r,path:n,query:o,hash:r}}function Es(i,t){const e=t.query?i(t.query):"";return t.path+(e&&"?")+e+(t.hash||"")}function D9(i,t){return!t||!i.toLowerCase().startsWith(t.toLowerCase())?i:i.slice(t.length)||"/"}function Ps(i,t,e){const n=t.matched.length-1,o=e.matched.length-1;return n>-1&&n===o&&b8(t.matched[n],e.matched[o])&&o7(t.params,e.params)&&i(t.query)===i(e.query)&&t.hash===e.hash}function b8(i,t){return(i.aliasOf||i)===(t.aliasOf||t)}function o7(i,t){if(Object.keys(i).length!==Object.keys(t).length)return!1;for(const e in i)if(!Ss(i[e],t[e]))return!1;return!0}function Ss(i,t){return R2(i)?$9(i,t):R2(t)?$9(t,i):i===t}function $9(i,t){return R2(t)?i.length===t.length&&i.every((e,n)=>e===t[n]):i.length===1&&i[0]===t}function Os(i,t){if(i.startsWith("/"))return i;if(!i)return t;const e=t.split("/"),n=i.split("/");let o=e.length-1,s,r;for(s=0;s<n.length;s++)if(r=n[s],r!==".")if(r==="..")o>1&&o--;else break;return e.slice(0,o).join("/")+"/"+n.slice(s-(s===n.length?1:0)).join("/")}var h6;(function(i){i.pop="pop",i.push="push"})(h6||(h6={}));var X8;(function(i){i.back="back",i.forward="forward",i.unknown=""})(X8||(X8={}));function Rs(i){if(!i)if(o8){const t=document.querySelector("base");i=t&&t.getAttribute("href")||"/",i=i.replace(/^\w+:\/\/[^\/]+/,"")}else i="/";return i[0]!=="/"&&i[0]!=="#"&&(i="/"+i),zs(i)}const Is=/^[^#]+#/;function Ts(i,t){return i.replace(Is,"#")+t}function Zs(i,t){const e=document.documentElement.getBoundingClientRect(),n=i.getBoundingClientRect();return{behavior:t.behavior,left:n.left-e.left-(t.left||0),top:n.top-e.top-(t.top||0)}}const Pt=()=>({left:window.pageXOffset,top:window.pageYOffset});function As(i){let t;if("el"in i){const e=i.el,n=typeof e=="string"&&e.startsWith("#"),o=typeof e=="string"?n?document.getElementById(e.slice(1)):document.querySelector(e):e;if(!o)return;t=Zs(o,i)}else t=i;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.pageXOffset,t.top!=null?t.top:window.pageYOffset)}function F9(i,t){return(history.state?history.state.position-t:-1)+i}const V4=new Map;function Ds(i,t){V4.set(i,t)}function $s(i){const t=V4.get(i);return V4.delete(i),t}let Fs=()=>location.protocol+"//"+location.host;function s7(i,t){const{pathname:e,search:n,hash:o}=t,s=i.indexOf("#");if(s>-1){let l=o.includes(i.slice(s))?i.slice(s).length:1,a=o.slice(l);return a[0]!=="/"&&(a="/"+a),D9(a,"")}return D9(e,i)+n+o}function js(i,t,e,n){let o=[],s=[],r=null;const l=({state:f})=>{const C=s7(i,location),d=e.value,p=t.value;let v=0;if(f){if(e.value=C,t.value=f,r&&r===d){r=null;return}v=p?f.position-p.position:0}else n(C);o.forEach(g=>{g(e.value,d,{delta:v,type:h6.pop,direction:v?v>0?X8.forward:X8.back:X8.unknown})})};function a(){r=e.value}function c(f){o.push(f);const C=()=>{const d=o.indexOf(f);d>-1&&o.splice(d,1)};return s.push(C),C}function u(){const{history:f}=window;f.state&&f.replaceState(M1({},f.state,{scroll:Pt()}),"")}function h(){for(const f of s)f();s=[],window.removeEventListener("popstate",l),window.removeEventListener("beforeunload",u)}return window.addEventListener("popstate",l),window.addEventListener("beforeunload",u),{pauseListeners:a,listen:c,destroy:h}}function j9(i,t,e,n=!1,o=!1){return{back:i,current:t,forward:e,replaced:n,position:window.history.length,scroll:o?Pt():null}}function Ns(i){const{history:t,location:e}=window,n={value:s7(i,e)},o={value:t.state};o.value||s(n.value,{back:null,current:n.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function s(a,c,u){const h=i.indexOf("#"),f=h>-1?(e.host&&document.querySelector("base")?i:i.slice(h))+a:Fs()+i+a;try{t[u?"replaceState":"pushState"](c,"",f),o.value=c}catch(C){console.error(C),e[u?"replace":"assign"](f)}}function r(a,c){const u=M1({},t.state,j9(o.value.back,a,o.value.forward,!0),c,{position:o.value.position});s(a,u,!0),n.value=a}function l(a,c){const u=M1({},o.value,t.state,{forward:a,scroll:Pt()});s(u.current,u,!0);const h=M1({},j9(n.value,a,null),{position:u.position+1},c);s(a,h,!1),n.value=a}return{location:n,state:o,push:l,replace:r}}function Bs(i){i=Rs(i);const t=Ns(i),e=js(i,t.state,t.location,t.replace);function n(s,r=!0){r||e.pauseListeners(),history.go(s)}const o=M1({location:"",base:i,go:n,createHref:Ts.bind(null,i)},t,e);return Object.defineProperty(o,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(o,"state",{enumerable:!0,get:()=>t.state.value}),o}function Hs(i){return i=location.host?i||location.pathname+location.search:"",i.includes("#")||(i+="#"),Bs(i)}function Vs(i){return typeof i=="string"||i&&typeof i=="object"}function r7(i){return typeof i=="string"||typeof i=="symbol"}const d5={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},l7=Symbol("");var N9;(function(i){i[i.aborted=4]="aborted",i[i.cancelled=8]="cancelled",i[i.duplicated=16]="duplicated"})(N9||(N9={}));function w8(i,t){return M1(new Error,{type:i,[l7]:!0},t)}function K2(i,t){return i instanceof Error&&l7 in i&&(t==null||!!(i.type&t))}const B9="[^/]+?",qs={sensitive:!1,strict:!1,start:!0,end:!0},Us=/[.+*?^${}()[\]/\\]/g;function Ws(i,t){const e=M1({},qs,t),n=[];let o=e.start?"^":"";const s=[];for(const c of i){const u=c.length?[]:[90];e.strict&&!c.length&&(o+="/");for(let h=0;h<c.length;h++){const f=c[h];let C=40+(e.sensitive?.25:0);if(f.type===0)h||(o+="/"),o+=f.value.replace(Us,"\\$&"),C+=40;else if(f.type===1){const{value:d,repeatable:p,optional:v,regexp:g}=f;s.push({name:d,repeatable:p,optional:v});const _=g||B9;if(_!==B9){C+=10;try{new RegExp(`(${_})`)}catch(P){throw new Error(`Invalid custom RegExp for param "${d}" (${_}): `+P.message)}}let b=p?`((?:${_})(?:/(?:${_}))*)`:`(${_})`;h||(b=v&&c.length<2?`(?:/${b})`:"/"+b),v&&(b+="?"),o+=b,C+=20,v&&(C+=-8),p&&(C+=-20),_===".*"&&(C+=-50)}u.push(C)}n.push(u)}if(e.strict&&e.end){const c=n.length-1;n[c][n[c].length-1]+=.7000000000000001}e.strict||(o+="/?"),e.end?o+="$":e.strict&&(o+="(?:/|$)");const r=new RegExp(o,e.sensitive?"":"i");function l(c){const u=c.match(r),h={};if(!u)return null;for(let f=1;f<u.length;f++){const C=u[f]||"",d=s[f-1];h[d.name]=C&&d.repeatable?C.split("/"):C}return h}function a(c){let u="",h=!1;for(const f of i){(!h||!u.endsWith("/"))&&(u+="/"),h=!1;for(const C of f)if(C.type===0)u+=C.value;else if(C.type===1){const{value:d,repeatable:p,optional:v}=C,g=d in c?c[d]:"";if(R2(g)&&!p)throw new Error(`Provided param "${d}" is an array but it is not repeatable (* or + modifiers)`);const _=R2(g)?g.join("/"):g;if(!_)if(v)f.length<2&&(u.endsWith("/")?u=u.slice(0,-1):h=!0);else throw new Error(`Missing required param "${d}"`);u+=_}}return u||"/"}return{re:r,score:n,keys:s,parse:l,stringify:a}}function Gs(i,t){let e=0;for(;e<i.length&&e<t.length;){const n=t[e]-i[e];if(n)return n;e++}return i.length<t.length?i.length===1&&i[0]===40+40?-1:1:i.length>t.length?t.length===1&&t[0]===40+40?1:-1:0}function Ks(i,t){let e=0;const n=i.score,o=t.score;for(;e<n.length&&e<o.length;){const s=Gs(n[e],o[e]);if(s)return s;e++}if(Math.abs(o.length-n.length)===1){if(H9(n))return 1;if(H9(o))return-1}return o.length-n.length}function H9(i){const t=i[i.length-1];return i.length>0&&t[t.length-1]<0}const Ys={type:0,value:""},Xs=/[a-zA-Z0-9_]/;function Js(i){if(!i)return[[]];if(i==="/")return[[Ys]];if(!i.startsWith("/"))throw new Error(`Invalid path "${i}"`);function t(C){throw new Error(`ERR (${e})/"${c}": ${C}`)}let e=0,n=e;const o=[];let s;function r(){s&&o.push(s),s=[]}let l=0,a,c="",u="";function h(){c&&(e===0?s.push({type:0,value:c}):e===1||e===2||e===3?(s.length>1&&(a==="*"||a==="+")&&t(`A repeatable param (${c}) must be alone in its segment. eg: '/:ids+.`),s.push({type:1,value:c,regexp:u,repeatable:a==="*"||a==="+",optional:a==="*"||a==="?"})):t("Invalid state to consume buffer"),c="")}function f(){c+=a}for(;l<i.length;){if(a=i[l++],a==="\\"&&e!==2){n=e,e=4;continue}switch(e){case 0:a==="/"?(c&&h(),r()):a===":"?(h(),e=1):f();break;case 4:f(),e=n;break;case 1:a==="("?e=2:Xs.test(a)?f():(h(),e=0,a!=="*"&&a!=="?"&&a!=="+"&&l--);break;case 2:a===")"?u[u.length-1]=="\\"?u=u.slice(0,-1)+a:e=3:u+=a;break;case 3:h(),e=0,a!=="*"&&a!=="?"&&a!=="+"&&l--,u="";break;default:t("Unknown state");break}}return e===2&&t(`Unfinished custom RegExp for param "${c}"`),h(),r(),o}function Qs(i,t,e){const n=Ws(Js(i.path),e),o=M1(n,{record:i,parent:t,children:[],alias:[]});return t&&!o.record.aliasOf==!t.record.aliasOf&&t.children.push(o),o}function tr(i,t){const e=[],n=new Map;t=U9({strict:!1,end:!0,sensitive:!1},t);function o(u){return n.get(u)}function s(u,h,f){const C=!f,d=er(u);d.aliasOf=f&&f.record;const p=U9(t,u),v=[d];if("alias"in u){const b=typeof u.alias=="string"?[u.alias]:u.alias;for(const P of b)v.push(M1({},d,{components:f?f.record.components:d.components,path:P,aliasOf:f?f.record:d}))}let g,_;for(const b of v){const{path:P}=b;if(h&&P[0]!=="/"){const E=h.record.path,O=E[E.length-1]==="/"?"":"/";b.path=h.record.path+(P&&O+P)}if(g=Qs(b,h,p),f?f.alias.push(g):(_=_||g,_!==g&&_.alias.push(g),C&&u.name&&!q9(g)&&r(u.name)),d.children){const E=d.children;for(let O=0;O<E.length;O++)s(E[O],g,f&&f.children[O])}f=f||g,(g.record.components&&Object.keys(g.record.components).length||g.record.name||g.record.redirect)&&a(g)}return _?()=>{r(_)}:Y8}function r(u){if(r7(u)){const h=n.get(u);h&&(n.delete(u),e.splice(e.indexOf(h),1),h.children.forEach(r),h.alias.forEach(r))}else{const h=e.indexOf(u);h>-1&&(e.splice(h,1),u.record.name&&n.delete(u.record.name),u.children.forEach(r),u.alias.forEach(r))}}function l(){return e}function a(u){let h=0;for(;h<e.length&&Ks(u,e[h])>=0&&(u.record.path!==e[h].record.path||!a7(u,e[h]));)h++;e.splice(h,0,u),u.record.name&&!q9(u)&&n.set(u.record.name,u)}function c(u,h){let f,C={},d,p;if("name"in u&&u.name){if(f=n.get(u.name),!f)throw w8(1,{location:u});p=f.record.name,C=M1(V9(h.params,f.keys.filter(_=>!_.optional).map(_=>_.name)),u.params&&V9(u.params,f.keys.map(_=>_.name))),d=f.stringify(C)}else if("path"in u)d=u.path,f=e.find(_=>_.re.test(d)),f&&(C=f.parse(d),p=f.record.name);else{if(f=h.name?n.get(h.name):e.find(_=>_.re.test(h.path)),!f)throw w8(1,{location:u,currentLocation:h});p=f.record.name,C=M1({},h.params,u.params),d=f.stringify(C)}const v=[];let g=f;for(;g;)v.unshift(g.record),g=g.parent;return{name:p,path:d,params:C,matched:v,meta:nr(v)}}return i.forEach(u=>s(u)),{addRoute:s,resolve:c,removeRoute:r,getRoutes:l,getRecordMatcher:o}}function V9(i,t){const e={};for(const n of t)n in i&&(e[n]=i[n]);return e}function er(i){return{path:i.path,redirect:i.redirect,name:i.name,meta:i.meta||{},aliasOf:void 0,beforeEnter:i.beforeEnter,props:ir(i),children:i.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in i?i.components||null:i.component&&{default:i.component}}}function ir(i){const t={},e=i.props||!1;if("component"in i)t.default=e;else for(const n in i.components)t[n]=typeof e=="boolean"?e:e[n];return t}function q9(i){for(;i;){if(i.record.aliasOf)return!0;i=i.parent}return!1}function nr(i){return i.reduce((t,e)=>M1(t,e.meta),{})}function U9(i,t){const e={};for(const n in i)e[n]=n in t?t[n]:i[n];return e}function a7(i,t){return t.children.some(e=>e===i||a7(i,e))}const c7=/#/g,or=/&/g,sr=/\//g,rr=/=/g,lr=/\?/g,u7=/\+/g,ar=/%5B/g,cr=/%5D/g,h7=/%5E/g,ur=/%60/g,f7=/%7B/g,hr=/%7C/g,d7=/%7D/g,fr=/%20/g;function xe(i){return encodeURI(""+i).replace(hr,"|").replace(ar,"[").replace(cr,"]")}function dr(i){return xe(i).replace(f7,"{").replace(d7,"}").replace(h7,"^")}function q4(i){return xe(i).replace(u7,"%2B").replace(fr,"+").replace(c7,"%23").replace(or,"%26").replace(ur,"`").replace(f7,"{").replace(d7,"}").replace(h7,"^")}function Cr(i){return q4(i).replace(rr,"%3D")}function pr(i){return xe(i).replace(c7,"%23").replace(lr,"%3F")}function vr(i){return i==null?"":pr(i).replace(sr,"%2F")}function at(i){try{return decodeURIComponent(""+i)}catch{}return""+i}function mr(i){const t={};if(i===""||i==="?")return t;const n=(i[0]==="?"?i.slice(1):i).split("&");for(let o=0;o<n.length;++o){const s=n[o].replace(u7," "),r=s.indexOf("="),l=at(r<0?s:s.slice(0,r)),a=r<0?null:at(s.slice(r+1));if(l in t){let c=t[l];R2(c)||(c=t[l]=[c]),c.push(a)}else t[l]=a}return t}function W9(i){let t="";for(let e in i){const n=i[e];if(e=Cr(e),n==null){n!==void 0&&(t+=(t.length?"&":"")+e);continue}(R2(n)?n.map(s=>s&&q4(s)):[n&&q4(n)]).forEach(s=>{s!==void 0&&(t+=(t.length?"&":"")+e,s!=null&&(t+="="+s))})}return t}function yr(i){const t={};for(const e in i){const n=i[e];n!==void 0&&(t[e]=R2(n)?n.map(o=>o==null?null:""+o):n==null?n:""+n)}return t}const gr=Symbol(""),G9=Symbol(""),St=Symbol(""),ke=Symbol(""),U4=Symbol("");function j8(){let i=[];function t(n){return i.push(n),()=>{const o=i.indexOf(n);o>-1&&i.splice(o,1)}}function e(){i=[]}return{add:t,list:()=>i,reset:e}}function v5(i,t,e,n,o){const s=n&&(n.enterCallbacks[o]=n.enterCallbacks[o]||[]);return()=>new Promise((r,l)=>{const a=h=>{h===!1?l(w8(4,{from:e,to:t})):h instanceof Error?l(h):Vs(h)?l(w8(2,{from:t,to:h})):(s&&n.enterCallbacks[o]===s&&typeof h=="function"&&s.push(h),r())},c=i.call(n&&n.instances[o],t,e,a);let u=Promise.resolve(c);i.length<3&&(u=u.then(a)),u.catch(h=>l(h))})}function i4(i,t,e,n){const o=[];for(const s of i)for(const r in s.components){let l=s.components[r];if(!(t!=="beforeRouteEnter"&&!s.instances[r]))if(_r(l)){const c=(l.__vccOpts||l)[t];c&&o.push(v5(c,e,n,s,r))}else{let a=l();o.push(()=>a.then(c=>{if(!c)return Promise.reject(new Error(`Couldn't resolve component "${r}" at "${s.path}"`));const u=xs(c)?c.default:c;s.components[r]=u;const f=(u.__vccOpts||u)[t];return f&&v5(f,e,n,s,r)()}))}}return o}function _r(i){return typeof i=="object"||"displayName"in i||"props"in i||"__vccOpts"in i}function K9(i){const t=p2(St),e=p2(ke),n=m1(()=>t.resolve($(i.to))),o=m1(()=>{const{matched:a}=n.value,{length:c}=a,u=a[c-1],h=e.matched;if(!u||!h.length)return-1;const f=h.findIndex(b8.bind(null,u));if(f>-1)return f;const C=Y9(a[c-2]);return c>1&&Y9(u)===C&&h[h.length-1].path!==C?h.findIndex(b8.bind(null,a[c-2])):f}),s=m1(()=>o.value>-1&&Mr(e.params,n.value.params)),r=m1(()=>o.value>-1&&o.value===e.matched.length-1&&o7(e.params,n.value.params));function l(a={}){return wr(a)?t[$(i.replace)?"replace":"push"]($(i.to)).catch(Y8):Promise.resolve()}return{route:n,href:m1(()=>n.value.href),isActive:s,isExactActive:r,navigate:l}}const br=R8({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:K9,setup(i,{slots:t}){const e=P5(K9(i)),{options:n}=p2(St),o=m1(()=>({[X9(i.activeClass,n.linkActiveClass,"router-link-active")]:e.isActive,[X9(i.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:e.isExactActive}));return()=>{const s=t.default&&t.default(e);return i.custom?s:Q0("a",{"aria-current":e.isExactActive?i.ariaCurrentValue:null,href:e.href,onClick:e.navigate,class:o.value},s)}}}),f6=br;function wr(i){if(!(i.metaKey||i.altKey||i.ctrlKey||i.shiftKey)&&!i.defaultPrevented&&!(i.button!==void 0&&i.button!==0)){if(i.currentTarget&&i.currentTarget.getAttribute){const t=i.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return i.preventDefault&&i.preventDefault(),!0}}function Mr(i,t){for(const e in t){const n=t[e],o=i[e];if(typeof n=="string"){if(n!==o)return!1}else if(!R2(o)||o.length!==n.length||n.some((s,r)=>s!==o[r]))return!1}return!0}function Y9(i){return i?i.aliasOf?i.aliasOf.path:i.path:""}const X9=(i,t,e)=>i??t??e,Lr=R8({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(i,{attrs:t,slots:e}){const n=p2(U4),o=m1(()=>i.route||n.value),s=p2(G9,0),r=m1(()=>{let c=$(s);const{matched:u}=o.value;let h;for(;(h=u[c])&&!h.components;)c++;return c}),l=m1(()=>o.value.matched[r.value]);q8(G9,m1(()=>r.value+1)),q8(gr,l),q8(U4,o);const a=z1();return O2(()=>[a.value,l.value,i.name],([c,u,h],[f,C,d])=>{u&&(u.instances[h]=c,C&&C!==u&&c&&c===f&&(u.leaveGuards.size||(u.leaveGuards=C.leaveGuards),u.updateGuards.size||(u.updateGuards=C.updateGuards))),c&&u&&(!C||!b8(u,C)||!f)&&(u.enterCallbacks[h]||[]).forEach(p=>p(c))},{flush:"post"}),()=>{const c=o.value,u=i.name,h=l.value,f=h&&h.components[u];if(!f)return J9(e.default,{Component:f,route:c});const C=h.props[u],d=C?C===!0?c.params:typeof C=="function"?C(c):C:null,v=Q0(f,M1({},d,t,{onVnodeUnmounted:g=>{g.component.isUnmounted&&(h.instances[u]=null)},ref:a}));return J9(e.default,{Component:v,route:c})||v}}});function J9(i,t){if(!i)return null;const e=i(t);return e.length===1?e[0]:e}const C7=Lr;function xr(i){const t=tr(i.routes,i),e=i.parseQuery||mr,n=i.stringifyQuery||W9,o=i.history,s=j8(),r=j8(),l=j8(),a=jn(d5);let c=d5;o8&&i.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const u=t4.bind(null,R=>""+R),h=t4.bind(null,vr),f=t4.bind(null,at);function C(R,x){let A,t1;return r7(R)?(A=t.getRecordMatcher(R),t1=x):t1=R,t.addRoute(t1,A)}function d(R){const x=t.getRecordMatcher(R);x&&t.removeRoute(x)}function p(){return t.getRoutes().map(R=>R.record)}function v(R){return!!t.getRecordMatcher(R)}function g(R,x){if(x=M1({},x||a.value),typeof R=="string"){const y=e4(e,R,x.path),m=t.resolve({path:y.path},x),L=o.createHref(y.fullPath);return M1(y,m,{params:f(m.params),hash:at(y.hash),redirectedFrom:void 0,href:L})}let A;if("path"in R)A=M1({},R,{path:e4(e,R.path,x.path).path});else{const y=M1({},R.params);for(const m in y)y[m]==null&&delete y[m];A=M1({},R,{params:h(R.params)}),x.params=h(x.params)}const t1=t.resolve(A,x),o1=R.hash||"";t1.params=u(f(t1.params));const y1=Es(n,M1({},R,{hash:dr(o1),path:t1.path})),v1=o.createHref(y1);return M1({fullPath:y1,hash:o1,query:n===W9?yr(R.query):R.query||{}},t1,{redirectedFrom:void 0,href:v1})}function _(R){return typeof R=="string"?e4(e,R,a.value.path):M1({},R)}function b(R,x){if(c!==R)return w8(8,{from:x,to:R})}function P(R){return M(R)}function E(R){return P(M1(_(R),{replace:!0}))}function O(R){const x=R.matched[R.matched.length-1];if(x&&x.redirect){const{redirect:A}=x;let t1=typeof A=="function"?A(R):A;return typeof t1=="string"&&(t1=t1.includes("?")||t1.includes("#")?t1=_(t1):{path:t1},t1.params={}),M1({query:R.query,hash:R.hash,params:"path"in t1?{}:R.params},t1)}}function M(R,x){const A=c=g(R),t1=a.value,o1=R.state,y1=R.force,v1=R.replace===!0,y=O(A);if(y)return M(M1(_(y),{state:typeof y=="object"?M1({},o1,y.state):o1,force:y1,replace:v1}),x||A);const m=A;m.redirectedFrom=x;let L;return!y1&&Ps(n,t1,A)&&(L=w8(16,{to:m,from:t1}),N(t1,t1,!0,!1)),(L?Promise.resolve(L):X(m,t1)).catch(S=>K2(S)?K2(S,2)?S:e1(S):q(S,m,t1)).then(S=>{if(S){if(K2(S,2))return M(M1({replace:v1},_(S.to),{state:typeof S.to=="object"?M1({},o1,S.to.state):o1,force:y1}),x||m)}else S=Z(m,t1,!0,v1,o1);return V(m,t1,S),S})}function z(R,x){const A=b(R,x);return A?Promise.reject(A):Promise.resolve()}function X(R,x){let A;const[t1,o1,y1]=kr(R,x);A=i4(t1.reverse(),"beforeRouteLeave",R,x);for(const y of t1)y.leaveGuards.forEach(m=>{A.push(v5(m,R,x))});const v1=z.bind(null,R,x);return A.push(v1),i8(A).then(()=>{A=[];for(const y of s.list())A.push(v5(y,R,x));return A.push(v1),i8(A)}).then(()=>{A=i4(o1,"beforeRouteUpdate",R,x);for(const y of o1)y.updateGuards.forEach(m=>{A.push(v5(m,R,x))});return A.push(v1),i8(A)}).then(()=>{A=[];for(const y of R.matched)if(y.beforeEnter&&!x.matched.includes(y))if(R2(y.beforeEnter))for(const m of y.beforeEnter)A.push(v5(m,R,x));else A.push(v5(y.beforeEnter,R,x));return A.push(v1),i8(A)}).then(()=>(R.matched.forEach(y=>y.enterCallbacks={}),A=i4(y1,"beforeRouteEnter",R,x),A.push(v1),i8(A))).then(()=>{A=[];for(const y of r.list())A.push(v5(y,R,x));return A.push(v1),i8(A)}).catch(y=>K2(y,8)?y:Promise.reject(y))}function V(R,x,A){for(const t1 of l.list())t1(R,x,A)}function Z(R,x,A,t1,o1){const y1=b(R,x);if(y1)return y1;const v1=x===d5,y=o8?history.state:{};A&&(t1||v1?o.replace(R.fullPath,M1({scroll:v1&&y&&y.scroll},o1)):o.push(R.fullPath,o1)),a.value=R,N(R,x,A,v1),e1()}let F;function U(){F||(F=o.listen((R,x,A)=>{if(!w1.listening)return;const t1=g(R),o1=O(t1);if(o1){M(M1(o1,{replace:!0}),t1).catch(Y8);return}c=t1;const y1=a.value;o8&&Ds(F9(y1.fullPath,A.delta),Pt()),X(t1,y1).catch(v1=>K2(v1,12)?v1:K2(v1,2)?(M(v1.to,t1).then(y=>{K2(y,20)&&!A.delta&&A.type===h6.pop&&o.go(-1,!1)}).catch(Y8),Promise.reject()):(A.delta&&o.go(-A.delta,!1),q(v1,t1,y1))).then(v1=>{v1=v1||Z(t1,y1,!1),v1&&(A.delta&&!K2(v1,8)?o.go(-A.delta,!1):A.type===h6.pop&&K2(v1,20)&&o.go(-1,!1)),V(t1,y1,v1)}).catch(Y8)}))}let T=j8(),k=j8(),D;function q(R,x,A){e1(R);const t1=k.list();return t1.length?t1.forEach(o1=>o1(R,x,A)):console.error(R),Promise.reject(R)}function W(){return D&&a.value!==d5?Promise.resolve():new Promise((R,x)=>{T.add([R,x])})}function e1(R){return D||(D=!R,U(),T.list().forEach(([x,A])=>R?A(R):x()),T.reset()),R}function N(R,x,A,t1){const{scrollBehavior:o1}=i;if(!o8||!o1)return Promise.resolve();const y1=!A&&$s(F9(R.fullPath,0))||(t1||!A)&&history.state&&history.state.scroll||null;return w6().then(()=>o1(R,x,y1)).then(v1=>v1&&As(v1)).catch(v1=>q(v1,R,x))}const Q=R=>o.go(R);let a1;const c1=new Set,w1={currentRoute:a,listening:!0,addRoute:C,removeRoute:d,hasRoute:v,getRoutes:p,resolve:g,options:i,push:P,replace:E,go:Q,back:()=>Q(-1),forward:()=>Q(1),beforeEach:s.add,beforeResolve:r.add,afterEach:l.add,onError:k.add,isReady:W,install(R){const x=this;R.component("RouterLink",f6),R.component("RouterView",C7),R.config.globalProperties.$router=x,Object.defineProperty(R.config.globalProperties,"$route",{enumerable:!0,get:()=>$(a)}),o8&&!a1&&a.value===d5&&(a1=!0,P(o.location).catch(o1=>{}));const A={};for(const o1 in d5)A[o1]=m1(()=>a.value[o1]);R.provide(St,x),R.provide(ke,P5(A)),R.provide(U4,a);const t1=R.unmount;c1.add(R),R.unmount=function(){c1.delete(R),c1.size<1&&(c=d5,F&&F(),F=null,a.value=d5,a1=!1,D=!1),t1()}}};return w1}function i8(i){return i.reduce((t,e)=>t.then(()=>e()),Promise.resolve())}function kr(i,t){const e=[],n=[],o=[],s=Math.max(t.matched.length,i.matched.length);for(let r=0;r<s;r++){const l=t.matched[r];l&&(i.matched.find(c=>b8(c,l))?n.push(l):e.push(l));const a=i.matched[r];a&&(t.matched.find(c=>b8(c,a))||o.push(a))}return[e,n,o]}function zr(){return p2(St)}function Er(){return p2(ke)}const Pr={__name:"App",setup(i){return(t,e)=>(Y(),U5($(C7)))}},Sr="modulepreload",Or=function(i){return"/TenDanganronpa/"+i},Q9={},Rr=function(t,e,n){if(!e||e.length===0)return t();const o=document.getElementsByTagName("link");return Promise.all(e.map(s=>{if(s=Or(s),s in Q9)return;Q9[s]=!0;const r=s.endsWith(".css"),l=r?'[rel="stylesheet"]':"";if(!!n)for(let u=o.length-1;u>=0;u--){const h=o[u];if(h.href===s&&(!r||h.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${s}"]${l}`))return;const c=document.createElement("link");if(c.rel=r?"stylesheet":Sr,r||(c.as="script",c.crossOrigin=""),c.href=s,document.head.appendChild(c),r)return new Promise((u,h)=>{c.addEventListener("load",u),c.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${s}`)))})})).then(()=>t())};class Ir{constructor(){this._listeners=new Map}addEventListener(t,e){var n;this.removeEventListener(t,e),this._listeners.get(t)||this._listeners.set(t,[]),(n=this._listeners.get(t))===null||n===void 0||n.push(e)}dispatchEvent(t,e){var n;(n=this._listeners.get(t))===null||n===void 0||n.forEach(o=>o(e))}hasEventListener(t){return!!this._listeners.get(t)}removeAllEventListeners(t){t?this._listeners.delete(t):this._listeners=new Map}removeEventListener(t,e){const n=this._listeners.get(t);if(!n)return;const o=n.length,s=n.indexOf(e);s<0||(o===1?this._listeners.delete(t):n.splice(s,1))}}class d2{constructor(t,e,n){if(typeof t!="number"&&t){this.x=t.x,this.y=t.y;const o=t;this.z=o.z?o.z:0}else if(t!==void 0&&e!==void 0)this.x=t,this.y=e,this.z=n??0;else throw new Error("tsParticles - Vector3d not initialized correctly")}static get origin(){return d2.create(0,0,0)}get angle(){return Math.atan2(this.y,this.x)}set angle(t){this.updateFromAngle(t,this.length)}get length(){return Math.sqrt(this.getLengthSq())}set length(t){this.updateFromAngle(this.angle,t)}static clone(t){return d2.create(t.x,t.y,t.z)}static create(t,e,n){return new d2(t,e,n)}add(t){return d2.create(this.x+t.x,this.y+t.y,this.z+t.z)}addTo(t){this.x+=t.x,this.y+=t.y,this.z+=t.z}copy(){return d2.clone(this)}distanceTo(t){return this.sub(t).length}distanceToSq(t){return this.sub(t).getLengthSq()}div(t){return d2.create(this.x/t,this.y/t,this.z/t)}divTo(t){this.x/=t,this.y/=t,this.z/=t}getLengthSq(){return this.x**2+this.y**2}mult(t){return d2.create(this.x*t,this.y*t,this.z*t)}multTo(t){this.x*=t,this.y*=t,this.z*=t}rotate(t){return d2.create(this.x*Math.cos(t)-this.y*Math.sin(t),this.x*Math.sin(t)+this.y*Math.cos(t),0)}setTo(t){this.x=t.x,this.y=t.y;const e=t;this.z=e.z?e.z:0}sub(t){return d2.create(this.x-t.x,this.y-t.y,this.z-t.z)}subFrom(t){this.x-=t.x,this.y-=t.y,this.z-=t.z}updateFromAngle(t,e){this.x=Math.cos(t)*e,this.y=Math.sin(t)*e}}class P1 extends d2{constructor(t,e){super(t,e,0)}static get origin(){return P1.create(0,0)}static clone(t){return P1.create(t.x,t.y)}static create(t,e){return new P1(t,e)}}let Tr=Math.random;const Zr=new Map;function p7(i){return Zr.get(i)||(t=>t)}function d1(){return I2(Tr(),0,1-1e-16)}function I2(i,t,e){return Math.min(Math.max(i,t),e)}function n4(i,t,e,n){return Math.floor((i*e+t*n)/(e+n))}function Y1(i){const t=N2(i);let e=d6(i);return t===e&&(e=0),d1()*(t-e)+e}function K(i){return typeof i=="number"?i:Y1(i)}function d6(i){return typeof i=="number"?i:i.min}function N2(i){return typeof i=="number"?i:i.max}function l1(i,t){if(i===t||t===void 0&&typeof i=="number")return i;const e=d6(i),n=N2(i);return t!==void 0?{min:Math.min(e,t),max:Math.max(n,t)}:l1(e,n)}function r5(i){const t=i.random,{enable:e,minimumValue:n}=typeof t=="boolean"?{enable:t,minimumValue:0}:t;return K(e?l1(i.value,n):i.value)}function n2(i,t){const e=i.x-t.x,n=i.y-t.y;return{dx:e,dy:n,distance:Math.sqrt(e**2+n**2)}}function X1(i,t){return n2(i,t).distance}function Ar(i,t,e){if(typeof i=="number")return i*Math.PI/180;switch(i){case"top":return-Math.PI/2;case"top-right":return-Math.PI/4;case"right":return 0;case"bottom-right":return Math.PI/4;case"bottom":return Math.PI/2;case"bottom-left":return 3*Math.PI/4;case"left":return Math.PI;case"top-left":return-3*Math.PI/4;case"inside":return Math.atan2(e.y-t.y,e.x-t.x);case"outside":return Math.atan2(t.y-e.y,t.x-e.x);default:return d1()*Math.PI*2}}function Dr(i){const t=P1.origin;return t.length=1,t.angle=i,t}function t3(i,t,e,n){return P1.create(i.x*(e-n)/(e+n)+t.x*2*n/(e+n),i.y)}function $r(i){return i.position&&i.position.x!==void 0&&i.position.y!==void 0?{x:i.position.x*i.size.width/100,y:i.position.y*i.size.height/100}:void 0}function v7(i){var t,e,n,o;return{x:((e=(t=i.position)===null||t===void 0?void 0:t.x)!==null&&e!==void 0?e:d1()*100)*i.size.width/100,y:((o=(n=i.position)===null||n===void 0?void 0:n.y)!==null&&o!==void 0?o:d1()*100)*i.size.height/100}}function m7(i){var t,e;const n={x:((t=i.position)===null||t===void 0?void 0:t.x)!==void 0?K(i.position.x):void 0,y:((e=i.position)===null||e===void 0?void 0:e.y)!==void 0?K(i.position.y):void 0};return v7({size:i.size,position:n})}function Fr(i){var t,e,n,o;return{x:(e=(t=i.position)===null||t===void 0?void 0:t.x)!==null&&e!==void 0?e:d1()*i.size.width,y:(o=(n=i.position)===null||n===void 0?void 0:n.y)!==null&&o!==void 0?o:d1()*i.size.height}}function y7(i){return i?i.endsWith("%")?parseFloat(i)/100:parseFloat(i):1}function e3(i,t,e,n,o,s){const r={bounced:!1};return t.min<n.min||t.min>n.max||t.max<n.min||t.max>n.max||(i.max>=e.min&&i.max<=(e.max+e.min)/2&&o>0||i.min<=e.max&&i.min>(e.max+e.min)/2&&o<0)&&(r.velocity=o*-s,r.bounced=!0),r}function jr(i,t){const e=T1(t,n=>i.matches(n));return e instanceof Array?e.some(n=>n):e}function W5(){return typeof window>"u"||!window||typeof window.document>"u"||!window.document}function Nr(){return!W5()&&typeof matchMedia<"u"}function g7(i){if(Nr())return matchMedia(i)}function Br(){return W5()?i=>setTimeout(i):i=>(requestAnimationFrame||setTimeout)(i)}function Hr(){return W5()?i=>clearTimeout(i):i=>(cancelAnimationFrame||clearTimeout)(i)}function I1(i,t){return i===t||t instanceof Array&&t.indexOf(i)>-1}async function Vr(i,t){try{await document.fonts.load(`${t??"400"} 36px '${i??"Verdana"}'`)}catch{}}function _7(i){return Math.floor(d1()*i.length)}function M6(i,t,e=!0){return i[t!==void 0&&e?t%i.length:_7(i)]}function L6(i,t,e,n,o){return qr(x6(i,n??0),t,e,o)}function qr(i,t,e,n){let o=!0;return(!n||n==="bottom")&&(o=i.top<t.height+e.x),o&&(!n||n==="left")&&(o=i.right>e.x),o&&(!n||n==="right")&&(o=i.left<t.width+e.y),o&&(!n||n==="top")&&(o=i.bottom>e.y),o}function x6(i,t){return{bottom:i.y+t,left:i.x-t,right:i.x+t,top:i.y-t}}function V1(i,...t){for(const e of t){if(e==null)continue;if(typeof e!="object"){i=e;continue}const n=Array.isArray(e);n&&(typeof i!="object"||!i||!Array.isArray(i))?i=[]:!n&&(typeof i!="object"||!i||Array.isArray(i))&&(i={});for(const o in e){if(o==="__proto__")continue;const s=e,r=s[o],l=typeof r=="object",a=i;a[o]=l&&Array.isArray(r)?r.map(c=>V1(a[o],c)):V1(a[o],r)}}return i}function ze(i,t){return!!M7(t,e=>e.enable&&I1(i,e.mode))}function Ee(i,t,e){T1(t,n=>{const o=n.mode;n.enable&&I1(i,o)&&Ur(n,e)})}function Ur(i,t){const e=i.selectors;T1(e,n=>{t(n,i)})}function b7(i,t){if(!(!t||!i))return M7(i,e=>jr(t,e.selectors))}function W4(i){return{position:i.getPosition(),radius:i.getRadius(),mass:i.getMass(),velocity:i.velocity,factor:P1.create(r5(i.options.bounce.horizontal),r5(i.options.bounce.vertical))}}function w7(i,t){const{x:e,y:n}=i.velocity.sub(t.velocity),[o,s]=[i.position,t.position],{dx:r,dy:l}=n2(s,o);if(e*r+n*l<0)return;const a=-Math.atan2(l,r),c=i.mass,u=t.mass,h=i.velocity.rotate(a),f=t.velocity.rotate(a),C=t3(h,f,c,u),d=t3(f,h,c,u),p=C.rotate(-a),v=d.rotate(-a);i.velocity.x=p.x*i.factor.x,i.velocity.y=p.y*i.factor.y,t.velocity.x=v.x*t.factor.x,t.velocity.y=v.y*t.factor.y}function Wr(i,t){const e=i.getPosition(),n=i.getRadius(),o=x6(e,n),s=e3({min:o.left,max:o.right},{min:o.top,max:o.bottom},{min:t.left,max:t.right},{min:t.top,max:t.bottom},i.velocity.x,r5(i.options.bounce.horizontal));s.bounced&&(s.velocity!==void 0&&(i.velocity.x=s.velocity),s.position!==void 0&&(i.position.x=s.position));const r=e3({min:o.top,max:o.bottom},{min:o.left,max:o.right},{min:t.top,max:t.bottom},{min:t.left,max:t.right},i.velocity.y,r5(i.options.bounce.vertical));r.bounced&&(r.velocity!==void 0&&(i.velocity.y=r.velocity),r.position!==void 0&&(i.position.y=r.position))}function T1(i,t){return i instanceof Array?i.map((e,n)=>t(e,n)):t(i,0)}function _2(i,t,e){return i instanceof Array?M6(i,t,e):i}function M7(i,t){return i instanceof Array?i.find((e,n)=>t(e,n)):t(i,0)?i:void 0}const ct="random",G6="mid",Ot=new Map;function L7(i){Ot.set(i.key,i)}function o4(i,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?i+(t-i)*6*e:e<1/2?t:e<2/3?i+(t-i)*(2/3-e)*6:i}function Gr(i){for(const[,s]of Ot)if(i.startsWith(s.stringPrefix))return s.parseString(i);const t=/^#?([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i,e=i.replace(t,(s,r,l,a,c)=>r+r+l+l+a+a+(c!==void 0?c+c:"")),n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i,o=n.exec(e);return o?{a:o[4]!==void 0?parseInt(o[4],16)/255:1,b:parseInt(o[3],16),g:parseInt(o[2],16),r:parseInt(o[1],16)}:void 0}function b2(i,t,e=!0){if(!i)return;const n=typeof i=="string"?{value:i}:i;if(typeof n.value=="string")return x7(n.value,t,e);if(n.value instanceof Array)return b2({value:M6(n.value,t,e)});for(const[,o]of Ot){const s=o.handleRangeColor(n);if(s)return s}}function x7(i,t,e=!0){if(!i)return;const n=typeof i=="string"?{value:i}:i;if(typeof n.value=="string")return n.value===ct?z7():Kr(n.value);if(n.value instanceof Array)return x7({value:M6(n.value,t,e)});for(const[,o]of Ot){const s=o.handleColor(n);if(s)return s}}function x5(i,t,e=!0){const n=b2(i,t,e);return n?k7(n):void 0}function k7(i){const t=i.r/255,e=i.g/255,n=i.b/255,o=Math.max(t,e,n),s=Math.min(t,e,n),r={h:0,l:(o+s)/2,s:0};return o!==s&&(r.s=r.l<.5?(o-s)/(o+s):(o-s)/(2-o-s),r.h=t===o?(e-n)/(o-s):r.h=e===o?2+(n-t)/(o-s):4+(t-e)/(o-s)),r.l*=100,r.s*=100,r.h*=60,r.h<0&&(r.h+=360),r.h>=360&&(r.h-=360),r}function Kr(i){return Gr(i)}function M8(i){const t={b:0,g:0,r:0},e={h:i.h/360,l:i.l/100,s:i.s/100};if(!e.s)t.b=e.l,t.g=e.l,t.r=e.l;else{const n=e.l<.5?e.l*(1+e.s):e.l+e.s-e.l*e.s,o=2*e.l-n;t.r=o4(o,n,e.h+1/3),t.g=o4(o,n,e.h),t.b=o4(o,n,e.h-1/3)}return t.r=Math.floor(t.r*255),t.g=Math.floor(t.g*255),t.b=Math.floor(t.b*255),t}function Yr(i){const t=M8(i);return{a:i.a,b:t.b,g:t.g,r:t.r}}function z7(i){const t=i??0;return{b:Math.floor(Y1(l1(t,256))),g:Math.floor(Y1(l1(t,256))),r:Math.floor(Y1(l1(t,256)))}}function B2(i,t){return`rgba(${i.r}, ${i.g}, ${i.b}, ${t??1})`}function L8(i,t){return`hsla(${i.h}, ${i.s}%, ${i.l}%, ${t??1})`}function Pe(i,t,e,n){let o=i,s=t;return o.r===void 0&&(o=M8(i)),s.r===void 0&&(s=M8(t)),{b:n4(o.b,s.b,e,n),g:n4(o.g,s.g,e,n),r:n4(o.r,s.r,e,n)}}function G4(i,t,e){var n,o;if(e===ct)return z7();if(e===G6){const s=(n=i.getFillColor())!==null&&n!==void 0?n:i.getStrokeColor(),r=(o=t==null?void 0:t.getFillColor())!==null&&o!==void 0?o:t==null?void 0:t.getStrokeColor();if(s&&r&&t)return Pe(s,r,i.getRadius(),t.getRadius());{const l=s??r;if(l)return M8(l)}}else return e}function E7(i,t,e){const n=typeof i=="string"?i:i.value;return n===ct?e?b2({value:n}):t?ct:G6:n===G6?G6:b2({value:n})}function i3(i){return i!==void 0?{h:i.h.value,s:i.s.value,l:i.l.value}:void 0}function P7(i,t,e){const n={h:{enable:!1,value:i.h},s:{enable:!1,value:i.s},l:{enable:!1,value:i.l}};return t&&(s4(n.h,t.h,e),s4(n.s,t.s,e),s4(n.l,t.l,e)),n}function s4(i,t,e){i.enable=t.enable,i.enable?(i.velocity=K(t.speed)/100*e,i.decay=1-K(t.decay),i.status="increasing",i.loops=0,i.maxLoops=K(t.count),t.sync||(i.velocity*=d1(),i.value*=d1()),i.initialValue=i.value):i.velocity=0}function J8(i,t,e){i.beginPath(),i.moveTo(t.x,t.y),i.lineTo(e.x,e.y),i.closePath()}function Xr(i,t,e,n){i.beginPath(),i.moveTo(t.x,t.y),i.lineTo(e.x,e.y),i.lineTo(n.x,n.y),i.closePath()}function Jr(i,t,e){i.fillStyle=e??"rgba(0,0,0,0)",i.fillRect(0,0,t.width,t.height)}function Qr(i,t,e,n){e&&(i.globalAlpha=n,i.drawImage(e,0,0,t.width,t.height),i.globalAlpha=1)}function r4(i,t){i.clearRect(0,0,t.width,t.height)}function tl(i){var t,e,n,o,s;const{container:r,context:l,particle:a,delta:c,colorStyles:u,backgroundMask:h,composite:f,radius:C,opacity:d,shadow:p,transform:v}=i,g=a.getPosition(),_=a.rotation+(a.pathRotation?a.velocity.angle:0),b={sin:Math.sin(_),cos:Math.cos(_)},P={a:b.cos*((t=v.a)!==null&&t!==void 0?t:1),b:b.sin*((e=v.b)!==null&&e!==void 0?e:1),c:-b.sin*((n=v.c)!==null&&n!==void 0?n:1),d:b.cos*((o=v.d)!==null&&o!==void 0?o:1)};l.setTransform(P.a,P.b,P.c,P.d,g.x,g.y),l.beginPath(),h&&(l.globalCompositeOperation=f);const E=a.shadowColor;p.enable&&E&&(l.shadowBlur=p.blur,l.shadowColor=B2(E),l.shadowOffsetX=p.offset.x,l.shadowOffsetY=p.offset.y),u.fill&&(l.fillStyle=u.fill);const O=(s=a.strokeWidth)!==null&&s!==void 0?s:0;l.lineWidth=O,u.stroke&&(l.strokeStyle=u.stroke),el(r,l,a,C,d,c),O>0&&l.stroke(),a.close&&l.closePath(),a.fill&&l.fill(),il(r,l,a,C,d,c),l.globalCompositeOperation="source-over",l.setTransform(1,0,0,1,0,0)}function el(i,t,e,n,o,s){if(!e.shape)return;const r=i.drawers.get(e.shape);r&&r.draw(t,e,n,o,s,i.retina.pixelRatio)}function il(i,t,e,n,o,s){if(!e.shape)return;const r=i.drawers.get(e.shape);r!=null&&r.afterEffect&&r.afterEffect(t,e,n,o,s,i.retina.pixelRatio)}function nl(i,t,e){t.draw&&t.draw(i,e)}function ol(i,t,e,n){t.drawParticle&&t.drawParticle(i,e,n)}function sl(i,t,e){return{h:i.h,s:i.s,l:i.l+(t==="darken"?-1:1)*e}}const Q8="generated",n3="touchend",rl="pointerdown",ll="pointerup",G5="pointermove",al="touchstart",cl="touchmove",K4="pointerleave",ul="pointerout",hl="touchcancel",fl="resize",dl="visibilitychange";function Cl(i,t,e){var n;const o=t[e];o!==void 0&&(i[e]=((n=i[e])!==null&&n!==void 0?n:1)*o)}class pl{constructor(t){this.container=t,this.size={height:0,width:0},this._context=null,this._generated=!1,this._preDrawUpdaters=[],this._postDrawUpdaters=[],this._resizePlugins=[],this._colorPlugins=[],this._mutationObserver=!W5()&&typeof MutationObserver<"u"?new MutationObserver(e=>{for(const n of e)n.type==="attributes"&&n.attributeName==="style"&&this._repairStyle()}):void 0}get _fullScreen(){return this.container.actualOptions.fullScreen.enable}clear(){const t=this.container.actualOptions,e=t.particles.move.trail,n=this._trailFill;t.backgroundMask.enable?this.paint():e.enable&&e.length>0&&n?n.color?this._paintBase(B2(n.color,n.opacity)):n.image&&this._paintImage(n.image,n.opacity):this.draw(o=>{r4(o,this.size)})}destroy(){var t,e;(t=this._mutationObserver)===null||t===void 0||t.disconnect(),this._generated?(e=this.element)===null||e===void 0||e.remove():this._resetOriginalStyle(),this.stop(),this._preDrawUpdaters=[],this._postDrawUpdaters=[],this._resizePlugins=[],this._colorPlugins=[]}draw(t){if(this._context)return t(this._context)}drawParticle(t,e){var n;if(t.spawning||t.destroyed)return;const o=t.getRadius();if(o<=0)return;const s=t.getFillColor(),r=(n=t.getStrokeColor())!==null&&n!==void 0?n:s;let[l,a]=this._getPluginParticleColors(t);l||(l=s),a||(a=r),!(!l&&!a)&&this.draw(c=>{var u,h,f,C;const d=this.container.actualOptions,p=t.options.zIndex,v=(1-t.zIndexFactor)**p.opacityRate,g=(f=(u=t.bubble.opacity)!==null&&u!==void 0?u:(h=t.opacity)===null||h===void 0?void 0:h.value)!==null&&f!==void 0?f:1,_=(C=t.strokeOpacity)!==null&&C!==void 0?C:g,b=g*v,P=_*v,E={},O={fill:l?L8(l,b):void 0};O.stroke=a?L8(a,P):O.fill,this._applyPreDrawUpdaters(c,t,o,b,O,E),tl({container:this.container,context:c,particle:t,delta:e,colorStyles:O,backgroundMask:d.backgroundMask.enable,composite:d.backgroundMask.composite,radius:o*(1-t.zIndexFactor)**p.sizeRate,opacity:b,shadow:t.options.shadow,transform:E}),this._applyPostDrawUpdaters(t)})}drawParticlePlugin(t,e,n){this.draw(o=>{ol(o,t,e,n)})}drawPlugin(t,e){this.draw(n=>{nl(n,t,e)})}async init(){var t;this.resize(),this._initStyle(),this._initCover();try{await this._initTrail()}catch(e){console.error(e)}this.initBackground(),this.element&&((t=this._mutationObserver)===null||t===void 0||t.observe(this.element,{attributes:!0})),this.initUpdaters(),this.initPlugins(),this.paint()}initBackground(){const t=this.container.actualOptions,e=t.background,n=this.element,o=n==null?void 0:n.style;if(o){if(e.color){const s=b2(e.color);o.backgroundColor=s?B2(s,e.opacity):""}else o.backgroundColor="";o.backgroundImage=e.image||"",o.backgroundPosition=e.position||"",o.backgroundRepeat=e.repeat||"",o.backgroundSize=e.size||""}}initPlugins(){this._resizePlugins=[];for(const[,t]of this.container.plugins)t.resize&&this._resizePlugins.push(t),(t.particleFillColor||t.particleStrokeColor)&&this._colorPlugins.push(t)}initUpdaters(){this._preDrawUpdaters=[],this._postDrawUpdaters=[];for(const t of this.container.particles.updaters)t.afterDraw&&this._postDrawUpdaters.push(t),(t.getColorStyles||t.getTransformValues||t.beforeDraw)&&this._preDrawUpdaters.push(t)}loadCanvas(t){var e,n;this._generated&&((e=this.element)===null||e===void 0||e.remove()),this._generated=t.dataset&&Q8 in t.dataset?t.dataset[Q8]==="true":this._generated,this.element=t,this.element.ariaHidden="true",this._originalStyle=V1({},this.element.style),this.size.height=t.offsetHeight,this.size.width=t.offsetWidth,this._context=this.element.getContext("2d"),(n=this._mutationObserver)===null||n===void 0||n.observe(this.element,{attributes:!0}),this.container.retina.init(),this.initBackground()}paint(){const t=this.container.actualOptions;this.draw(e=>{t.backgroundMask.enable&&t.backgroundMask.cover?(r4(e,this.size),this._paintBase(this._coverColorStyle)):this._paintBase()})}resize(){if(!this.element)return;const t=this.container,e=t.retina.pixelRatio,n=t.canvas.size,o={width:this.element.offsetWidth*e,height:this.element.offsetHeight*e};if(o.height===n.height&&o.width===n.width&&o.height===this.element.height&&o.width===this.element.width)return;const s=Object.assign({},n);this.element.width=n.width=this.element.offsetWidth*e,this.element.height=n.height=this.element.offsetHeight*e,this.container.started&&(this.resizeFactor={width:n.width/s.width,height:n.height/s.height})}stop(){this.draw(t=>{r4(t,this.size)})}async windowResize(){if(!this.element)return;this.resize();const t=this.container,e=t.updateActualOptions();t.particles.setDensity(),this._applyResizePlugins(),e&&await t.refresh()}_applyPostDrawUpdaters(t){var e;for(const n of this._postDrawUpdaters)(e=n.afterDraw)===null||e===void 0||e.call(n,t)}_applyPreDrawUpdaters(t,e,n,o,s,r){var l;for(const a of this._preDrawUpdaters){if(a.getColorStyles){const{fill:c,stroke:u}=a.getColorStyles(e,t,n,o);c&&(s.fill=c),u&&(s.stroke=u)}if(a.getTransformValues){const c=a.getTransformValues(e);for(const u in c)Cl(r,c,u)}(l=a.beforeDraw)===null||l===void 0||l.call(a,e)}}_applyResizePlugins(){for(const t of this._resizePlugins)t.resize&&t.resize()}_getPluginParticleColors(t){let e,n;for(const o of this._colorPlugins)if(!e&&o.particleFillColor&&(e=x5(o.particleFillColor(t))),!n&&o.particleStrokeColor&&(n=x5(o.particleStrokeColor(t))),e&&n)break;return[e,n]}_initCover(){const t=this.container.actualOptions,e=t.backgroundMask.cover,n=e.color,o=b2(n);if(o){const s={r:o.r,g:o.g,b:o.b,a:e.opacity};this._coverColorStyle=B2(s,s.a)}}_initStyle(){const t=this.element,e=this.container.actualOptions;if(t){this._fullScreen?(this._originalStyle=V1({},t.style),this._setFullScreenStyle()):this._resetOriginalStyle();for(const n in e.style){if(!n||!e.style)continue;const o=e.style[n];o&&t.style.setProperty(n,o,"important")}}}async _initTrail(){const t=this.container.actualOptions,e=t.particles.move.trail,n=e.fill;if(e.enable)if(n.color){const o=b2(n.color);if(!o)return;const s=t.particles.move.trail;this._trailFill={color:Object.assign({},o),opacity:1/s.length}}else await new Promise((o,s)=>{if(!n.image)return;const r=document.createElement("img");r.addEventListener("load",()=>{this._trailFill={image:r,opacity:1/e.length},o()}),r.addEventListener("error",l=>{s(l.error)}),r.src=n.image})}_paintBase(t){this.draw(e=>{Jr(e,this.size,t)})}_paintImage(t,e){this.draw(n=>{Qr(n,this.size,t,e)})}_repairStyle(){var t,e;const n=this.element;n&&((t=this._mutationObserver)===null||t===void 0||t.disconnect(),this._initStyle(),this.initBackground(),(e=this._mutationObserver)===null||e===void 0||e.observe(n,{attributes:!0}))}_resetOriginalStyle(){const t=this.element,e=this._originalStyle;t&&e&&(t.style.position=e.position,t.style.zIndex=e.zIndex,t.style.top=e.top,t.style.left=e.left,t.style.width=e.width,t.style.height=e.height)}_setFullScreenStyle(){const t=this.element;if(!t)return;const e="important";t.style.setProperty("position","fixed",e),t.style.setProperty("z-index",this.container.actualOptions.fullScreen.zIndex.toString(10),e),t.style.setProperty("top","0",e),t.style.setProperty("left","0",e),t.style.setProperty("width","100%",e),t.style.setProperty("height","100%",e)}}function v2(i,t,e,n,o){if(n){let s={passive:!0};typeof o=="boolean"?s.capture=o:o!==void 0&&(s=o),i.addEventListener(t,e,s)}else{const s=o;i.removeEventListener(t,e,s)}}class vl{constructor(t){this.container=t,this.canPush=!0,this.handlers={mouseMove:e=>this.mouseTouchMove(e),touchStart:e=>this.mouseTouchMove(e),touchMove:e=>this.mouseTouchMove(e),touchEnd:()=>this.mouseTouchFinish(),mouseLeave:()=>this.mouseTouchFinish(),touchCancel:()=>this.mouseTouchFinish(),touchEndClick:e=>this.mouseTouchClick(e),mouseUp:e=>this.mouseTouchClick(e),mouseDown:()=>this.mouseDown(),visibilityChange:()=>this.handleVisibilityChange(),themeChange:e=>this.handleThemeChange(e),oldThemeChange:e=>this.handleThemeChange(e),resize:()=>this.handleWindowResize()}}addListeners(){this.manageListeners(!0)}removeListeners(){this.manageListeners(!1)}doMouseTouchClick(t){const e=this.container,n=e.actualOptions;if(this.canPush){const o=e.interactivity.mouse,s=o.position;if(!s)return;o.clickPosition=Object.assign({},s),o.clickTime=new Date().getTime();const r=n.interactivity.events.onClick;T1(r.mode,l=>this.handleClickMode(l))}t.type==="touchend"&&setTimeout(()=>this.mouseTouchFinish(),500)}handleClickMode(t){this.container.handleClickMode(t)}handleThemeChange(t){const e=t,n=this.container,o=n.options,s=o.defaultThemes,r=e.matches?s.dark:s.light,l=o.themes.find(a=>a.name===r);l&&l.default.auto&&n.loadTheme(r)}handleVisibilityChange(){const t=this.container,e=t.actualOptions;this.mouseTouchFinish(),e.pauseOnBlur&&(document!=null&&document.hidden?(t.pageHidden=!0,t.pause()):(t.pageHidden=!1,t.getAnimationStatus()?t.play(!0):t.draw(!0)))}handleWindowResize(){this.resizeTimeout&&(clearTimeout(this.resizeTimeout),delete this.resizeTimeout),this.resizeTimeout=setTimeout(async()=>{var t;return(t=this.container.canvas)===null||t===void 0?void 0:t.windowResize()},this.container.actualOptions.interactivity.events.resize.delay*1e3)}manageListeners(t){var e;const n=this.handlers,o=this.container,s=o.actualOptions,r=s.interactivity.detectsOn;let l=K4;if(r==="window")o.interactivity.element=window,l=ul;else if(r==="parent"&&o.canvas.element){const h=o.canvas.element;o.interactivity.element=(e=h.parentElement)!==null&&e!==void 0?e:h.parentNode}else o.interactivity.element=o.canvas.element;const a=g7("(prefers-color-scheme: dark)");a&&(a.addEventListener!==void 0?v2(a,"change",n.themeChange,t):a.addListener!==void 0&&(t?a.addListener(n.oldThemeChange):a.removeListener(n.oldThemeChange)));const c=o.interactivity.element;if(!c)return;const u=c;(s.interactivity.events.onHover.enable||s.interactivity.events.onClick.enable)&&(v2(c,G5,n.mouseMove,t),v2(c,al,n.touchStart,t),v2(c,cl,n.touchMove,t),s.interactivity.events.onClick.enable?(v2(c,n3,n.touchEndClick,t),v2(c,ll,n.mouseUp,t),v2(c,rl,n.mouseDown,t)):v2(c,n3,n.touchEnd,t),v2(c,l,n.mouseLeave,t),v2(c,hl,n.touchCancel,t)),o.canvas.element&&(o.canvas.element.style.pointerEvents=u===o.canvas.element?"initial":"none"),s.interactivity.events.resize&&(typeof ResizeObserver<"u"?this.resizeObserver&&!t?(o.canvas.element&&this.resizeObserver.unobserve(o.canvas.element),this.resizeObserver.disconnect(),delete this.resizeObserver):!this.resizeObserver&&t&&o.canvas.element&&(this.resizeObserver=new ResizeObserver(h=>{h.find(C=>C.target===o.canvas.element)&&this.handleWindowResize()}),this.resizeObserver.observe(o.canvas.element)):v2(window,fl,n.resize,t)),document&&v2(document,dl,n.visibilityChange,t,!1)}mouseDown(){const t=this.container.interactivity;if(t){const e=t.mouse;e.clicking=!0,e.downPosition=e.position}}mouseTouchClick(t){const e=this.container,n=e.actualOptions,o=e.interactivity.mouse;o.inside=!0;let s=!1;const r=o.position;if(!(!r||!n.interactivity.events.onClick.enable)){for(const[,l]of e.plugins)if(l.clickPositionValid&&(s=l.clickPositionValid(r),s))break;s||this.doMouseTouchClick(t),o.clicking=!1}}mouseTouchFinish(){const t=this.container.interactivity;if(!t)return;const e=t.mouse;delete e.position,delete e.clickPosition,delete e.downPosition,t.status=K4,e.inside=!1,e.clicking=!1}mouseTouchMove(t){var e,n,o,s,r,l,a;const c=this.container,u=c.actualOptions;if(!(!((e=c.interactivity)===null||e===void 0)&&e.element))return;c.interactivity.mouse.inside=!0;let h;const f=c.canvas.element;if(t.type.startsWith("pointer")){this.canPush=!0;const d=t;if(c.interactivity.element===window){if(f){const p=f.getBoundingClientRect();h={x:d.clientX-p.left,y:d.clientY-p.top}}}else if(u.interactivity.detectsOn==="parent"){const p=d.target,v=d.currentTarget,g=c.canvas.element;if(p&&v&&g){const _=p.getBoundingClientRect(),b=v.getBoundingClientRect(),P=g.getBoundingClientRect();h={x:d.offsetX+2*_.left-(b.left+P.left),y:d.offsetY+2*_.top-(b.top+P.top)}}else h={x:(n=d.offsetX)!==null&&n!==void 0?n:d.clientX,y:(o=d.offsetY)!==null&&o!==void 0?o:d.clientY}}else d.target===c.canvas.element&&(h={x:(s=d.offsetX)!==null&&s!==void 0?s:d.clientX,y:(r=d.offsetY)!==null&&r!==void 0?r:d.clientY})}else{this.canPush=t.type!=="touchmove";const d=t,p=d.touches[d.touches.length-1],v=f==null?void 0:f.getBoundingClientRect();h={x:p.clientX-((l=v==null?void 0:v.left)!==null&&l!==void 0?l:0),y:p.clientY-((a=v==null?void 0:v.top)!==null&&a!==void 0?a:0)}}const C=c.retina.pixelRatio;h&&(h.x*=C,h.y*=C),c.interactivity.mouse.position=h,c.interactivity.status=G5}}function ml(i,t=60,e=!1){return{value:i,factor:e?60/t:60*i/1e3}}class yl{constructor(t){this.container=t}async nextFrame(t){var e;try{const n=this.container;if(!n.smooth&&n.lastFrameTime!==void 0&&t<n.lastFrameTime+1e3/n.fpsLimit){n.draw(!1);return}(e=n.lastFrameTime)!==null&&e!==void 0||(n.lastFrameTime=t);const o=ml(t-n.lastFrameTime,n.fpsLimit,n.smooth);if(n.lifeTime+=o.value,n.lastFrameTime=t,o.value>1e3){n.draw(!1);return}if(await n.particles.draw(o),n.duration>0&&n.lifeTime>n.duration){n.destroy();return}n.getAnimationStatus()&&n.draw(!1)}catch(n){console.error("tsParticles error in animation loop",n)}}}class N1{constructor(){this.value=""}static create(t,e){const n=new N1;return n.load(t),e!==void 0&&(typeof e=="string"||e instanceof Array?n.load({value:e}):n.load(e)),n}load(t){(t==null?void 0:t.value)!==void 0&&(this.value=t.value)}}class gl{constructor(){this.color=new N1,this.color.value="",this.image="",this.position="",this.repeat="",this.size="",this.opacity=1}load(t){t&&(t.color!==void 0&&(this.color=N1.create(this.color,t.color)),t.image!==void 0&&(this.image=t.image),t.position!==void 0&&(this.position=t.position),t.repeat!==void 0&&(this.repeat=t.repeat),t.size!==void 0&&(this.size=t.size),t.opacity!==void 0&&(this.opacity=t.opacity))}}class _l{constructor(){this.color=new N1,this.color.value="#fff",this.opacity=1}load(t){t&&(t.color!==void 0&&(this.color=N1.create(this.color,t.color)),t.opacity!==void 0&&(this.opacity=t.opacity))}}class bl{constructor(){this.composite="destination-out",this.cover=new _l,this.enable=!1}load(t){if(t){if(t.composite!==void 0&&(this.composite=t.composite),t.cover!==void 0){const e=t.cover,n=typeof t.cover=="string"?{color:t.cover}:t.cover;this.cover.load(e.color!==void 0?e:{color:n})}t.enable!==void 0&&(this.enable=t.enable)}}}class wl{constructor(){this.enable=!0,this.zIndex=0}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.zIndex!==void 0&&(this.zIndex=t.zIndex))}}class Ml{constructor(){this.enable=!1,this.mode=[]}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.mode!==void 0&&(this.mode=t.mode))}}class o3{constructor(){this.selectors=[],this.enable=!1,this.mode=[],this.type="circle"}get el(){return this.elementId}set el(t){this.elementId=t}get elementId(){return this.ids}set elementId(t){this.ids=t}get ids(){return T1(this.selectors,t=>t.replace("#",""))}set ids(t){this.selectors=T1(t,e=>`#${e}`)}load(t){var e,n;if(!t)return;const o=(n=(e=t.ids)!==null&&e!==void 0?e:t.elementId)!==null&&n!==void 0?n:t.el;o!==void 0&&(this.ids=o),t.selectors!==void 0&&(this.selectors=t.selectors),t.enable!==void 0&&(this.enable=t.enable),t.mode!==void 0&&(this.mode=t.mode),t.type!==void 0&&(this.type=t.type)}}class Ll{constructor(){this.enable=!1,this.force=2,this.smooth=10}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.force!==void 0&&(this.force=t.force),t.smooth!==void 0&&(this.smooth=t.smooth))}}class xl{constructor(){this.enable=!1,this.mode=[],this.parallax=new Ll}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.mode!==void 0&&(this.mode=t.mode),this.parallax.load(t.parallax))}}class kl{constructor(){this.delay=.5,this.enable=!0}load(t){t!==void 0&&(t.delay!==void 0&&(this.delay=t.delay),t.enable!==void 0&&(this.enable=t.enable))}}class zl{constructor(){this.onClick=new Ml,this.onDiv=new o3,this.onHover=new xl,this.resize=new kl}get onclick(){return this.onClick}set onclick(t){this.onClick=t}get ondiv(){return this.onDiv}set ondiv(t){this.onDiv=t}get onhover(){return this.onHover}set onhover(t){this.onHover=t}load(t){var e,n,o;if(!t)return;this.onClick.load((e=t.onClick)!==null&&e!==void 0?e:t.onclick);const s=(n=t.onDiv)!==null&&n!==void 0?n:t.ondiv;s!==void 0&&(this.onDiv=T1(s,r=>{const l=new o3;return l.load(r),l})),this.onHover.load((o=t.onHover)!==null&&o!==void 0?o:t.onhover),typeof t.resize=="boolean"?this.resize.enable=t.resize:this.resize.load(t.resize)}}class El{constructor(t,e){this._engine=t,this._container=e}load(t){if(t&&this._container){const e=this._engine.plugins.interactors.get(this._container);if(e)for(const n of e)n.loadModeOptions&&n.loadModeOptions(this,t)}}}class S7{constructor(t,e){this.detectsOn="window",this.events=new zl,this.modes=new El(t,e)}get detect_on(){return this.detectsOn}set detect_on(t){this.detectsOn=t}load(t){var e;if(!t)return;const n=(e=t.detectsOn)!==null&&e!==void 0?e:t.detect_on;n!==void 0&&(this.detectsOn=n),this.events.load(t.events),this.modes.load(t.modes)}}class Pl{load(t){var e,n;t&&(t.position!==void 0&&(this.position={x:(e=t.position.x)!==null&&e!==void 0?e:50,y:(n=t.position.y)!==null&&n!==void 0?n:50}),t.options!==void 0&&(this.options=V1({},t.options)))}}class Sl{constructor(){this.maxWidth=1/0,this.options={},this.mode="canvas"}load(t){t&&(t.maxWidth!==void 0&&(this.maxWidth=t.maxWidth),t.mode!==void 0&&(t.mode==="screen"?this.mode="screen":this.mode="canvas"),t.options!==void 0&&(this.options=V1({},t.options)))}}class Ol{constructor(){this.auto=!1,this.mode="any",this.value=!1}load(t){t&&(t.auto!==void 0&&(this.auto=t.auto),t.mode!==void 0&&(this.mode=t.mode),t.value!==void 0&&(this.value=t.value))}}class Rl{constructor(){this.name="",this.default=new Ol}load(t){t&&(t.name!==void 0&&(this.name=t.name),this.default.load(t.default),t.options!==void 0&&(this.options=V1({},t.options)))}}class l4{constructor(){this.count=0,this.enable=!1,this.offset=0,this.speed=1,this.decay=0,this.sync=!0}load(t){t&&(t.count!==void 0&&(this.count=l1(t.count)),t.enable!==void 0&&(this.enable=t.enable),t.offset!==void 0&&(this.offset=l1(t.offset)),t.speed!==void 0&&(this.speed=l1(t.speed)),t.decay!==void 0&&(this.decay=l1(t.decay)),t.sync!==void 0&&(this.sync=t.sync))}}class Il{constructor(){this.h=new l4,this.s=new l4,this.l=new l4}load(t){t&&(this.h.load(t.h),this.s.load(t.s),this.l.load(t.l))}}class x8 extends N1{constructor(){super(),this.animation=new Il}static create(t,e){const n=new x8;return n.load(t),e!==void 0&&(typeof e=="string"||e instanceof Array?n.load({value:e}):n.load(e)),n}load(t){if(super.load(t),!t)return;const e=t.animation;e!==void 0&&(e.enable!==void 0?this.animation.h.load(e):this.animation.load(t.animation))}}class Tl{constructor(){this.speed=2}load(t){t&&t.speed!==void 0&&(this.speed=t.speed)}}class Zl{constructor(){this.enable=!0,this.retries=0}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.retries!==void 0&&(this.retries=t.retries))}}class Al{constructor(){this.enable=!1,this.minimumValue=0}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.minimumValue!==void 0&&(this.minimumValue=t.minimumValue))}}class M2{constructor(){this.random=new Al,this.value=0}load(t){t&&(typeof t.random=="boolean"?this.random.enable=t.random:this.random.load(t.random),t.value!==void 0&&(this.value=l1(t.value,this.random.enable?this.random.minimumValue:void 0)))}}class s3 extends M2{constructor(){super(),this.random.minimumValue=.1,this.value=1}}class O7{constructor(){this.horizontal=new s3,this.vertical=new s3}load(t){t&&(this.horizontal.load(t.horizontal),this.vertical.load(t.vertical))}}class Dl{constructor(){this.absorb=new Tl,this.bounce=new O7,this.enable=!1,this.mode="bounce",this.overlap=new Zl}load(t){t&&(this.absorb.load(t.absorb),this.bounce.load(t.bounce),t.enable!==void 0&&(this.enable=t.enable),t.mode!==void 0&&(this.mode=t.mode),this.overlap.load(t.overlap))}}class $l{constructor(){this.offset=0,this.value=90}load(t){t&&(t.offset!==void 0&&(this.offset=l1(t.offset)),t.value!==void 0&&(this.value=l1(t.value)))}}class Fl{constructor(){this.distance=200,this.enable=!1,this.rotate={x:3e3,y:3e3}}get rotateX(){return this.rotate.x}set rotateX(t){this.rotate.x=t}get rotateY(){return this.rotate.y}set rotateY(t){this.rotate.y=t}load(t){var e,n,o,s;if(!t)return;t.distance!==void 0&&(this.distance=l1(t.distance)),t.enable!==void 0&&(this.enable=t.enable);const r=(n=(e=t.rotate)===null||e===void 0?void 0:e.x)!==null&&n!==void 0?n:t.rotateX;r!==void 0&&(this.rotate.x=r);const l=(s=(o=t.rotate)===null||o===void 0?void 0:o.y)!==null&&s!==void 0?s:t.rotateY;l!==void 0&&(this.rotate.y=l)}}class jl{constructor(){this.x=50,this.y=50,this.mode="percent",this.radius=0}load(t){t&&(t.x!==void 0&&(this.x=t.x),t.y!==void 0&&(this.y=t.y),t.mode!==void 0&&(this.mode=t.mode),t.radius!==void 0&&(this.radius=t.radius))}}class Nl{constructor(){this.acceleration=9.81,this.enable=!1,this.inverse=!1,this.maxSpeed=50}load(t){t&&(t.acceleration!==void 0&&(this.acceleration=l1(t.acceleration)),t.enable!==void 0&&(this.enable=t.enable),t.inverse!==void 0&&(this.inverse=t.inverse),t.maxSpeed!==void 0&&(this.maxSpeed=l1(t.maxSpeed)))}}class Bl{constructor(){this.clamp=!0,this.delay=new M2,this.enable=!1,this.options={}}load(t){t&&(t.clamp!==void 0&&(this.clamp=t.clamp),this.delay.load(t.delay),t.enable!==void 0&&(this.enable=t.enable),this.generator=t.generator,t.options&&(this.options=V1(this.options,t.options)))}}class Hl{load(t){t&&(t.color!==void 0&&(this.color=N1.create(this.color,t.color)),t.image!==void 0&&(this.image=t.image))}}class Vl{constructor(){this.enable=!1,this.length=10,this.fill=new Hl}get fillColor(){return this.fill.color}set fillColor(t){this.fill.load({color:t})}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),(t.fill!==void 0||t.fillColor!==void 0)&&this.fill.load(t.fill||{color:t.fillColor}),t.length!==void 0&&(this.length=t.length))}}class ql{constructor(){this.default="out"}load(t){var e,n,o,s;t&&(t.default!==void 0&&(this.default=t.default),this.bottom=(e=t.bottom)!==null&&e!==void 0?e:t.default,this.left=(n=t.left)!==null&&n!==void 0?n:t.default,this.right=(o=t.right)!==null&&o!==void 0?o:t.default,this.top=(s=t.top)!==null&&s!==void 0?s:t.default)}}class Ul{constructor(){this.acceleration=0,this.enable=!1}load(t){t&&(t.acceleration!==void 0&&(this.acceleration=l1(t.acceleration)),t.enable!==void 0&&(this.enable=t.enable),this.position=t.position?V1({},t.position):void 0)}}let Wl=class{constructor(){this.angle=new $l,this.attract=new Fl,this.center=new jl,this.decay=0,this.distance={},this.direction="none",this.drift=0,this.enable=!1,this.gravity=new Nl,this.path=new Bl,this.outModes=new ql,this.random=!1,this.size=!1,this.speed=2,this.spin=new Ul,this.straight=!1,this.trail=new Vl,this.vibrate=!1,this.warp=!1}get bounce(){return this.collisions}set bounce(t){this.collisions=t}get collisions(){return!1}set collisions(t){}get noise(){return this.path}set noise(t){this.path=t}get outMode(){return this.outModes.default}set outMode(t){this.outModes.default=t}get out_mode(){return this.outMode}set out_mode(t){this.outMode=t}load(t){var e,n,o;if(!t)return;this.angle.load(typeof t.angle=="number"?{value:t.angle}:t.angle),this.attract.load(t.attract),this.center.load(t.center),t.decay!==void 0&&(this.decay=l1(t.decay)),t.direction!==void 0&&(this.direction=t.direction),t.distance!==void 0&&(this.distance=typeof t.distance=="number"?{horizontal:t.distance,vertical:t.distance}:Object.assign({},t.distance)),t.drift!==void 0&&(this.drift=l1(t.drift)),t.enable!==void 0&&(this.enable=t.enable),this.gravity.load(t.gravity);const s=(n=(e=t.outModes)!==null&&e!==void 0?e:t.outMode)!==null&&n!==void 0?n:t.out_mode;s!==void 0&&(typeof s=="object"?this.outModes.load(s):this.outModes.load({default:s})),this.path.load((o=t.path)!==null&&o!==void 0?o:t.noise),t.random!==void 0&&(this.random=t.random),t.size!==void 0&&(this.size=t.size),t.speed!==void 0&&(this.speed=l1(t.speed)),this.spin.load(t.spin),t.straight!==void 0&&(this.straight=t.straight),this.trail.load(t.trail),t.vibrate!==void 0&&(this.vibrate=t.vibrate),t.warp!==void 0&&(this.warp=t.warp)}};class R7{constructor(){this.count=0,this.enable=!1,this.speed=1,this.decay=0,this.sync=!1}load(t){t&&(t.count!==void 0&&(this.count=l1(t.count)),t.enable!==void 0&&(this.enable=t.enable),t.speed!==void 0&&(this.speed=l1(t.speed)),t.decay!==void 0&&(this.decay=l1(t.decay)),t.sync!==void 0&&(this.sync=t.sync))}}class Gl extends R7{constructor(){super(),this.destroy="none",this.enable=!1,this.speed=2,this.startValue="random",this.sync=!1}get opacity_min(){return this.minimumValue}set opacity_min(t){this.minimumValue=t}load(t){var e;t&&(super.load(t),t.destroy!==void 0&&(this.destroy=t.destroy),t.enable!==void 0&&(this.enable=t.enable),this.minimumValue=(e=t.minimumValue)!==null&&e!==void 0?e:t.opacity_min,t.speed!==void 0&&(this.speed=t.speed),t.startValue!==void 0&&(this.startValue=t.startValue),t.sync!==void 0&&(this.sync=t.sync))}}class Kl extends M2{constructor(){super(),this.animation=new Gl,this.random.minimumValue=.1,this.value=1}get anim(){return this.animation}set anim(t){this.animation=t}load(t){var e;if(!t)return;super.load(t);const n=(e=t.animation)!==null&&e!==void 0?e:t.anim;n!==void 0&&(this.animation.load(n),this.value=l1(this.value,this.animation.enable?this.animation.minimumValue:void 0))}}class Yl{constructor(){this.enable=!1,this.width=1920,this.height=1080}get area(){return this.width}set area(t){this.width=t}get factor(){return this.height}set factor(t){this.height=t}get value_area(){return this.area}set value_area(t){this.area=t}load(t){var e,n,o;if(!t)return;t.enable!==void 0&&(this.enable=t.enable);const s=(n=(e=t.width)!==null&&e!==void 0?e:t.area)!==null&&n!==void 0?n:t.value_area;s!==void 0&&(this.width=s);const r=(o=t.height)!==null&&o!==void 0?o:t.factor;r!==void 0&&(this.height=r)}}class Xl{constructor(){this.density=new Yl,this.limit=0,this.value=0}get max(){return this.limit}set max(t){this.limit=t}load(t){var e;if(!t)return;this.density.load(t.density);const n=(e=t.limit)!==null&&e!==void 0?e:t.max;n!==void 0&&(this.limit=n),t.value!==void 0&&(this.value=t.value)}}class Jl{constructor(){this.blur=0,this.color=new N1,this.enable=!1,this.offset={x:0,y:0},this.color.value="#000"}load(t){t&&(t.blur!==void 0&&(this.blur=t.blur),this.color=N1.create(this.color,t.color),t.enable!==void 0&&(this.enable=t.enable),t.offset!==void 0&&(t.offset.x!==void 0&&(this.offset.x=t.offset.x),t.offset.y!==void 0&&(this.offset.y=t.offset.y)))}}const a4="character",c4="char",u4="image",h4="images",f4="polygon",d4="star";class Ql{constructor(){this.options={},this.type="circle"}get character(){var t;return(t=this.options[a4])!==null&&t!==void 0?t:this.options[c4]}set character(t){this.options[c4]=this.options[a4]=t}get custom(){return this.options}set custom(t){this.options=t}get image(){var t;return(t=this.options[u4])!==null&&t!==void 0?t:this.options[h4]}set image(t){this.options[h4]=this.options[u4]=t}get images(){return this.image}set images(t){this.image=t}get polygon(){var t;return(t=this.options[f4])!==null&&t!==void 0?t:this.options[d4]}set polygon(t){this.options[d4]=this.options[f4]=t}get stroke(){return[]}set stroke(t){}load(t){var e,n,o;if(!t)return;const s=(e=t.options)!==null&&e!==void 0?e:t.custom;if(s!==void 0)for(const r in s){const l=s[r];l&&(this.options[r]=V1((n=this.options[r])!==null&&n!==void 0?n:{},l))}this.loadShape(t.character,a4,c4,!0),this.loadShape(t.polygon,f4,d4,!1),this.loadShape((o=t.image)!==null&&o!==void 0?o:t.images,u4,h4,!0),t.type!==void 0&&(this.type=t.type)}loadShape(t,e,n,o){var s,r;if(!t)return;const l=t instanceof Array,a=l?[]:{},c=l!==this.options[e]instanceof Array,u=l!==this.options[n]instanceof Array;c&&(this.options[e]=a),u&&o&&(this.options[n]=a),this.options[e]=V1((s=this.options[e])!==null&&s!==void 0?s:a,t),(!this.options[n]||o)&&(this.options[n]=V1((r=this.options[n])!==null&&r!==void 0?r:a,t))}}class ta extends R7{constructor(){super(),this.destroy="none",this.enable=!1,this.speed=5,this.startValue="random",this.sync=!1}get size_min(){return this.minimumValue}set size_min(t){this.minimumValue=t}load(t){var e;super.load(t),t&&(t.destroy!==void 0&&(this.destroy=t.destroy),t.enable!==void 0&&(this.enable=t.enable),this.minimumValue=(e=t.minimumValue)!==null&&e!==void 0?e:t.size_min,t.speed!==void 0&&(this.speed=t.speed),t.startValue!==void 0&&(this.startValue=t.startValue),t.sync!==void 0&&(this.sync=t.sync))}}class ea extends M2{constructor(){super(),this.animation=new ta,this.random.minimumValue=1,this.value=3}get anim(){return this.animation}set anim(t){this.animation=t}load(t){var e;if(super.load(t),!t)return;const n=(e=t.animation)!==null&&e!==void 0?e:t.anim;n!==void 0&&(this.animation.load(n),this.value=l1(this.value,this.animation.enable?this.animation.minimumValue:void 0))}}class r3{constructor(){this.width=0}load(t){t&&(t.color!==void 0&&(this.color=x8.create(this.color,t.color)),t.width!==void 0&&(this.width=l1(t.width)),t.opacity!==void 0&&(this.opacity=l1(t.opacity)))}}class ia extends M2{constructor(){super(),this.opacityRate=1,this.sizeRate=1,this.velocityRate=1}load(t){super.load(t),t&&(t.opacityRate!==void 0&&(this.opacityRate=t.opacityRate),t.sizeRate!==void 0&&(this.sizeRate=t.sizeRate),t.velocityRate!==void 0&&(this.velocityRate=t.velocityRate))}}class na{constructor(t,e){this._engine=t,this._container=e,this.bounce=new O7,this.collisions=new Dl,this.color=new x8,this.color.value="#fff",this.groups={},this.move=new Wl,this.number=new Xl,this.opacity=new Kl,this.reduceDuplicates=!1,this.shadow=new Jl,this.shape=new Ql,this.size=new ea,this.stroke=new r3,this.zIndex=new ia}load(t){var e,n,o,s,r,l;if(!t)return;if(this.bounce.load(t.bounce),this.color.load(x8.create(this.color,t.color)),t.groups!==void 0)for(const u in t.groups){const h=t.groups[u];h!==void 0&&(this.groups[u]=V1((e=this.groups[u])!==null&&e!==void 0?e:{},h))}this.move.load(t.move),this.number.load(t.number),this.opacity.load(t.opacity),t.reduceDuplicates!==void 0&&(this.reduceDuplicates=t.reduceDuplicates),this.shape.load(t.shape),this.size.load(t.size),this.shadow.load(t.shadow),this.zIndex.load(t.zIndex);const a=(o=(n=t.move)===null||n===void 0?void 0:n.collisions)!==null&&o!==void 0?o:(s=t.move)===null||s===void 0?void 0:s.bounce;a!==void 0&&(this.collisions.enable=a),this.collisions.load(t.collisions),t.interactivity!==void 0&&(this.interactivity=V1({},t.interactivity));const c=(r=t.stroke)!==null&&r!==void 0?r:(l=t.shape)===null||l===void 0?void 0:l.stroke;if(c&&(this.stroke=T1(c,u=>{const h=new r3;return h.load(u),h})),this._container){const u=this._engine.plugins.updaters.get(this._container);if(u)for(const f of u)f.loadOptions&&f.loadOptions(this,t);const h=this._engine.plugins.interactors.get(this._container);if(h)for(const f of h)f.loadParticlesOptions&&f.loadParticlesOptions(this,t)}}}function I7(i,...t){for(const e of t)i.load(e)}function Se(i,t,...e){const n=new na(i,t);return I7(n,...e),n}class oa{constructor(t,e){this._engine=t,this._container=e,this.autoPlay=!0,this.background=new gl,this.backgroundMask=new bl,this.defaultThemes={},this.delay=0,this.fullScreen=new wl,this.detectRetina=!0,this.duration=0,this.fpsLimit=120,this.interactivity=new S7(t,e),this.manualParticles=[],this.particles=Se(this._engine,this._container),this.pauseOnBlur=!0,this.pauseOnOutsideViewport=!0,this.responsive=[],this.smooth=!1,this.style={},this.themes=[],this.zLayers=100}get backgroundMode(){return this.fullScreen}set backgroundMode(t){this.fullScreen.load(t)}get fps_limit(){return this.fpsLimit}set fps_limit(t){this.fpsLimit=t}get retina_detect(){return this.detectRetina}set retina_detect(t){this.detectRetina=t}load(t){var e,n,o,s,r;if(!t)return;t.preset!==void 0&&T1(t.preset,h=>this._importPreset(h)),t.autoPlay!==void 0&&(this.autoPlay=t.autoPlay),t.delay!==void 0&&(this.delay=l1(t.delay));const l=(e=t.detectRetina)!==null&&e!==void 0?e:t.retina_detect;l!==void 0&&(this.detectRetina=l),t.duration!==void 0&&(this.duration=l1(t.duration));const a=(n=t.fpsLimit)!==null&&n!==void 0?n:t.fps_limit;a!==void 0&&(this.fpsLimit=a),t.pauseOnBlur!==void 0&&(this.pauseOnBlur=t.pauseOnBlur),t.pauseOnOutsideViewport!==void 0&&(this.pauseOnOutsideViewport=t.pauseOnOutsideViewport),t.zLayers!==void 0&&(this.zLayers=t.zLayers),this.background.load(t.background);const c=(o=t.fullScreen)!==null&&o!==void 0?o:t.backgroundMode;typeof c=="boolean"?this.fullScreen.enable=c:this.fullScreen.load(c),this.backgroundMask.load(t.backgroundMask),this.interactivity.load(t.interactivity),t.manualParticles!==void 0&&(this.manualParticles=t.manualParticles.map(h=>{const f=new Pl;return f.load(h),f})),this.particles.load(t.particles),this.style=V1(this.style,t.style),this._engine.plugins.loadOptions(this,t),t.smooth!==void 0&&(this.smooth=t.smooth);const u=this._engine.plugins.interactors.get(this._container);if(u)for(const h of u)h.loadOptions&&h.loadOptions(this,t);if(t.responsive!==void 0)for(const h of t.responsive){const f=new Sl;f.load(h),this.responsive.push(f)}if(this.responsive.sort((h,f)=>h.maxWidth-f.maxWidth),t.themes!==void 0)for(const h of t.themes){const f=this.themes.find(C=>C.name===h.name);if(f)f.load(h);else{const C=new Rl;C.load(h),this.themes.push(C)}}this.defaultThemes.dark=(s=this._findDefaultTheme("dark"))===null||s===void 0?void 0:s.name,this.defaultThemes.light=(r=this._findDefaultTheme("light"))===null||r===void 0?void 0:r.name}setResponsive(t,e,n){this.load(n);const o=this.responsive.find(s=>s.mode==="screen"&&screen?s.maxWidth>screen.availWidth:s.maxWidth*e>t);return this.load(o==null?void 0:o.options),o==null?void 0:o.maxWidth}setTheme(t){if(t){const e=this.themes.find(n=>n.name===t);e&&this.load(e.options)}else{const e=g7("(prefers-color-scheme: dark)"),n=e&&e.matches,o=this._findDefaultTheme(n?"dark":"light");o&&this.load(o.options)}}_findDefaultTheme(t){var e;return(e=this.themes.find(n=>n.default.value&&n.default.mode===t))!==null&&e!==void 0?e:this.themes.find(n=>n.default.value&&n.default.mode==="any")}_importPreset(t){this.load(this._engine.plugins.getPreset(t))}}class sa{constructor(t,e){this.container=e,this._engine=t,this._interactors=this._engine.plugins.getInteractors(this.container,!0),this._externalInteractors=[],this._particleInteractors=[]}async externalInteract(t){for(const e of this._externalInteractors)e.isEnabled()&&await e.interact(t)}handleClickMode(t){for(const e of this._externalInteractors)e.handleClickMode&&e.handleClickMode(t)}init(){this._externalInteractors=[],this._particleInteractors=[];for(const t of this._interactors){switch(t.type){case"external":this._externalInteractors.push(t);break;case"particles":this._particleInteractors.push(t);break}t.init()}}async particlesInteract(t,e){for(const n of this._externalInteractors)n.clear(t,e);for(const n of this._particleInteractors)n.isEnabled(t)&&await n.interact(t,e)}async reset(t){for(const e of this._externalInteractors)e.isEnabled()&&await e.reset(t);for(const e of this._particleInteractors)e.isEnabled(t)&&await e.reset(t)}}const l3=i=>{I1(i.outMode,i.checkModes)&&(i.coord>i.maxCoord-i.radius*2?i.setCb(-i.radius):i.coord<i.radius*2&&i.setCb(i.radius))};class ra{constructor(t,e,n,o,s,r){this.container=n,this._engine=t,this.init(e,o,s,r)}destroy(t){var e;if(!(this.unbreakable||this.destroyed)){this.destroyed=!0,this.bubble.inRange=!1,this.slow.inRange=!1;for(const[,n]of this.container.plugins)n.particleDestroyed&&n.particleDestroyed(this,t);for(const n of this.container.particles.updaters)n.particleDestroyed&&n.particleDestroyed(this,t);(e=this.pathGenerator)===null||e===void 0||e.reset(this)}}draw(t){const e=this.container;for(const[,n]of e.plugins)e.canvas.drawParticlePlugin(n,this,t);e.canvas.drawParticle(this,t)}getFillColor(){var t;return this._getRollColor((t=this.bubble.color)!==null&&t!==void 0?t:i3(this.color))}getMass(){return this.getRadius()**2*Math.PI/2}getPosition(){return{x:this.position.x+this.offset.x,y:this.position.y+this.offset.y,z:this.position.z}}getRadius(){var t;return(t=this.bubble.radius)!==null&&t!==void 0?t:this.size.value}getStrokeColor(){var t;return this._getRollColor((t=this.bubble.color)!==null&&t!==void 0?t:i3(this.strokeColor))}init(t,e,n,o){var s,r,l,a,c,u,h,f,C;const d=this.container,p=this._engine;this.id=t,this.group=o,this.fill=!0,this.pathRotation=!1,this.close=!0,this.lastPathTime=0,this.destroyed=!1,this.unbreakable=!1,this.rotation=0,this.misplaced=!1,this.retina={maxDistance:{}},this.outType="normal",this.ignoresResizeRatio=!0;const v=d.retina.pixelRatio,g=d.actualOptions,_=Se(this._engine,d,g.particles),b=_.shape.type,{reduceDuplicates:P}=_;this.shape=_2(b,this.id,P);const E=_.shape;if(n&&n.shape&&n.shape.type){const q=n.shape.type,W=_2(q,this.id,P);W&&(this.shape=W,E.load(n.shape))}this.shapeData=this._loadShapeData(E,P),_.load(n),_.load((s=this.shapeData)===null||s===void 0?void 0:s.particles),this.interactivity=new S7(p,d),this.interactivity.load(d.actualOptions.interactivity),this.interactivity.load(_.interactivity),this.fill=(l=(r=this.shapeData)===null||r===void 0?void 0:r.fill)!==null&&l!==void 0?l:this.fill,this.close=(c=(a=this.shapeData)===null||a===void 0?void 0:a.close)!==null&&c!==void 0?c:this.close,this.options=_;const O=this.options.move.path;this.pathDelay=r5(O.delay)*1e3,O.generator&&(this.pathGenerator=this._engine.plugins.getPathGenerator(O.generator),this.pathGenerator&&d.addPath(O.generator,this.pathGenerator)&&this.pathGenerator.init(d));const M=K(this.options.zIndex.value);d.retina.initParticle(this);const z=this.options.size,X=z.value,V=z.animation;if(this.size={enable:z.animation.enable,value:K(z.value)*d.retina.pixelRatio,max:N2(X)*v,min:d6(X)*v,loops:0,maxLoops:K(z.animation.count)},V.enable)switch(this.size.status="increasing",this.size.decay=1-K(V.decay),V.startValue){case"min":this.size.value=this.size.min,this.size.status="increasing";break;case"random":this.size.value=Y1(this.size),this.size.status=d1()>=.5?"increasing":"decreasing";break;case"max":default:this.size.value=this.size.max,this.size.status="decreasing";break}this.size.initialValue=this.size.value,this.bubble={inRange:!1},this.slow={inRange:!1,factor:1},this.position=this._calcPosition(d,e,I2(M,0,d.zLayers)),this.initialPosition=this.position.copy();const Z=d.canvas.size,F=Object.assign({},this.options.move.center),U=F.mode==="percent";switch(this.moveCenter={x:F.x*(U?Z.width/100:1),y:F.y*(U?Z.height/100:1),radius:(u=this.options.move.center.radius)!==null&&u!==void 0?u:0,mode:(h=this.options.move.center.mode)!==null&&h!==void 0?h:"percent"},this.direction=Ar(this.options.move.direction,this.position,this.moveCenter),this.options.move.direction){case"inside":this.outType="inside";break;case"outside":this.outType="outside";break}this.initialVelocity=this._calculateVelocity(),this.velocity=this.initialVelocity.copy(),this.moveDecay=1-K(this.options.move.decay),this.offset=P1.origin;const T=d.particles;T.needsSort=T.needsSort||T.lastZIndex<this.position.z,T.lastZIndex=this.position.z,this.zIndexFactor=this.position.z/d.zLayers,this.sides=24;let k=d.drawers.get(this.shape);k||(k=this._engine.plugins.getShapeDrawer(this.shape),k&&d.drawers.set(this.shape,k)),k!=null&&k.loadShape&&(k==null||k.loadShape(this));const D=k==null?void 0:k.getSidesCount;D&&(this.sides=D(this)),this.spawning=!1,this.shadowColor=b2(this.options.shadow.color);for(const q of d.particles.updaters)q.init(this);for(const q of d.particles.movers)(f=q.init)===null||f===void 0||f.call(q,this);k!=null&&k.particleInit&&k.particleInit(d,this);for(const[,q]of d.plugins)(C=q.particleCreated)===null||C===void 0||C.call(q,this)}isInsideCanvas(){const t=this.getRadius(),e=this.container.canvas.size;return this.position.x>=-t&&this.position.y>=-t&&this.position.y<=e.height+t&&this.position.x<=e.width+t}isVisible(){return!this.destroyed&&!this.spawning&&this.isInsideCanvas()}reset(){var t;for(const e of this.container.particles.updaters)(t=e.reset)===null||t===void 0||t.call(e,this)}_calcPosition(t,e,n,o=0){var s,r,l,a;for(const[,v]of t.plugins){const g=v.particlePosition!==void 0?v.particlePosition(e,this):void 0;if(g!==void 0)return d2.create(g.x,g.y,n)}const c=t.canvas.size,u=Fr({size:c,position:e}),h=d2.create(u.x,u.y,n),f=this.getRadius(),C=this.options.move.outModes,d=v=>{l3({outMode:v,checkModes:["bounce","bounce-horizontal"],coord:h.x,maxCoord:t.canvas.size.width,setCb:g=>h.x+=g,radius:f})},p=v=>{l3({outMode:v,checkModes:["bounce","bounce-vertical"],coord:h.y,maxCoord:t.canvas.size.height,setCb:g=>h.y+=g,radius:f})};return d((s=C.left)!==null&&s!==void 0?s:C.default),d((r=C.right)!==null&&r!==void 0?r:C.default),p((l=C.top)!==null&&l!==void 0?l:C.default),p((a=C.bottom)!==null&&a!==void 0?a:C.default),this._checkOverlap(h,o)?this._calcPosition(t,void 0,n,o+1):h}_calculateVelocity(){const t=Dr(this.direction),e=t.copy(),n=this.options.move;if(n.direction==="inside"||n.direction==="outside")return e;const o=Math.PI/180*K(n.angle.value),s=Math.PI/180*K(n.angle.offset),r={left:s-o/2,right:s+o/2};return n.straight||(e.angle+=Y1(l1(r.left,r.right))),n.random&&typeof n.speed=="number"&&(e.length*=d1()),e}_checkOverlap(t,e=0){const n=this.options.collisions,o=this.getRadius();if(!n.enable)return!1;const s=n.overlap;if(s.enable)return!1;const r=s.retries;if(r>=0&&e>r)throw new Error("Particle is overlapping and can't be placed");let l=!1;for(const a of this.container.particles.array)if(X1(t,a.position)<o+a.getRadius()){l=!0;break}return l}_getRollColor(t){var e;if(!t||!this.roll||!this.backColor&&!this.roll.alter)return t;const n=this.roll.horizontal&&this.roll.vertical?2:1,o=this.roll.horizontal?Math.PI/2:0;return Math.floor((((e=this.roll.angle)!==null&&e!==void 0?e:0)+o)/(Math.PI/n))%2?this.backColor?this.backColor:this.roll.alter?sl(t,this.roll.alter.type,this.roll.alter.value):t:t}_loadShapeData(t,e){const n=t.options[this.shape];if(n)return V1({},_2(n,this.id,e))}}class la{constructor(t,e){this.position=t,this.particle=e}}class T7{constructor(t,e){this.position={x:t,y:e}}}class c2 extends T7{constructor(t,e,n){super(t,e),this.radius=n}contains(t){return X1(t,this.position)<=this.radius}intersects(t){const e=t,n=t,o=this.position,s=t.position,r={x:Math.abs(s.x-o.x),y:Math.abs(s.y-o.y)},l=this.radius;if(n.radius!==void 0){const a=l+n.radius,c=Math.sqrt(r.x**2+r.y**2);return a>c}else if(e.size!==void 0){const a=e.size.width,c=e.size.height;return Math.pow(r.x-a,2)+Math.pow(r.y-c,2)<=l**2||r.x<=l+a&&r.y<=l+c||r.x<=a||r.y<=c}return!1}}class l2 extends T7{constructor(t,e,n,o){super(t,e),this.size={height:o,width:n}}contains(t){const e=this.size.width,n=this.size.height,o=this.position;return t.x>=o.x&&t.x<=o.x+e&&t.y>=o.y&&t.y<=o.y+n}intersects(t){t instanceof c2&&t.intersects(this);const e=this.size.width,n=this.size.height,o=this.position,s=t.position,r=t instanceof l2?t.size:{width:0,height:0},l=r.width,a=r.height;return s.x<o.x+e&&s.x+l>o.x&&s.y<o.y+n&&s.y+a>o.y}}class N5{constructor(t,e){this.rectangle=t,this.capacity=e,this._points=[],this._divided=!1}insert(t){var e,n,o,s,r;return this.rectangle.contains(t.position)?this._points.length<this.capacity?(this._points.push(t),!0):(this._divided||this.subdivide(),(r=((e=this._NE)===null||e===void 0?void 0:e.insert(t))||((n=this._NW)===null||n===void 0?void 0:n.insert(t))||((o=this._SE)===null||o===void 0?void 0:o.insert(t))||((s=this._SW)===null||s===void 0?void 0:s.insert(t)))!==null&&r!==void 0?r:!1):!1}query(t,e,n){var o,s,r,l;const a=n??[];if(!t.intersects(this.rectangle))return[];for(const c of this._points)!t.contains(c.position)&&X1(t.position,c.position)>c.particle.getRadius()&&(!e||e(c.particle))||a.push(c.particle);return this._divided&&((o=this._NE)===null||o===void 0||o.query(t,e,a),(s=this._NW)===null||s===void 0||s.query(t,e,a),(r=this._SE)===null||r===void 0||r.query(t,e,a),(l=this._SW)===null||l===void 0||l.query(t,e,a)),a}queryCircle(t,e,n){return this.query(new c2(t.x,t.y,e),n)}queryRectangle(t,e,n){return this.query(new l2(t.x,t.y,e.width,e.height),n)}subdivide(){const t=this.rectangle.position.x,e=this.rectangle.position.y,n=this.rectangle.size.width,o=this.rectangle.size.height,s=this.capacity;this._NE=new N5(new l2(t,e,n/2,o/2),s),this._NW=new N5(new l2(t+n/2,e,n/2,o/2),s),this._SE=new N5(new l2(t,e+o/2,n/2,o/2),s),this._SW=new N5(new l2(t+n/2,e+o/2,n/2,o/2),s),this._divided=!0}}class aa{constructor(t,e){this.container=e,this._engine=t,this.nextId=0,this.array=[],this.zArray=[],this.pool=[],this.limit=0,this.needsSort=!1,this.lastZIndex=0,this.interactionManager=new sa(this._engine,e);const n=this.container.canvas.size;this.quadTree=new N5(new l2(-n.width/4,-n.height/4,n.width*3/2,n.height*3/2),4),this.movers=this._engine.plugins.getMovers(e,!0),this.updaters=this._engine.plugins.getUpdaters(e,!0)}get count(){return this.array.length}addManualParticles(){const t=this.container,e=t.actualOptions;for(const n of e.manualParticles)this.addParticle($r({size:t.canvas.size,position:n.position}),n.options)}addParticle(t,e,n,o){const s=this.container,r=s.actualOptions,l=r.particles.number.limit;if(l>0){const a=this.count+1-l;a>0&&this.removeQuantity(a)}return this._pushParticle(t,e,n,o)}clear(){this.array=[],this.zArray=[]}destroy(){this.array=[],this.zArray=[],this.movers=[],this.updaters=[]}async draw(t){const e=this.container,n=this.container.canvas.size;this.quadTree=new N5(new l2(-n.width/4,-n.height/4,n.width*3/2,n.height*3/2),4),e.canvas.clear(),await this.update(t),this.needsSort&&(this.zArray.sort((o,s)=>s.position.z-o.position.z||o.id-s.id),this.lastZIndex=this.zArray[this.zArray.length-1].position.z,this.needsSort=!1);for(const[,o]of e.plugins)e.canvas.drawPlugin(o,t);for(const o of this.zArray)o.draw(t)}handleClickMode(t){this.interactionManager.handleClickMode(t)}init(){var t;const e=this.container,n=e.actualOptions;this.lastZIndex=0,this.needsSort=!1;let o=!1;this.updaters=this._engine.plugins.getUpdaters(e,!0),this.interactionManager.init();for(const[,s]of e.plugins)if(s.particlesInitialization!==void 0&&(o=s.particlesInitialization()),o)break;this.interactionManager.init();for(const[,s]of e.pathGenerators)s.init(e);if(this.addManualParticles(),!o){for(const s in n.particles.groups){const r=n.particles.groups[s];for(let l=this.count,a=0;a<((t=r.number)===null||t===void 0?void 0:t.value)&&l<n.particles.number.value;l++,a++)this.addParticle(void 0,r,s)}for(let s=this.count;s<n.particles.number.value;s++)this.addParticle()}}push(t,e,n,o){this.pushing=!0;for(let s=0;s<t;s++)this.addParticle(e==null?void 0:e.position,n,o);this.pushing=!1}async redraw(){this.clear(),this.init(),await this.draw({value:0,factor:0})}remove(t,e,n){this.removeAt(this.array.indexOf(t),void 0,e,n)}removeAt(t,e=1,n,o){if(t<0||t>this.count)return;let s=0;for(let r=t;s<e&&r<this.count;r++){const l=this.array[r];if(!l||l.group!==n)continue;l.destroy(o),this.array.splice(r--,1);const a=this.zArray.indexOf(l);this.zArray.splice(a,1),this.pool.push(l),s++,this._engine.dispatchEvent("particleRemoved",{container:this.container,data:{particle:l}})}}removeQuantity(t,e){this.removeAt(0,t,e)}setDensity(){const t=this.container.actualOptions;for(const e in t.particles.groups)this._applyDensity(t.particles.groups[e],0,e);this._applyDensity(t.particles,t.manualParticles.length)}async update(t){var e,n;const o=this.container,s=[];for(const[,r]of o.pathGenerators)r.update();for(const[,r]of o.plugins)(e=r.update)===null||e===void 0||e.call(r,t);for(const r of this.array){const l=o.canvas.resizeFactor;l&&!r.ignoresResizeRatio&&(r.position.x*=l.width,r.position.y*=l.height,r.initialPosition.x*=l.width,r.initialPosition.y*=l.height),r.ignoresResizeRatio=!1,await this.interactionManager.reset(r);for(const[,a]of this.container.plugins){if(r.destroyed)break;(n=a.particleUpdate)===null||n===void 0||n.call(a,r,t)}for(const a of this.movers)a.isEnabled(r)&&a.move(r,t);if(r.destroyed){s.push(r);continue}this.quadTree.insert(new la(r.getPosition(),r))}for(const r of s)this.remove(r);await this.interactionManager.externalInteract(t);for(const r of this.array){for(const l of this.updaters)l.update(r,t);!r.destroyed&&!r.spawning&&await this.interactionManager.particlesInteract(r,t)}delete o.canvas.resizeFactor}_applyDensity(t,e,n){var o;if(!(!((o=t.number.density)===null||o===void 0)&&o.enable))return;const s=t.number,r=this._initDensityFactor(s.density),l=s.value,a=s.limit>0?s.limit:l,c=Math.min(l,a)*r+e,u=Math.min(this.count,this.array.filter(h=>h.group===n).length);this.limit=s.limit*r,u<c?this.push(Math.abs(c-u),void 0,t,n):u>c&&this.removeQuantity(u-c,n)}_initDensityFactor(t){const e=this.container;if(!e.canvas.element||!t.enable)return 1;const n=e.canvas.element,o=e.retina.pixelRatio;return n.width*n.height/(t.factor*o**2*t.area)}_pushParticle(t,e,n,o){try{let s=this.pool.pop();s?s.init(this.nextId,t,e,n):s=new ra(this._engine,this.nextId,this.container,t,e,n);let r=!0;return o&&(r=o(s)),r?(this.array.push(s),this.zArray.push(s),this.nextId++,this._engine.dispatchEvent("particleAdded",{container:this.container,data:{particle:s}}),s):void 0}catch(s){console.warn(`error adding particle: ${s}`);return}}}class ca{constructor(t){this.container=t}init(){const t=this.container,e=t.actualOptions;this.pixelRatio=!e.detectRetina||W5()?1:window.devicePixelRatio,this.reduceFactor=1;const n=this.pixelRatio;if(t.canvas.element){const s=t.canvas.element;t.canvas.size.width=s.offsetWidth*n,t.canvas.size.height=s.offsetHeight*n}const o=e.particles;this.attractDistance=K(o.move.attract.distance)*n,this.sizeAnimationSpeed=K(o.size.animation.speed)*n,this.maxSpeed=K(o.move.gravity.maxSpeed)*n}initParticle(t){const e=t.options,n=this.pixelRatio,o=e.move.distance,s=t.retina;s.attractDistance=K(e.move.attract.distance)*n,s.moveDrift=K(e.move.drift)*n,s.moveSpeed=K(e.move.speed)*n,s.sizeAnimationSpeed=K(e.size.animation.speed)*n;const r=s.maxDistance;r.horizontal=o.horizontal!==void 0?o.horizontal*n:void 0,r.vertical=o.vertical!==void 0?o.vertical*n:void 0,s.maxSpeed=K(e.move.gravity.maxSpeed)*n}}function D1(i){return i&&!i.destroyed}function N8(i,t,...e){const n=new oa(i,t);return I7(n,...e),n}const ua="default",a3={generate:i=>{const t=i.velocity.copy();return t.angle+=t.length*Math.PI/180,t},init:()=>{},update:()=>{},reset:()=>{}};class ha{constructor(t,e,n){this.id=e,this._engine=t,this.fpsLimit=120,this.smooth=!1,this._delay=0,this.duration=0,this.lifeTime=0,this._firstStart=!0,this.started=!1,this.destroyed=!1,this._paused=!0,this.lastFrameTime=0,this.zLayers=100,this.pageHidden=!1,this._sourceOptions=n,this._initialSourceOptions=n,this.retina=new ca(this),this.canvas=new pl(this),this.particles=new aa(this._engine,this),this.frameManager=new yl(this),this.pathGenerators=new Map,this.interactivity={mouse:{clicking:!1,inside:!1}},this.plugins=new Map,this.drawers=new Map,this._options=N8(this._engine,this),this.actualOptions=N8(this._engine,this),this._eventListeners=new vl(this),typeof IntersectionObserver<"u"&&IntersectionObserver&&(this._intersectionObserver=new IntersectionObserver(o=>this._intersectionManager(o))),this._engine.dispatchEvent("containerBuilt",{container:this})}get options(){return this._options}get sourceOptions(){return this._sourceOptions}addClickHandler(t){if(!D1(this))return;const e=this.interactivity.element;if(!e)return;const n=(h,f,C)=>{if(!D1(this))return;const d=this.retina.pixelRatio,p={x:f.x*d,y:f.y*d},v=this.particles.quadTree.queryCircle(p,C*d);t(h,v)},o=h=>{if(!D1(this))return;const f=h,C={x:f.offsetX||f.clientX,y:f.offsetY||f.clientY};n(h,C,1)},s=()=>{D1(this)&&(c=!0,u=!1)},r=()=>{D1(this)&&(u=!0)},l=h=>{if(D1(this)){if(c&&!u){const f=h;let C=f.touches[f.touches.length-1];if(!C&&(C=f.changedTouches[f.changedTouches.length-1],!C))return;const d=this.canvas.element,p=d?d.getBoundingClientRect():void 0,v={x:C.clientX-(p?p.left:0),y:C.clientY-(p?p.top:0)};n(h,v,Math.max(C.radiusX,C.radiusY))}c=!1,u=!1}},a=()=>{D1(this)&&(c=!1,u=!1)};let c=!1,u=!1;e.addEventListener("click",o),e.addEventListener("touchstart",s),e.addEventListener("touchmove",r),e.addEventListener("touchend",l),e.addEventListener("touchcancel",a)}addPath(t,e,n=!1){return!D1(this)||!n&&this.pathGenerators.has(t)?!1:(this.pathGenerators.set(t,e??a3),!0)}destroy(){if(!D1(this))return;this.stop(),this.particles.destroy(),this.canvas.destroy();for(const[,n]of this.drawers)n.destroy&&n.destroy(this);for(const n of this.drawers.keys())this.drawers.delete(n);this._engine.plugins.destroy(this),this.destroyed=!0;const t=this._engine.dom(),e=t.findIndex(n=>n===this);e>=0&&t.splice(e,1),this._engine.dispatchEvent("containerDestroyed",{container:this})}draw(t){if(!D1(this))return;let e=t;this._drawAnimationFrame=Br()(async n=>{e&&(this.lastFrameTime=void 0,e=!1),await this.frameManager.nextFrame(n)})}exportConfiguration(){return JSON.stringify(this.actualOptions,(t,e)=>{if(!(t==="_engine"||t==="_container"))return e},2)}exportImage(t,e,n){const o=this.canvas.element;o&&o.toBlob(t,e??"image/png",n)}exportImg(t){this.exportImage(t)}getAnimationStatus(){return!this._paused&&!this.pageHidden&&D1(this)}handleClickMode(t){if(D1(this)){this.particles.handleClickMode(t);for(const[,e]of this.plugins)e.handleClickMode&&e.handleClickMode(t)}}async init(){if(!D1(this))return;const t=this._engine.plugins.getSupportedShapes();for(const n of t){const o=this._engine.plugins.getShapeDrawer(n);o&&this.drawers.set(n,o)}this._options=N8(this._engine,this,this._initialSourceOptions,this.sourceOptions),this.actualOptions=N8(this._engine,this,this._options);const e=this._engine.plugins.getAvailablePlugins(this);for(const[n,o]of e)this.plugins.set(n,o);this.retina.init(),await this.canvas.init(),this.updateActualOptions(),this.canvas.initBackground(),this.canvas.resize(),this.zLayers=this.actualOptions.zLayers,this.duration=K(this.actualOptions.duration)*1e3,this._delay=K(this.actualOptions.delay)*1e3,this.lifeTime=0,this.fpsLimit=this.actualOptions.fpsLimit>0?this.actualOptions.fpsLimit:120,this.smooth=this.actualOptions.smooth;for(const[,n]of this.drawers)n.init&&await n.init(this);for(const[,n]of this.plugins)n.init&&await n.init();this._engine.dispatchEvent("containerInit",{container:this}),this.particles.init(),this.particles.setDensity();for(const[,n]of this.plugins)n.particlesSetup&&n.particlesSetup();this._engine.dispatchEvent("particlesSetup",{container:this})}async loadTheme(t){D1(this)&&(this._currentTheme=t,await this.refresh())}pause(){if(D1(this)&&(this._drawAnimationFrame!==void 0&&(Hr()(this._drawAnimationFrame),delete this._drawAnimationFrame),!this._paused)){for(const[,t]of this.plugins)t.pause&&t.pause();this.pageHidden||(this._paused=!0),this._engine.dispatchEvent("containerPaused",{container:this})}}play(t){if(!D1(this))return;const e=this._paused||t;if(this._firstStart&&!this.actualOptions.autoPlay){this._firstStart=!1;return}if(this._paused&&(this._paused=!1),e)for(const[,n]of this.plugins)n.play&&n.play();this._engine.dispatchEvent("containerPlay",{container:this}),this.draw(e||!1)}async refresh(){if(D1(this))return this.stop(),this.start()}async reset(){if(D1(this))return this._options=N8(this._engine,this),this.refresh()}setNoise(t,e,n){D1(this)&&this.setPath(t,e,n)}setPath(t,e,n){if(!t||!D1(this))return;const o=Object.assign({},a3);if(typeof t=="function")o.generate=t,e&&(o.init=e),n&&(o.update=n);else{const s=o;o.generate=t.generate||s.generate,o.init=t.init||s.init,o.update=t.update||s.update}this.addPath(ua,o,!0)}async start(){!D1(this)||this.started||(await this.init(),this.started=!0,await new Promise(t=>{this._delayTimeout=setTimeout(async()=>{this._eventListeners.addListeners(),this.interactivity.element instanceof HTMLElement&&this._intersectionObserver&&this._intersectionObserver.observe(this.interactivity.element);for(const[,e]of this.plugins)e.start&&await e.start();this._engine.dispatchEvent("containerStarted",{container:this}),this.play(),t()},this._delay)}))}stop(){if(!(!D1(this)||!this.started)){this._delayTimeout&&(clearTimeout(this._delayTimeout),delete this._delayTimeout),this._firstStart=!0,this.started=!1,this._eventListeners.removeListeners(),this.pause(),this.particles.clear(),this.canvas.stop(),this.interactivity.element instanceof HTMLElement&&this._intersectionObserver&&this._intersectionObserver.unobserve(this.interactivity.element);for(const[,t]of this.plugins)t.stop&&t.stop();for(const t of this.plugins.keys())this.plugins.delete(t);this._sourceOptions=this._options,this._engine.dispatchEvent("containerStopped",{container:this})}}updateActualOptions(){this.actualOptions.responsive=[];const t=this.actualOptions.setResponsive(this.canvas.size.width,this.retina.pixelRatio,this._options);return this.actualOptions.setTheme(this._currentTheme),this.responsiveMaxWidth===t?!1:(this.responsiveMaxWidth=t,!0)}_intersectionManager(t){if(!(!D1(this)||!this.actualOptions.pauseOnOutsideViewport))for(const e of t)e.target===this.interactivity.element&&(e.isIntersecting?this.play:this.pause)()}}async function fa(i,t){const e=_2(i,t);if(!e)return;const n=await fetch(e);if(n.ok)return n.json();console.error(`tsParticles - Error ${n.status} while retrieving config file`)}class da{constructor(t){this._engine=t}load(t,e,n){const o={index:n,remote:!1};return typeof t=="string"?o.tagId=t:o.options=t,typeof e=="number"?o.index=e:o.options=e??o.options,this.loadOptions(o)}async loadJSON(t,e,n){let o,s;return typeof e=="number"||e===void 0?o=t:(s=t,o=e),this.loadRemoteOptions({tagId:s,url:o,index:n,remote:!0})}async loadOptions(t){var e,n,o;const s=(e=t.tagId)!==null&&e!==void 0?e:`tsparticles${Math.floor(d1()*1e4)}`,{index:r,url:l,remote:a}=t,c=a?await fa(l,r):t.options;let u=(n=t.element)!==null&&n!==void 0?n:document.getElementById(s);u||(u=document.createElement("div"),u.id=s,(o=document.querySelector("body"))===null||o===void 0||o.append(u));const h=_2(c,r),f=this._engine.dom(),C=f.findIndex(v=>v.id===s);if(C>=0){const v=this._engine.domItem(C);v&&!v.destroyed&&(v.destroy(),f.splice(C,1))}let d;if(u.tagName.toLowerCase()==="canvas")d=u,d.dataset[Q8]="false";else{const v=u.getElementsByTagName("canvas");v.length?(d=v[0],d.dataset[Q8]="false"):(d=document.createElement("canvas"),d.dataset[Q8]="true",u.appendChild(d))}d.style.width||(d.style.width="100%"),d.style.height||(d.style.height="100%");const p=new ha(this._engine,s,h);return C>=0?f.splice(C,0,p):f.push(p),p.canvas.loadCanvas(d),await p.start(),p}async loadRemoteOptions(t){return this.loadOptions(t)}async set(t,e,n,o){const s={index:o,remote:!1};return typeof t=="string"?s.tagId=t:s.element=t,e instanceof HTMLElement?s.element=e:s.options=e,typeof n=="number"?s.index=n:s.options=n??s.options,this.loadOptions(s)}async setJSON(t,e,n,o){let s,r,l,a;return t instanceof HTMLElement?(a=t,s=e,l=n):(r=t,a=e,s=n,l=o),this.loadRemoteOptions({tagId:r,url:s,index:l,element:a,remote:!0})}}function C4(i,t,e,n=!1){let o=t.get(i);return(!o||n)&&(o=[...e.values()].map(s=>s(i)),t.set(i,o)),o}class Ca{constructor(t){this._engine=t,this.plugins=[],this._initializers={interactors:new Map,movers:new Map,updaters:new Map},this.interactors=new Map,this.movers=new Map,this.updaters=new Map,this.presets=new Map,this.drawers=new Map,this.pathGenerators=new Map}addInteractor(t,e){this._initializers.interactors.set(t,e)}addParticleMover(t,e){this._initializers.movers.set(t,e)}addParticleUpdater(t,e){this._initializers.updaters.set(t,e)}addPathGenerator(t,e){this.getPathGenerator(t)||this.pathGenerators.set(t,e)}addPlugin(t){this.getPlugin(t.id)||this.plugins.push(t)}addPreset(t,e,n=!1){(n||!this.getPreset(t))&&this.presets.set(t,e)}addShapeDrawer(t,e){T1(t,n=>{this.getShapeDrawer(n)||this.drawers.set(n,e)})}destroy(t){this.updaters.delete(t),this.movers.delete(t),this.interactors.delete(t)}getAvailablePlugins(t){const e=new Map;for(const n of this.plugins)n.needsPlugin(t.actualOptions)&&e.set(n.id,n.getPlugin(t));return e}getInteractors(t,e=!1){return C4(t,this.interactors,this._initializers.interactors,e)}getMovers(t,e=!1){return C4(t,this.movers,this._initializers.movers,e)}getPathGenerator(t){return this.pathGenerators.get(t)}getPlugin(t){return this.plugins.find(e=>e.id===t)}getPreset(t){return this.presets.get(t)}getShapeDrawer(t){return this.drawers.get(t)}getSupportedShapes(){return this.drawers.keys()}getUpdaters(t,e=!1){return C4(t,this.updaters,this._initializers.updaters,e)}loadOptions(t,e){for(const n of this.plugins)n.loadOptions(t,e)}loadParticlesOptions(t,e,...n){const o=this.updaters.get(t);if(o)for(const s of o)s.loadOptions&&s.loadOptions(e,...n)}}class pa{constructor(){this._domArray=[],this._eventDispatcher=new Ir,this._initialized=!1,this._loader=new da(this),this.plugins=new Ca(this)}get version(){return"2.9.3"}addEventListener(t,e){this._eventDispatcher.addEventListener(t,e)}async addInteractor(t,e){this.plugins.addInteractor(t,e),await this.refresh()}async addMover(t,e){this.plugins.addParticleMover(t,e),await this.refresh()}async addParticleUpdater(t,e){this.plugins.addParticleUpdater(t,e),await this.refresh()}async addPathGenerator(t,e){this.plugins.addPathGenerator(t,e),await this.refresh()}async addPlugin(t){this.plugins.addPlugin(t),await this.refresh()}async addPreset(t,e,n=!1){this.plugins.addPreset(t,e,n),await this.refresh()}async addShape(t,e,n,o,s){let r;typeof e=="function"?r={afterEffect:o,destroy:s,draw:e,init:n}:r=e,this.plugins.addShapeDrawer(t,r),await this.refresh()}dispatchEvent(t,e){this._eventDispatcher.dispatchEvent(t,e)}dom(){return this._domArray}domItem(t){const e=this.dom(),n=e[t];if(n&&!n.destroyed)return n;e.splice(t,1)}init(){this._initialized||(this._initialized=!0)}async load(t,e){return this._loader.load(t,e)}async loadFromArray(t,e,n){return this._loader.load(t,e,n)}async loadJSON(t,e,n){return this._loader.loadJSON(t,e,n)}async refresh(){for(const t of this.dom())await t.refresh()}removeEventListener(t,e){this._eventDispatcher.removeEventListener(t,e)}async set(t,e,n){return this._loader.set(t,e,n)}async setJSON(t,e,n,o){return this._loader.setJSON(t,e,n,o)}setOnClickHandler(t){const e=this.dom();if(!e.length)throw new Error("Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()");for(const n of e)n.addClickHandler(t)}}class va{constructor(){this.key="hsl",this.stringPrefix="hsl"}handleColor(t){var e;const n=t.value,o=(e=n.hsl)!==null&&e!==void 0?e:t.value;if(o.h!==void 0&&o.s!==void 0&&o.l!==void 0)return M8(o)}handleRangeColor(t){var e;const n=t.value,o=(e=n.hsl)!==null&&e!==void 0?e:t.value;if(o.h!==void 0&&o.l!==void 0)return M8({h:K(o.h),l:K(o.l),s:K(o.s)})}parseString(t){if(!t.startsWith("hsl"))return;const e=/hsla?\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([\d.%]+)\s*)?\)/i,n=e.exec(t);return n?Yr({a:n.length>4?y7(n[5]):1,h:parseInt(n[1],10),l:parseInt(n[3],10),s:parseInt(n[2],10)}):void 0}}class ma{constructor(){this.key="rgb",this.stringPrefix="rgb"}handleColor(t){var e;const n=t.value,o=(e=n.rgb)!==null&&e!==void 0?e:t.value;if(o.r!==void 0)return o}handleRangeColor(t){var e;const n=t.value,o=(e=n.rgb)!==null&&e!==void 0?e:t.value;if(o.r!==void 0)return{r:K(o.r),g:K(o.g),b:K(o.b)}}parseString(t){if(!t.startsWith(this.stringPrefix))return;const e=/rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([\d.%]+)\s*)?\)/i,n=e.exec(t);return n?{a:n.length>4?y7(n[5]):1,b:parseInt(n[3],10),g:parseInt(n[2],10),r:parseInt(n[1],10)}:void 0}}class T2{constructor(t){this.container=t,this.type="external"}}class Oe{constructor(t){this.container=t,this.type="particles"}}const ya=new ma,ga=new va;L7(ya);L7(ga);const _a=new pa;_a.init();class ba{constructor(){this.radius=0,this.mass=0}load(t){t&&(t.mass!==void 0&&(this.mass=t.mass),t.radius!==void 0&&(this.radius=t.radius))}}class wa extends M2{constructor(){super(),this.density=5,this.value=50,this.limit=new ba}load(t){t&&(super.load(t),t.density!==void 0&&(this.density=t.density),typeof t.limit=="number"?this.limit.radius=t.limit:this.limit.load(t.limit))}}class ut{constructor(){this.color=new N1,this.color.value="#000000",this.draggable=!1,this.opacity=1,this.destroy=!0,this.orbits=!1,this.size=new wa}load(t){t!==void 0&&(t.color!==void 0&&(this.color=N1.create(this.color,t.color)),t.draggable!==void 0&&(this.draggable=t.draggable),this.name=t.name,t.opacity!==void 0&&(this.opacity=t.opacity),t.position!==void 0&&(this.position={},t.position.x!==void 0&&(this.position.x=l1(t.position.x)),t.position.y!==void 0&&(this.position.y=l1(t.position.y))),t.size!==void 0&&this.size.load(t.size),t.destroy!==void 0&&(this.destroy=t.destroy),t.orbits!==void 0&&(this.orbits=t.orbits))}}class Ma{constructor(t,e,n,o){var s,r,l;this.absorbers=t,this.container=e,this.initialPosition=o?P1.create(o.x,o.y):void 0,n instanceof ut?this.options=n:(this.options=new ut,this.options.load(n)),this.dragging=!1,this.name=this.options.name,this.opacity=this.options.opacity,this.size=K(this.options.size.value)*e.retina.pixelRatio,this.mass=this.size*this.options.size.density*e.retina.reduceFactor;const a=this.options.size.limit;this.limit={radius:a.radius*e.retina.pixelRatio*e.retina.reduceFactor,mass:a.mass},this.color=(s=b2(this.options.color))!==null&&s!==void 0?s:{b:0,g:0,r:0},this.position=(l=(r=this.initialPosition)===null||r===void 0?void 0:r.copy())!==null&&l!==void 0?l:this.calcPosition()}attract(t){const e=this.container,n=this.options;if(n.draggable){const c=e.interactivity.mouse;c.clicking&&c.downPosition?X1(this.position,c.downPosition)<=this.size&&(this.dragging=!0):this.dragging=!1,this.dragging&&c.position&&(this.position.x=c.position.x,this.position.y=c.position.y)}const o=t.getPosition(),{dx:s,dy:r,distance:l}=n2(this.position,o),a=P1.create(s,r);if(a.length=this.mass/Math.pow(l,2)*e.retina.reduceFactor,l<this.size+t.getRadius()){const c=t.getRadius()*.033*e.retina.pixelRatio;this.size>t.getRadius()&&l<this.size-t.getRadius()||t.absorberOrbit!==void 0&&t.absorberOrbit.length<0?n.destroy?t.destroy():(t.needsNewPosition=!0,this.updateParticlePosition(t,a)):(n.destroy&&(t.size.value-=c),this.updateParticlePosition(t,a)),(this.limit.radius<=0||this.size<this.limit.radius)&&(this.size+=c),(this.limit.mass<=0||this.mass<this.limit.mass)&&(this.mass+=c*this.options.size.density*e.retina.reduceFactor)}else this.updateParticlePosition(t,a)}draw(t){t.translate(this.position.x,this.position.y),t.beginPath(),t.arc(0,0,this.size,0,Math.PI*2,!1),t.closePath(),t.fillStyle=B2(this.color,this.opacity),t.fill()}resize(){const t=this.initialPosition;this.position=t&&L6(t,this.container.canvas.size,P1.origin)?t:this.calcPosition()}calcPosition(){const t=m7({size:this.container.canvas.size,position:this.options.position});return P1.create(t.x,t.y)}updateParticlePosition(t,e){var n;if(t.destroyed)return;const o=this.container,s=o.canvas.size;if(t.needsNewPosition){const r=v7({size:s});t.position.setTo(r),t.velocity.setTo(t.initialVelocity),t.absorberOrbit=void 0,t.needsNewPosition=!1}if(this.options.orbits){if(t.absorberOrbit===void 0&&(t.absorberOrbit=P1.create(0,0),t.absorberOrbit.length=X1(t.getPosition(),this.position),t.absorberOrbit.angle=d1()*Math.PI*2),t.absorberOrbit.length<=this.size&&!this.options.destroy){const u=Math.min(s.width,s.height);t.absorberOrbit.length=u*(1+(d1()*.2-.1))}t.absorberOrbitDirection===void 0&&(t.absorberOrbitDirection=t.velocity.x>=0?"clockwise":"counter-clockwise");const r=t.absorberOrbit.length,l=t.absorberOrbit.angle,a=t.absorberOrbitDirection;t.velocity.setTo(P1.origin);const c={x:a==="clockwise"?Math.cos:Math.sin,y:a==="clockwise"?Math.sin:Math.cos};t.position.x=this.position.x+r*c.x(l),t.position.y=this.position.y+r*c.y(l),t.absorberOrbit.length-=e.length,t.absorberOrbit.angle+=((n=t.retina.moveSpeed)!==null&&n!==void 0?n:0)*o.retina.pixelRatio/100*o.retina.reduceFactor}else{const r=P1.origin;r.length=e.length,r.angle=e.angle,t.velocity.addTo(r)}}}class La{constructor(t){this.container=t,this.array=[],this.absorbers=[],this.interactivityAbsorbers=[],t.getAbsorber=e=>e===void 0||typeof e=="number"?this.array[e||0]:this.array.find(n=>n.name===e),t.addAbsorber=(e,n)=>this.addAbsorber(e,n)}addAbsorber(t,e){const n=new Ma(this,this.container,t,e);return this.array.push(n),n}draw(t){for(const e of this.array)e.draw(t)}handleClickMode(t){const e=this.absorbers,n=this.interactivityAbsorbers;if(t==="absorber"){const o=_2(n),s=o??_2(e),r=this.container.interactivity.mouse.clickPosition;this.addAbsorber(s,r)}}async init(){this.absorbers=this.container.actualOptions.absorbers,this.interactivityAbsorbers=this.container.actualOptions.interactivity.modes.absorbers,T1(this.absorbers,t=>{this.addAbsorber(t)})}particleUpdate(t){for(const e of this.array)if(e.attract(t),t.destroyed)break}removeAbsorber(t){const e=this.array.indexOf(t);e>=0&&this.array.splice(e,1)}resize(){for(const t of this.array)t.resize()}stop(){this.array=[]}}class xa{constructor(){this.id="absorbers"}getPlugin(t){return new La(t)}loadOptions(t,e){var n,o;!this.needsPlugin(t)&&!this.needsPlugin(e)||(e!=null&&e.absorbers&&(t.absorbers=T1(e.absorbers,s=>{const r=new ut;return r.load(s),r})),t.interactivity.modes.absorbers=T1((o=(n=e==null?void 0:e.interactivity)===null||n===void 0?void 0:n.modes)===null||o===void 0?void 0:o.absorbers,s=>{const r=new ut;return r.load(s),r}))}needsPlugin(t){var e,n,o;if(!t)return!1;const s=t.absorbers;return s instanceof Array?!!s.length:s?!0:!!(!((o=(n=(e=t.interactivity)===null||e===void 0?void 0:e.events)===null||n===void 0?void 0:n.onClick)===null||o===void 0)&&o.mode&&I1("absorber",t.interactivity.events.onClick.mode))}}async function ka(i){const t=new xa;await i.addPlugin(t)}class za{load(t){t&&(t.bottom!==void 0&&(this.bottom=l1(t.bottom)),t.left!==void 0&&(this.left=l1(t.left)),t.right!==void 0&&(this.right=l1(t.right)),t.top!==void 0&&(this.top=l1(t.top)))}}class Ea extends M2{constructor(){super(),this.value=3}}class Pa extends M2{constructor(){super(),this.value={min:4,max:9}}}class Sa{constructor(){this.count=1,this.factor=new Ea,this.rate=new Pa,this.sizeOffset=!0}load(t){var e;t&&(t.color!==void 0&&(this.color=N1.create(this.color,t.color)),t.count!==void 0&&(this.count=t.count),this.factor.load(t.factor),this.rate.load(t.rate),this.particles=T1(t.particles,n=>V1({},n)),t.sizeOffset!==void 0&&(this.sizeOffset=t.sizeOffset),t.colorOffset&&(this.colorOffset=(e=this.colorOffset)!==null&&e!==void 0?e:{},t.colorOffset.h!==void 0&&(this.colorOffset.h=t.colorOffset.h),t.colorOffset.s!==void 0&&(this.colorOffset.s=t.colorOffset.s),t.colorOffset.l!==void 0&&(this.colorOffset.l=t.colorOffset.l)))}}class Oa{constructor(){this.bounds=new za,this.mode="none",this.split=new Sa}load(t){t&&(t.mode&&(this.mode=t.mode),t.bounds&&this.bounds.load(t.bounds),this.split.load(t.split))}}class Ra{constructor(t,e){this.engine=t,this.container=e}init(t){const e=this.container,n=t.options,o=n.destroy;if(!o)return;t.splitCount=0;const s=o.bounds;t.destroyBounds||(t.destroyBounds={}),s.bottom&&(t.destroyBounds.bottom=K(s.bottom)*e.canvas.size.height/100),s.left&&(t.destroyBounds.left=K(s.left)*e.canvas.size.width/100),s.right&&(t.destroyBounds.right=K(s.right)*e.canvas.size.width/100),s.top&&(t.destroyBounds.top=K(s.top)*e.canvas.size.height/100)}isEnabled(t){return!t.destroyed}loadOptions(t,...e){t.destroy||(t.destroy=new Oa);for(const n of e)t.destroy.load(n==null?void 0:n.destroy)}particleDestroyed(t,e){if(e)return;const n=t.options.destroy;n&&n.mode==="split"&&this.split(t)}update(t){if(!this.isEnabled(t))return;const e=t.getPosition(),n=t.destroyBounds;n&&(n.bottom!==void 0&&e.y>=n.bottom||n.left!==void 0&&e.x<=n.left||n.right!==void 0&&e.x>=n.right||n.top!==void 0&&e.y<=n.top)&&t.destroy()}addSplitParticle(t,e){var n,o,s;const r=t.options.destroy;if(!r)return;const l=r.split,a=Se(this.engine,this.container,t.options),c=r5(l.factor),u=t.getFillColor();l.color?a.color.load(l.color):l.colorOffset&&u?a.color.load({value:{hsl:{h:u.h+K((n=l.colorOffset.h)!==null&&n!==void 0?n:0),s:u.s+K((o=l.colorOffset.s)!==null&&o!==void 0?o:0),l:u.l+K((s=l.colorOffset.l)!==null&&s!==void 0?s:0)}}}):a.color.load({value:{hsl:t.getFillColor()}}),a.move.load({center:{x:t.position.x,y:t.position.y,mode:"precise"}}),typeof a.size.value=="number"?a.size.value/=c:(a.size.value.min/=c,a.size.value.max/=c),a.load(e);const h=l.sizeOffset?l1(-t.size.value,t.size.value):0,f={x:t.position.x+Y1(h),y:t.position.y+Y1(h)};return this.container.particles.addParticle(f,a,t.group,C=>{var d;return C.size.value<.5?!1:(C.velocity.length=Y1(l1(t.velocity.length,C.velocity.length)),C.splitCount=((d=t.splitCount)!==null&&d!==void 0?d:0)+1,C.unbreakable=!0,setTimeout(()=>{C.unbreakable=!1},500),!0)})}split(t){const e=t.options.destroy;if(!e)return;const n=e.split;if(n.count>=0&&(t.splitCount===void 0||t.splitCount++>n.count))return;const o=r5(n.rate),s=_2(n.particles);for(let r=0;r<o;r++)this.addSplitParticle(t,s)}}async function Ia(i){await i.addParticleUpdater("destroy",t=>new Ra(i,t))}class Ta{randomPosition(t,e,n){const o=(h,f)=>{const C=d1()/4,d=Math.atan(f/h*Math.tan(2*Math.PI*C)),p=d1();return p<.25?d:p<.5?Math.PI-d:p<.75?Math.PI+d:-d},s=(h,f,C)=>h*f/Math.sqrt((f*Math.cos(C))**2+(h*Math.sin(C))**2),[r,l]=[e.width/2,e.height/2],a=o(r,l),c=s(r,l,a),u=n?c*Math.sqrt(d1()):c;return{x:t.x+u*Math.cos(a),y:t.y+u*Math.sin(a)}}}class Za{constructor(){this.wait=!1}load(t){t&&(t.count!==void 0&&(this.count=t.count),t.delay!==void 0&&(this.delay=t.delay),t.duration!==void 0&&(this.duration=t.duration),t.wait!==void 0&&(this.wait=t.wait))}}class Aa{constructor(){this.quantity=1,this.delay=.1}load(t){t!==void 0&&(t.quantity!==void 0&&(this.quantity=l1(t.quantity)),t.delay!==void 0&&(this.delay=l1(t.delay)))}}class Z7{constructor(){this.mode="percent",this.height=0,this.width=0}load(t){t!==void 0&&(t.mode!==void 0&&(this.mode=t.mode),t.height!==void 0&&(this.height=t.height),t.width!==void 0&&(this.width=t.width))}}class m5{constructor(){this.autoPlay=!0,this.fill=!0,this.life=new Za,this.rate=new Aa,this.shape="square",this.startCount=0}load(t){t&&(t.autoPlay!==void 0&&(this.autoPlay=t.autoPlay),t.size!==void 0&&(this.size||(this.size=new Z7),this.size.load(t.size)),t.direction!==void 0&&(this.direction=t.direction),this.domId=t.domId,t.fill!==void 0&&(this.fill=t.fill),this.life.load(t.life),this.name=t.name,this.particles=T1(t.particles,e=>V1({},e)),this.rate.load(t.rate),t.shape!==void 0&&(this.shape=t.shape),t.position!==void 0&&(this.position={},t.position.x!==void 0&&(this.position.x=l1(t.position.x)),t.position.y!==void 0&&(this.position.y=l1(t.position.y))),t.spawnColor!==void 0&&(this.spawnColor===void 0&&(this.spawnColor=new x8),this.spawnColor.load(t.spawnColor)),t.startCount!==void 0&&(this.startCount=t.startCount))}}class Da{constructor(t,e,n,o,s){var r,l,a,c,u,h,f,C;this.emitters=e,this.container=n,this._engine=t,this._currentDuration=0,this._currentEmitDelay=0,this._currentSpawnDelay=0,this._initialPosition=s,o instanceof m5?this.options=o:(this.options=new m5,this.options.load(o)),this._spawnDelay=((r=this.options.life.delay)!==null&&r!==void 0?r:0)*1e3/this.container.retina.reduceFactor,this.position=(l=this._initialPosition)!==null&&l!==void 0?l:this.calcPosition(),this.name=this.options.name,this._shape=(a=this._engine.emitterShapeManager)===null||a===void 0?void 0:a.getShape(this.options.shape),this.fill=this.options.fill,this._firstSpawn=!this.options.life.wait,this._startParticlesAdded=!1;let d=V1({},this.options.particles);d??(d={}),(c=d.move)!==null&&c!==void 0||(d.move={}),(u=(C=d.move).direction)!==null&&u!==void 0||(C.direction=this.options.direction),this.options.spawnColor&&(this.spawnColor=x5(this.options.spawnColor)),this._paused=!this.options.autoPlay,this._particlesOptions=d,this.size=(h=this.options.size)!==null&&h!==void 0?h:(()=>{const p=new Z7;return p.load({height:0,mode:"percent",width:0}),p})(),this._lifeCount=(f=this.options.life.count)!==null&&f!==void 0?f:-1,this._immortal=this._lifeCount<=0,this._engine.dispatchEvent("emitterCreated",{container:n,data:{emitter:this}}),this.play()}externalPause(){this._paused=!0,this.pause()}externalPlay(){this._paused=!1,this.play()}getPosition(){if(this.options.domId){const t=this.container,e=document.getElementById(this.options.domId);if(e){const n=e.getBoundingClientRect();return{x:(n.x+n.width/2)*t.retina.pixelRatio,y:(n.y+n.height/2)*t.retina.pixelRatio}}}return this.position}getSize(){const t=this.container;if(this.options.domId){const e=document.getElementById(this.options.domId);if(e){const n=e.getBoundingClientRect();return{width:n.width*t.retina.pixelRatio,height:n.height*t.retina.pixelRatio}}}return{width:this.size.mode==="percent"?t.canvas.size.width*this.size.width/100:this.size.width,height:this.size.mode==="percent"?t.canvas.size.height*this.size.height/100:this.size.height}}pause(){this._paused||delete this._emitDelay}play(){var t;if(!this._paused&&this.container.retina.reduceFactor&&(this._lifeCount>0||this._immortal||!this.options.life.count)&&(this._firstSpawn||this._currentSpawnDelay>=((t=this._spawnDelay)!==null&&t!==void 0?t:0))){if(this._emitDelay===void 0){const e=K(this.options.rate.delay);this._emitDelay=1e3*e/this.container.retina.reduceFactor}(this._lifeCount>0||this._immortal)&&this.prepareToDie()}}resize(){const t=this._initialPosition;this.position=t&&L6(t,this.container.canvas.size,P1.origin)?t:this.calcPosition()}update(t){var e,n,o;this._paused||(this._firstSpawn&&(this._firstSpawn=!1,this._currentSpawnDelay=(e=this._spawnDelay)!==null&&e!==void 0?e:0,this._currentEmitDelay=(n=this._emitDelay)!==null&&n!==void 0?n:0),this._startParticlesAdded||(this._startParticlesAdded=!0,this.emitParticles(this.options.startCount)),this._duration!==void 0&&(this._currentDuration+=t.value,this._currentDuration>=this._duration&&(this.pause(),this._spawnDelay!==void 0&&delete this._spawnDelay,this._immortal||this._lifeCount--,this._lifeCount>0||this._immortal?(this.position=this.calcPosition(),this._spawnDelay=((o=this.options.life.delay)!==null&&o!==void 0?o:0)*1e3/this.container.retina.reduceFactor):this.destroy(),this._currentDuration-=this._duration,delete this._duration)),this._spawnDelay!==void 0&&(this._currentSpawnDelay+=t.value,this._currentSpawnDelay>=this._spawnDelay&&(this._engine.dispatchEvent("emitterPlay",{container:this.container}),this.play(),this._currentSpawnDelay-=this._currentSpawnDelay,delete this._spawnDelay)),this._emitDelay!==void 0&&(this._currentEmitDelay+=t.value,this._currentEmitDelay>=this._emitDelay&&(this.emit(),this._currentEmitDelay-=this._emitDelay)))}calcPosition(){return m7({size:this.container.canvas.size,position:this.options.position})}destroy(){this.emitters.removeEmitter(this),this._engine.dispatchEvent("emitterDestroyed",{container:this.container,data:{emitter:this}})}emit(){if(this._paused)return;const t=K(this.options.rate.quantity);this.emitParticles(t)}emitParticles(t){var e,n,o;const s=this.getPosition(),r=this.getSize(),l=_2(this._particlesOptions);for(let a=0;a<t;a++){const c=V1({},l);if(this.spawnColor){const h=(e=this.options.spawnColor)===null||e===void 0?void 0:e.animation;h&&(this.spawnColor.h=this.setColorAnimation(h.h,this.spawnColor.h,360),this.spawnColor.s=this.setColorAnimation(h.s,this.spawnColor.s,100),this.spawnColor.l=this.setColorAnimation(h.l,this.spawnColor.l,100)),c.color?c.color.value=this.spawnColor:c.color={value:this.spawnColor}}if(!s)return;const u=(o=(n=this._shape)===null||n===void 0?void 0:n.randomPosition(s,r,this.fill))!==null&&o!==void 0?o:s;this.container.particles.addParticle(u,c)}}prepareToDie(){var t;if(this._paused)return;const e=(t=this.options.life)===null||t===void 0?void 0:t.duration;this.container.retina.reduceFactor&&(this._lifeCount>0||this._immortal)&&e!==void 0&&e>0&&(this._duration=e*1e3)}setColorAnimation(t,e,n){var o;const s=this.container;if(!t.enable)return e;const r=Y1(t.offset),l=K(this.options.rate.delay),a=1e3*l/s.retina.reduceFactor,c=K((o=t.speed)!==null&&o!==void 0?o:0);return(e+c*s.fpsLimit/a+r*3.6)%n}}class $a{constructor(t,e){this.container=e,this._engine=t,this.array=[],this.emitters=[],this.interactivityEmitters={random:{count:1,enable:!1},value:[]},e.getEmitter=n=>n===void 0||typeof n=="number"?this.array[n||0]:this.array.find(o=>o.name===n),e.addEmitter=(n,o)=>this.addEmitter(n,o),e.removeEmitter=n=>{const o=e.getEmitter(n);o&&this.removeEmitter(o)},e.playEmitter=n=>{const o=e.getEmitter(n);o&&o.externalPlay()},e.pauseEmitter=n=>{const o=e.getEmitter(n);o&&o.externalPause()}}addEmitter(t,e){const n=new m5;n.load(t);const o=new Da(this._engine,this,this.container,n,e);return this.array.push(o),o}handleClickMode(t){const e=this.emitters,n=this.interactivityEmitters;if(t!=="emitter")return;let o;if(n&&n.value instanceof Array)if(n.value.length>0&&n.random.enable){o=[];const l=[];for(let a=0;a<n.random.count;a++){const c=_7(n.value);if(l.includes(c)&&l.length<n.value.length){a--;continue}l.push(c),o.push(M6(n.value,c))}}else o=n.value;else o=n==null?void 0:n.value;const s=o??e,r=this.container.interactivity.mouse.clickPosition;T1(s,l=>{this.addEmitter(l,r)})}async init(){if(this.emitters=this.container.actualOptions.emitters,this.interactivityEmitters=this.container.actualOptions.interactivity.modes.emitters,!!this.emitters)if(this.emitters instanceof Array)for(const t of this.emitters)this.addEmitter(t);else this.addEmitter(this.emitters)}pause(){for(const t of this.array)t.pause()}play(){for(const t of this.array)t.play()}removeEmitter(t){const e=this.array.indexOf(t);e>=0&&this.array.splice(e,1)}resize(){for(const t of this.array)t.resize()}stop(){this.array=[]}update(t){for(const e of this.array)e.update(t)}}const p4=new Map;class Fa{constructor(t){this._engine=t}addShape(t,e){this.getShape(t)||p4.set(t,e)}getShape(t){return p4.get(t)}getSupportedShapes(){return p4.keys()}}function c3(i,t){return i+t*(d1()-.5)}class ja{randomPosition(t,e,n){if(n)return{x:c3(t.x,e.width),y:c3(t.y,e.height)};{const o=e.width/2,s=e.height/2,r=Math.floor(d1()*4),l=(d1()-.5)*2;switch(r){case 0:return{x:t.x+l*o,y:t.y-s};case 1:return{x:t.x-o,y:t.y+l*s};case 2:return{x:t.x+l*o,y:t.y+s};case 3:default:return{x:t.x+o,y:t.y+l*s}}}}}class Na{constructor(t){this._engine=t,this.id="emitters"}getPlugin(t){return new $a(this._engine,t)}loadOptions(t,e){var n,o,s,r,l,a;if(!this.needsPlugin(t)&&!this.needsPlugin(e))return;e!=null&&e.emitters&&(t.emitters=T1(e.emitters,u=>{const h=new m5;return h.load(u),h}));const c=(o=(n=e==null?void 0:e.interactivity)===null||n===void 0?void 0:n.modes)===null||o===void 0?void 0:o.emitters;if(c)if(c instanceof Array)t.interactivity.modes.emitters={random:{count:1,enable:!0},value:c.map(u=>{const h=new m5;return h.load(u),h})};else{const u=c;if(u.value!==void 0)if(u.value instanceof Array)t.interactivity.modes.emitters={random:{count:(s=u.random.count)!==null&&s!==void 0?s:1,enable:(r=u.random.enable)!==null&&r!==void 0?r:!1},value:u.value.map(h=>{const f=new m5;return f.load(h),f})};else{const h=new m5;h.load(u.value),t.interactivity.modes.emitters={random:{count:(l=u.random.count)!==null&&l!==void 0?l:1,enable:(a=u.random.enable)!==null&&a!==void 0?a:!1},value:h}}else(t.interactivity.modes.emitters={random:{count:1,enable:!1},value:new m5}).value.load(c)}}needsPlugin(t){var e,n,o;if(!t)return!1;const s=t.emitters;return s instanceof Array&&!!s.length||s!==void 0||!!(!((o=(n=(e=t.interactivity)===null||e===void 0?void 0:e.events)===null||n===void 0?void 0:n.onClick)===null||o===void 0)&&o.mode)&&I1("emitter",t.interactivity.events.onClick.mode)}}async function Ba(i){i.emitterShapeManager||(i.emitterShapeManager=new Fa(i)),i.addEmitterShape||(i.addEmitterShape=(e,n)=>{var o;(o=i.emitterShapeManager)===null||o===void 0||o.addShape(e,n)});const t=new Na(i);await i.addPlugin(t),i.addEmitterShape("circle",new Ta),i.addEmitterShape("square",new ja)}class Ha{constructor(){this.delay=1,this.pauseOnStop=!1,this.quantity=1}load(t){t&&(t.delay!==void 0&&(this.delay=t.delay),t.quantity!==void 0&&(this.quantity=t.quantity),t.particles!==void 0&&(this.particles=V1({},t.particles)),t.pauseOnStop!==void 0&&(this.pauseOnStop=t.pauseOnStop))}}class Va extends T2{constructor(t){super(t),this._delay=0}clear(){}init(){}async interact(t){var e,n,o,s;if(!this.container.retina.reduceFactor)return;const r=this.container,l=r.actualOptions,a=l.interactivity.modes.trail;if(!a)return;const c=a.delay*1e3/this.container.retina.reduceFactor;if(this._delay<c&&(this._delay+=t.value),this._delay<c)return;let u=!0;a.pauseOnStop&&(r.interactivity.mouse.position===this._lastPosition||((e=r.interactivity.mouse.position)===null||e===void 0?void 0:e.x)===((n=this._lastPosition)===null||n===void 0?void 0:n.x)&&((o=r.interactivity.mouse.position)===null||o===void 0?void 0:o.y)===((s=this._lastPosition)===null||s===void 0?void 0:s.y))&&(u=!1),r.interactivity.mouse.position?this._lastPosition={x:r.interactivity.mouse.position.x,y:r.interactivity.mouse.position.y}:delete this._lastPosition,u&&r.particles.push(a.quantity,r.interactivity.mouse,a.particles),this._delay-=c}isEnabled(t){var e;const n=this.container,o=n.actualOptions,s=n.interactivity.mouse,r=((e=t==null?void 0:t.interactivity)!==null&&e!==void 0?e:o.interactivity).events;return s.clicking&&s.inside&&!!s.position&&I1("trail",r.onClick.mode)||s.inside&&!!s.position&&I1("trail",r.onHover.mode)}loadModeOptions(t,...e){t.trail||(t.trail=new Ha);for(const n of e)t.trail.load(n==null?void 0:n.trail)}reset(){}}async function qa(i){await i.addInteractor("externalTrail",t=>new Va(t))}class u3{constructor(){this.enable=!1,this.value=0}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.value!==void 0&&(this.value=l1(t.value)))}}class Ua{constructor(){this.darken=new u3,this.enable=!1,this.enlighten=new u3,this.mode="vertical",this.speed=25}load(t){t&&(t.backColor!==void 0&&(this.backColor=N1.create(this.backColor,t.backColor)),this.darken.load(t.darken),t.enable!==void 0&&(this.enable=t.enable),this.enlighten.load(t.enlighten),t.mode!==void 0&&(this.mode=t.mode),t.speed!==void 0&&(this.speed=l1(t.speed)))}}function Wa(i,t){const e=i.options.roll;if(!i.roll||!(e!=null&&e.enable))return;const n=i.roll.speed*t.factor,o=2*Math.PI;i.roll.angle+=n,i.roll.angle>o&&(i.roll.angle-=o)}class Ga{getTransformValues(t){var e;const n=((e=t.roll)===null||e===void 0?void 0:e.enable)&&t.roll,o=n&&n.horizontal,s=n&&n.vertical;return{a:o?Math.cos(n.angle):void 0,d:s?Math.sin(n.angle):void 0}}init(t){const e=t.options.roll;if(e!=null&&e.enable)if(t.roll={enable:e.enable,horizontal:e.mode==="horizontal"||e.mode==="both",vertical:e.mode==="vertical"||e.mode==="both",angle:d1()*Math.PI*2,speed:K(e.speed)/360},e.backColor)t.backColor=x5(e.backColor);else if(e.darken.enable&&e.enlighten.enable){const n=d1()>=.5?"darken":"enlighten";t.roll.alter={type:n,value:K(n==="darken"?e.darken.value:e.enlighten.value)}}else e.darken.enable?t.roll.alter={type:"darken",value:K(e.darken.value)}:e.enlighten.enable&&(t.roll.alter={type:"enlighten",value:K(e.enlighten.value)});else t.roll={enable:!1,horizontal:!1,vertical:!1,angle:0,speed:0}}isEnabled(t){const e=t.options.roll;return!t.destroyed&&!t.spawning&&!!(e!=null&&e.enable)}loadOptions(t,...e){t.roll||(t.roll=new Ua);for(const n of e)t.roll.load(n==null?void 0:n.roll)}update(t,e){this.isEnabled(t)&&Wa(t,e)}}async function Ka(i){await i.addParticleUpdater("roll",()=>new Ga)}const Ya=i=>{const t=(n,o)=>i.load(n,o);t.load=(n,o,s)=>{i.loadJSON(n,o).then(r=>{r&&s(r)}).catch(()=>{s(void 0)})},t.setOnClickHandler=n=>{i.setOnClickHandler(n)};const e=i.dom();return{particlesJS:t,pJSDom:e}};class Xa{constructor(){this.enable=!1,this.speed=0,this.decay=0,this.sync=!1}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.speed!==void 0&&(this.speed=l1(t.speed)),t.decay!==void 0&&(this.decay=l1(t.decay)),t.sync!==void 0&&(this.sync=t.sync))}}class Ja extends M2{constructor(){super(),this.animation=new Xa,this.direction="clockwise",this.path=!1,this.value=0}load(t){t&&(super.load(t),t.direction!==void 0&&(this.direction=t.direction),this.animation.load(t.animation),t.path!==void 0&&(this.path=t.path))}}function Qa(i,t){var e,n;const o=i.rotate,s=i.options.rotate;if(!o||!s)return;const r=s.animation,l=((e=o.velocity)!==null&&e!==void 0?e:0)*t.factor,a=2*Math.PI,c=(n=o.decay)!==null&&n!==void 0?n:1;if(r.enable){switch(o.status){case"increasing":o.value+=l,o.value>a&&(o.value-=a);break;case"decreasing":default:o.value-=l,o.value<0&&(o.value+=a);break}o.velocity&&c!==1&&(o.velocity*=c)}}class tc{constructor(t){this.container=t}init(t){const e=t.options.rotate;if(!e)return;t.rotate={enable:e.animation.enable,value:K(e.value)*Math.PI/180},t.pathRotation=e.path;let n=e.direction;switch(n==="random"&&(n=Math.floor(d1()*2)>0?"counter-clockwise":"clockwise"),n){case"counter-clockwise":case"counterClockwise":t.rotate.status="decreasing";break;case"clockwise":t.rotate.status="increasing";break}const o=e.animation;o.enable&&(t.rotate.decay=1-K(o.decay),t.rotate.velocity=K(o.speed)/360*this.container.retina.reduceFactor,o.sync||(t.rotate.velocity*=d1())),t.rotation=t.rotate.value}isEnabled(t){const e=t.options.rotate;return e?!t.destroyed&&!t.spawning&&e.animation.enable&&!e.path:!1}loadOptions(t,...e){t.rotate||(t.rotate=new Ja);for(const n of e)t.rotate.load(n==null?void 0:n.rotate)}update(t,e){var n,o;this.isEnabled(t)&&(Qa(t,e),t.rotation=(o=(n=t.rotate)===null||n===void 0?void 0:n.value)!==null&&o!==void 0?o:0)}}async function ec(i){await i.addParticleUpdater("rotate",t=>new tc(t))}function ic(i){const t=i.initialPosition,{dx:e,dy:n}=n2(t,i.position),o=Math.abs(e),s=Math.abs(n),r=i.retina.maxDistance.horizontal,l=i.retina.maxDistance.vertical;if(!(!r&&!l)){if((r&&o>=r||l&&s>=l)&&!i.misplaced)i.misplaced=!!r&&o>r||!!l&&s>l,r&&(i.velocity.x=i.velocity.y/2-i.velocity.x),l&&(i.velocity.y=i.velocity.x/2-i.velocity.y);else if((!r||o<r)&&(!l||s<l)&&i.misplaced)i.misplaced=!1;else if(i.misplaced){const a=i.position,c=i.velocity;r&&(a.x<t.x&&c.x<0||a.x>t.x&&c.x>0)&&(c.x*=-d1()),l&&(a.y<t.y&&c.y<0||a.y>t.y&&c.y>0)&&(c.y*=-d1())}}}function nc(i,t){const e=i.container;if(!i.spin)return;const n={x:i.spin.direction==="clockwise"?Math.cos:Math.sin,y:i.spin.direction==="clockwise"?Math.sin:Math.cos};i.position.x=i.spin.center.x+i.spin.radius*n.x(i.spin.angle),i.position.y=i.spin.center.y+i.spin.radius*n.y(i.spin.angle),i.spin.radius+=i.spin.acceleration;const o=Math.max(e.canvas.size.width,e.canvas.size.height);i.spin.radius>o/2?(i.spin.radius=o/2,i.spin.acceleration*=-1):i.spin.radius<0&&(i.spin.radius=0,i.spin.acceleration*=-1),i.spin.angle+=t/100*(1-i.spin.radius/o)}function oc(i,t){var e;const n=i.options,o=n.move.path;if(!o.enable)return;if(i.lastPathTime<=i.pathDelay){i.lastPathTime+=t.value;return}const r=(e=i.pathGenerator)===null||e===void 0?void 0:e.generate(i);r&&i.velocity.addTo(r),o.clamp&&(i.velocity.x=I2(i.velocity.x,-1,1),i.velocity.y=I2(i.velocity.y,-1,1)),i.lastPathTime-=i.pathDelay}function sc(i){return i.slow.inRange?i.slow.factor:1}class rc{init(t){var e;const n=t.container,o=t.options,s=o.move.gravity,r=o.move.spin;if(t.gravity={enable:s.enable,acceleration:K(s.acceleration),inverse:s.inverse},r.enable){const l=(e=r.position)!==null&&e!==void 0?e:{x:50,y:50},a={x:l.x/100*n.canvas.size.width,y:l.y/100*n.canvas.size.height},c=t.getPosition(),u=X1(c,a),h=K(r.acceleration);t.retina.spinAcceleration=h*n.retina.pixelRatio,t.spin={center:a,direction:t.velocity.x>=0?"clockwise":"counter-clockwise",angle:t.velocity.angle,radius:u,acceleration:t.retina.spinAcceleration}}}isEnabled(t){return!t.destroyed&&t.options.move.enable}move(t,e){var n,o,s,r,l;const a=t.options,c=a.move;if(!c.enable)return;const u=t.container,h=sc(t),f=((n=(r=t.retina).moveSpeed)!==null&&n!==void 0?n:r.moveSpeed=K(c.speed)*u.retina.pixelRatio)*u.retina.reduceFactor,C=(o=(l=t.retina).moveDrift)!==null&&o!==void 0?o:l.moveDrift=K(t.options.move.drift)*u.retina.pixelRatio,d=N2(a.size.value)*u.retina.pixelRatio,p=c.size?t.getRadius()/d:1,v=p*h*(e.factor||1),g=2,_=f*v/g;if(c.spin.enable)nc(t,_);else{oc(t,e);const b=t.gravity,P=b!=null&&b.enable&&b.inverse?-1:1;b!=null&&b.enable&&_&&(t.velocity.y+=P*(b.acceleration*e.factor)/(60*_)),C&&_&&(t.velocity.x+=C*e.factor/(60*_));const E=t.moveDecay;E!=1&&t.velocity.multTo(E);const O=t.velocity.mult(_),M=(s=t.retina.maxSpeed)!==null&&s!==void 0?s:u.retina.maxSpeed;b!=null&&b.enable&&M>0&&(!b.inverse&&O.y>=0&&O.y>=M||b.inverse&&O.y<=0&&O.y<=-M)&&(O.y=P*M,_&&(t.velocity.y=O.y/_));const z=t.options.zIndex,X=(1-t.zIndexFactor)**z.velocityRate;X!=1&&O.multTo(X),t.position.addTo(O),c.vibrate&&(t.position.x+=Math.sin(t.position.x*Math.cos(t.position.y)),t.position.y+=Math.cos(t.position.y*Math.sin(t.position.x)))}ic(t)}}async function lc(i){i.addMover("base",()=>new rc)}class ac{draw(t,e,n){e.circleRange||(e.circleRange={min:0,max:Math.PI*2});const o=e.circleRange;t.arc(0,0,n,o.min,o.max,!1)}getSidesCount(){return 12}particleInit(t,e){var n;const o=e.shapeData,s=(n=o==null?void 0:o.angle)!==null&&n!==void 0?n:{max:360,min:0};e.circleRange=typeof s!="object"?{min:0,max:s*Math.PI/180}:{min:s.min*Math.PI/180,max:s.max*Math.PI/180}}}async function cc(i){await i.addShape("circle",new ac)}function v4(i,t,e,n,o){var s,r;const l=t;if(!l||!e.enable||l.loops!==void 0&&l.maxLoops!==void 0&&l.maxLoops>0&&l.loops>=l.maxLoops)return;const a=Y1(e.offset),c=((s=t.velocity)!==null&&s!==void 0?s:0)*i.factor+a*3.6,u=(r=t.decay)!==null&&r!==void 0?r:1;!o||l.status==="increasing"?(l.value+=c,l.value>n&&(l.loops||(l.loops=0),l.loops++,o&&(l.status="decreasing",l.value-=l.value%n))):(l.value-=c,l.value<0&&(l.loops||(l.loops=0),l.loops++,l.status="increasing",l.value+=l.value)),l.velocity&&u!==1&&(l.velocity*=u),l.value>n&&(l.value%=n)}function uc(i,t){var e,n,o;const s=i.options.color.animation,r=(e=i.color)===null||e===void 0?void 0:e.h,l=(n=i.color)===null||n===void 0?void 0:n.s,a=(o=i.color)===null||o===void 0?void 0:o.l;r&&v4(t,r,s.h,360,!1),l&&v4(t,l,s.s,100,!0),a&&v4(t,a,s.l,100,!0)}class hc{constructor(t){this.container=t}init(t){const e=x5(t.options.color,t.id,t.options.reduceDuplicates);e&&(t.color=P7(e,t.options.color.animation,this.container.retina.reduceFactor))}isEnabled(t){var e,n,o;const s=t.options.color.animation;return!t.destroyed&&!t.spawning&&(((e=t.color)===null||e===void 0?void 0:e.h.value)!==void 0&&s.h.enable||((n=t.color)===null||n===void 0?void 0:n.s.value)!==void 0&&s.s.enable||((o=t.color)===null||o===void 0?void 0:o.l.value)!==void 0&&s.l.enable)}update(t,e){uc(t,e)}}async function fc(i){await i.addParticleUpdater("color",t=>new hc(t))}class dc{constructor(){this.distance=200,this.duration=.4,this.easing="ease-out-quad",this.factor=1,this.maxSpeed=50,this.speed=1}load(t){t&&(t.distance!==void 0&&(this.distance=t.distance),t.duration!==void 0&&(this.duration=t.duration),t.easing!==void 0&&(this.easing=t.easing),t.factor!==void 0&&(this.factor=t.factor),t.maxSpeed!==void 0&&(this.maxSpeed=t.maxSpeed),t.speed!==void 0&&(this.speed=t.speed))}}let Cc=class extends T2{constructor(t,e){super(e),this._engine=t,e.attract||(e.attract={particles:[]}),this.handleClickMode=n=>{const o=this.container.actualOptions,s=o.interactivity.modes.attract;if(!(!s||n!=="attract")){e.attract||(e.attract={particles:[]}),e.attract.clicking=!0,e.attract.count=0;for(const r of e.attract.particles)this.isEnabled(r)&&r.velocity.setTo(r.initialVelocity);e.attract.particles=[],e.attract.finish=!1,setTimeout(()=>{e.destroyed||(e.attract||(e.attract={particles:[]}),e.attract.clicking=!1)},s.duration*1e3)}}}clear(){}init(){const t=this.container,e=t.actualOptions.interactivity.modes.attract;e&&(t.retina.attractModeDistance=e.distance*t.retina.pixelRatio)}async interact(){const t=this.container,e=t.actualOptions,n=t.interactivity.status===G5,o=e.interactivity.events,s=o.onHover.enable,r=o.onHover.mode,l=o.onClick.enable,a=o.onClick.mode;n&&s&&I1("attract",r)?this.hoverAttract():l&&I1("attract",a)&&this.clickAttract()}isEnabled(t){var e;const n=this.container,o=n.actualOptions,s=n.interactivity.mouse,r=((e=t==null?void 0:t.interactivity)!==null&&e!==void 0?e:o.interactivity).events;if((!s.position||!r.onHover.enable)&&(!s.clickPosition||!r.onClick.enable))return!1;const l=r.onHover.mode,a=r.onClick.mode;return I1("attract",l)||I1("attract",a)}loadModeOptions(t,...e){t.attract||(t.attract=new dc);for(const n of e)t.attract.load(n==null?void 0:n.attract)}reset(){}clickAttract(){const t=this.container;if(t.attract||(t.attract={particles:[]}),t.attract.finish||(t.attract.count||(t.attract.count=0),t.attract.count++,t.attract.count===t.particles.count&&(t.attract.finish=!0)),t.attract.clicking){const e=t.interactivity.mouse.clickPosition,n=t.retina.attractModeDistance;if(!n||n<0||!e)return;this.processAttract(e,n,new c2(e.x,e.y,n))}else t.attract.clicking===!1&&(t.attract.particles=[])}hoverAttract(){const t=this.container,e=t.interactivity.mouse.position,n=t.retina.attractModeDistance;!n||n<0||!e||this.processAttract(e,n,new c2(e.x,e.y,n))}processAttract(t,e,n){const o=this.container,s=o.actualOptions.interactivity.modes.attract;if(!s)return;const r=o.particles.quadTree.query(n,l=>this.isEnabled(l));for(const l of r){const{dx:a,dy:c,distance:u}=n2(l.position,t),h=s.speed*s.factor,f=I2(p7(s.easing)(1-u/e)*h,0,s.maxSpeed),C=P1.create(u===0?h:a/u*f,u===0?h:c/u*f);l.position.subFrom(C)}}};async function pc(i){await i.addInteractor("externalAttract",t=>new Cc(i,t))}class vc{constructor(){this.distance=200}load(t){t&&t.distance!==void 0&&(this.distance=t.distance)}}class mc extends T2{constructor(t){super(t)}clear(){}init(){const t=this.container,e=t.actualOptions.interactivity.modes.bounce;e&&(t.retina.bounceModeDistance=e.distance*t.retina.pixelRatio)}async interact(){const t=this.container,e=t.actualOptions,n=e.interactivity.events,o=t.interactivity.status===G5,s=n.onHover.enable,r=n.onHover.mode,l=n.onDiv;o&&s&&I1("bounce",r)?this.processMouseBounce():Ee("bounce",l,(a,c)=>this.singleSelectorBounce(a,c))}isEnabled(t){var e;const n=this.container,o=n.actualOptions,s=n.interactivity.mouse,r=((e=t==null?void 0:t.interactivity)!==null&&e!==void 0?e:o.interactivity).events,l=r.onDiv;return s.position&&r.onHover.enable&&I1("bounce",r.onHover.mode)||ze("bounce",l)}loadModeOptions(t,...e){t.bounce||(t.bounce=new vc);for(const n of e)t.bounce.load(n==null?void 0:n.bounce)}reset(){}processBounce(t,e,n){const o=this.container.particles.quadTree.query(n,s=>this.isEnabled(s));for(const s of o)n instanceof c2?w7(W4(s),{position:t,radius:e,mass:e**2*Math.PI/2,velocity:P1.origin,factor:P1.origin}):n instanceof l2&&Wr(s,x6(t,e))}processMouseBounce(){const t=this.container,e=t.retina.pixelRatio,n=10*e,o=t.interactivity.mouse.position,s=t.retina.bounceModeDistance;!s||s<0||!o||this.processBounce(o,s,new c2(o.x,o.y,s+n))}singleSelectorBounce(t,e){const n=this.container,o=document.querySelectorAll(t);o.length&&o.forEach(s=>{const r=s,l=n.retina.pixelRatio,a={x:(r.offsetLeft+r.offsetWidth/2)*l,y:(r.offsetTop+r.offsetHeight/2)*l},c=r.offsetWidth/2*l,u=10*l,h=e.type==="circle"?new c2(a.x,a.y,c+u):new l2(r.offsetLeft*l-u,r.offsetTop*l-u,r.offsetWidth*l+u*2,r.offsetHeight*l+u*2);this.processBounce(a,c,h)})}}async function yc(i){await i.addInteractor("externalBounce",t=>new mc(t))}class A7{constructor(){this.distance=200,this.duration=.4,this.mix=!1}load(t){if(t){if(t.distance!==void 0&&(this.distance=t.distance),t.duration!==void 0&&(this.duration=t.duration),t.mix!==void 0&&(this.mix=t.mix),t.opacity!==void 0&&(this.opacity=t.opacity),t.color!==void 0){const e=this.color instanceof Array?void 0:this.color;this.color=T1(t.color,n=>N1.create(e,n))}t.size!==void 0&&(this.size=t.size)}}}class gc extends A7{constructor(){super(),this.selectors=[]}get ids(){return T1(this.selectors,t=>t.replace("#",""))}set ids(t){this.selectors=T1(t,e=>`#${e}`)}load(t){super.load(t),t&&(t.ids!==void 0&&(this.ids=t.ids),t.selectors!==void 0&&(this.selectors=t.selectors))}}class _c extends A7{load(t){super.load(t),t&&(this.divs=T1(t.divs,e=>{const n=new gc;return n.load(e),n}))}}function h3(i,t,e,n){if(t>=e){const o=i+(t-e)*n;return I2(o,i,t)}else if(t<e){const o=i-(e-t)*n;return I2(o,t,i)}}class bc extends T2{constructor(t){super(t),t.bubble||(t.bubble={}),this.handleClickMode=e=>{e==="bubble"&&(t.bubble||(t.bubble={}),t.bubble.clicking=!0)}}clear(t,e,n){t.bubble.inRange&&!n||(delete t.bubble.div,delete t.bubble.opacity,delete t.bubble.radius,delete t.bubble.color)}init(){const t=this.container,e=t.actualOptions.interactivity.modes.bubble;e&&(t.retina.bubbleModeDistance=e.distance*t.retina.pixelRatio,e.size!==void 0&&(t.retina.bubbleModeSize=e.size*t.retina.pixelRatio))}async interact(t){const e=this.container.actualOptions,n=e.interactivity.events,o=n.onHover,s=n.onClick,r=o.enable,l=o.mode,a=s.enable,c=s.mode,u=n.onDiv;r&&I1("bubble",l)?this.hoverBubble(t):a&&I1("bubble",c)?this.clickBubble(t):Ee("bubble",u,(h,f)=>this.singleSelectorHover(t,h,f))}isEnabled(t){var e;const n=this.container,o=n.actualOptions,s=n.interactivity.mouse,r=((e=t==null?void 0:t.interactivity)!==null&&e!==void 0?e:o.interactivity).events,l=r.onDiv,a=ze("bubble",l);if(!(a||r.onHover.enable&&s.position||r.onClick.enable&&s.clickPosition))return!1;const c=r.onHover.mode,u=r.onClick.mode;return I1("bubble",c)||I1("bubble",u)||a}loadModeOptions(t,...e){t.bubble||(t.bubble=new _c);for(const n of e)t.bubble.load(n==null?void 0:n.bubble)}reset(t){t.bubble.inRange=!1}clickBubble(t){var e,n;const o=this.container,s=o.actualOptions,r=o.interactivity.mouse.clickPosition,l=s.interactivity.modes.bubble;if(!l||!r)return;o.bubble||(o.bubble={});const a=o.retina.bubbleModeDistance;if(!a||a<0)return;const c=o.particles.quadTree.queryCircle(r,a,u=>this.isEnabled(u));for(const u of c){if(!o.bubble.clicking)continue;u.bubble.inRange=!o.bubble.durationEnd;const h=u.getPosition(),f=X1(h,r),C=(new Date().getTime()-(o.interactivity.mouse.clickTime||0))/1e3;C>l.duration&&(o.bubble.durationEnd=!0),C>l.duration*2&&(o.bubble.clicking=!1,o.bubble.durationEnd=!1);const d={bubbleObj:{optValue:o.retina.bubbleModeSize,value:u.bubble.radius},particlesObj:{optValue:N2(u.options.size.value)*o.retina.pixelRatio,value:u.size.value},type:"size"};this.process(u,f,C,d);const p={bubbleObj:{optValue:l.opacity,value:u.bubble.opacity},particlesObj:{optValue:N2(u.options.opacity.value),value:(n=(e=u.opacity)===null||e===void 0?void 0:e.value)!==null&&n!==void 0?n:1},type:"opacity"};this.process(u,f,C,p),o.bubble.durationEnd?delete u.bubble.color:f<=a?this.hoverBubbleColor(u,f):delete u.bubble.color}}hoverBubble(t){const e=this.container,n=e.interactivity.mouse.position,o=e.retina.bubbleModeDistance;if(!o||o<0||n===void 0)return;const s=e.particles.quadTree.queryCircle(n,o,r=>this.isEnabled(r));for(const r of s){r.bubble.inRange=!0;const l=r.getPosition(),a=X1(l,n),c=1-a/o;a<=o?c>=0&&e.interactivity.status===G5&&(this.hoverBubbleSize(r,c),this.hoverBubbleOpacity(r,c),this.hoverBubbleColor(r,c)):this.reset(r),e.interactivity.status===K4&&this.reset(r)}}hoverBubbleColor(t,e,n){const o=this.container.actualOptions,s=n??o.interactivity.modes.bubble;if(s){if(!t.bubble.finalColor){const r=s.color;if(!r)return;const l=_2(r);t.bubble.finalColor=x5(l)}if(t.bubble.finalColor)if(s.mix){t.bubble.color=void 0;const r=t.getFillColor();t.bubble.color=r?k7(Pe(r,t.bubble.finalColor,1-e,e)):t.bubble.finalColor}else t.bubble.color=t.bubble.finalColor}}hoverBubbleOpacity(t,e,n){var o,s,r,l;const a=this.container,c=a.actualOptions,u=(o=n==null?void 0:n.opacity)!==null&&o!==void 0?o:(s=c.interactivity.modes.bubble)===null||s===void 0?void 0:s.opacity;if(!u)return;const h=t.options.opacity.value,f=(l=(r=t.opacity)===null||r===void 0?void 0:r.value)!==null&&l!==void 0?l:1,C=h3(f,u,N2(h),e);C!==void 0&&(t.bubble.opacity=C)}hoverBubbleSize(t,e,n){const o=this.container,s=n!=null&&n.size?n.size*o.retina.pixelRatio:o.retina.bubbleModeSize;if(s===void 0)return;const r=N2(t.options.size.value)*o.retina.pixelRatio,l=t.size.value,a=h3(l,s,r,e);a!==void 0&&(t.bubble.radius=a)}process(t,e,n,o){const s=this.container,r=o.bubbleObj.optValue,l=s.actualOptions,a=l.interactivity.modes.bubble;if(!a||r===void 0)return;const c=a.duration,u=s.retina.bubbleModeDistance,h=o.particlesObj.optValue,f=o.bubbleObj.value,C=o.particlesObj.value||0,d=o.type;if(!(!u||u<0||r===h))if(s.bubble||(s.bubble={}),s.bubble.durationEnd)f&&(d==="size"&&delete t.bubble.radius,d==="opacity"&&delete t.bubble.opacity);else if(e<=u){if((f??C)!==r){const v=C-n*(C-r)/c;d==="size"&&(t.bubble.radius=v),d==="opacity"&&(t.bubble.opacity=v)}}else d==="size"&&delete t.bubble.radius,d==="opacity"&&delete t.bubble.opacity}singleSelectorHover(t,e,n){const o=this.container,s=document.querySelectorAll(e),r=o.actualOptions.interactivity.modes.bubble;!r||!s.length||s.forEach(l=>{const a=l,c=o.retina.pixelRatio,u={x:(a.offsetLeft+a.offsetWidth/2)*c,y:(a.offsetTop+a.offsetHeight/2)*c},h=a.offsetWidth/2*c,f=n.type==="circle"?new c2(u.x,u.y,h):new l2(a.offsetLeft*c,a.offsetTop*c,a.offsetWidth*c,a.offsetHeight*c),C=o.particles.quadTree.query(f,d=>this.isEnabled(d));for(const d of C){if(!f.contains(d.getPosition()))continue;d.bubble.inRange=!0;const p=r.divs,v=b7(p,a);(!d.bubble.div||d.bubble.div!==a)&&(this.clear(d,t,!0),d.bubble.div=a),this.hoverBubbleSize(d,1,v),this.hoverBubbleOpacity(d,1,v),this.hoverBubbleColor(d,1,v)}})}}async function wc(i){await i.addInteractor("externalBubble",t=>new bc(t))}class Mc{constructor(){this.opacity=.5}load(t){t&&t.opacity!==void 0&&(this.opacity=t.opacity)}}class Lc{constructor(){this.distance=80,this.links=new Mc,this.radius=60}get lineLinked(){return this.links}set lineLinked(t){this.links=t}get line_linked(){return this.links}set line_linked(t){this.links=t}load(t){var e,n;t&&(t.distance!==void 0&&(this.distance=t.distance),this.links.load((n=(e=t.links)!==null&&e!==void 0?e:t.lineLinked)!==null&&n!==void 0?n:t.line_linked),t.radius!==void 0&&(this.radius=t.radius))}}function xc(i,t,e,n){const o=Math.floor(e.getRadius()/t.getRadius()),s=t.getFillColor(),r=e.getFillColor();if(!s||!r)return;const l=t.getPosition(),a=e.getPosition(),c=Pe(s,r,t.getRadius(),e.getRadius()),u=i.createLinearGradient(l.x,l.y,a.x,a.y);return u.addColorStop(0,L8(s,n)),u.addColorStop(o>1?1:o,B2(c,n)),u.addColorStop(1,L8(r,n)),u}function kc(i,t,e,n,o){J8(i,n,o),i.lineWidth=t,i.strokeStyle=e,i.stroke()}function zc(i,t,e,n){const o=i.actualOptions,s=o.interactivity.modes.connect;if(s)return xc(t,e,n,s.links.opacity)}function Ec(i,t,e){i.canvas.draw(n=>{var o;const s=zc(i,n,t,e);if(!s)return;const r=t.getPosition(),l=e.getPosition();kc(n,(o=t.retina.linksWidth)!==null&&o!==void 0?o:0,s,r,l)})}class Pc extends T2{constructor(t){super(t)}clear(){}init(){const t=this.container,e=t.actualOptions.interactivity.modes.connect;e&&(t.retina.connectModeDistance=e.distance*t.retina.pixelRatio,t.retina.connectModeRadius=e.radius*t.retina.pixelRatio)}async interact(){const t=this.container;if(t.actualOptions.interactivity.events.onHover.enable&&t.interactivity.status==="pointermove"){const n=t.interactivity.mouse.position;if(!t.retina.connectModeDistance||t.retina.connectModeDistance<0||!t.retina.connectModeRadius||t.retina.connectModeRadius<0||!n)return;const o=Math.abs(t.retina.connectModeRadius),s=t.particles.quadTree.queryCircle(n,o,l=>this.isEnabled(l));let r=0;for(const l of s){const a=l.getPosition();for(const c of s.slice(r+1)){const u=c.getPosition(),h=Math.abs(t.retina.connectModeDistance),f=Math.abs(a.x-u.x),C=Math.abs(a.y-u.y);f<h&&C<h&&Ec(t,l,c)}++r}}}isEnabled(t){var e;const n=this.container,o=n.interactivity.mouse,s=((e=t==null?void 0:t.interactivity)!==null&&e!==void 0?e:n.actualOptions.interactivity).events;return s.onHover.enable&&o.position?I1("connect",s.onHover.mode):!1}loadModeOptions(t,...e){t.connect||(t.connect=new Lc);for(const n of e)t.connect.load(n==null?void 0:n.connect)}reset(){}}async function Sc(i){await i.addInteractor("externalConnect",t=>new Pc(t))}class Oc{constructor(){this.blink=!1,this.consent=!1,this.opacity=1}load(t){t&&(t.blink!==void 0&&(this.blink=t.blink),t.color!==void 0&&(this.color=N1.create(this.color,t.color)),t.consent!==void 0&&(this.consent=t.consent),t.opacity!==void 0&&(this.opacity=t.opacity))}}class Rc{constructor(){this.distance=100,this.links=new Oc}get lineLinked(){return this.links}set lineLinked(t){this.links=t}get line_linked(){return this.links}set line_linked(t){this.links=t}load(t){var e,n;t&&(t.distance!==void 0&&(this.distance=t.distance),this.links.load((n=(e=t.links)!==null&&e!==void 0?e:t.lineLinked)!==null&&n!==void 0?n:t.line_linked))}}function Ic(i,t,e,n,o,s){J8(i,e,n),i.strokeStyle=B2(o,s),i.lineWidth=t,i.stroke()}function Tc(i,t,e,n,o){i.canvas.draw(s=>{var r;const l=t.getPosition();Ic(s,(r=t.retina.linksWidth)!==null&&r!==void 0?r:0,l,o,e,n)})}class Zc extends T2{constructor(t){super(t)}clear(){}init(){const t=this.container,e=t.actualOptions.interactivity.modes.grab;e&&(t.retina.grabModeDistance=e.distance*t.retina.pixelRatio)}async interact(){var t,e;const n=this.container,o=n.actualOptions,s=o.interactivity;if(!s.modes.grab||!s.events.onHover.enable||n.interactivity.status!==G5)return;const r=n.interactivity.mouse.position;if(!r)return;const l=n.retina.grabModeDistance;if(!l||l<0)return;const a=n.particles.quadTree.queryCircle(r,l,c=>this.isEnabled(c));for(const c of a){const u=c.getPosition(),h=X1(u,r);if(h>l)continue;const f=s.modes.grab.links,C=f.opacity,d=C-h*C/l;if(d<=0)continue;const p=(t=f.color)!==null&&t!==void 0?t:(e=c.options.links)===null||e===void 0?void 0:e.color;if(!n.particles.grabLineColor&&p){const g=s.modes.grab.links;n.particles.grabLineColor=E7(p,g.blink,g.consent)}const v=G4(c,void 0,n.particles.grabLineColor);if(!v)return;Tc(n,c,v,d,r)}}isEnabled(t){var e;const n=this.container,o=n.interactivity.mouse,s=((e=t==null?void 0:t.interactivity)!==null&&e!==void 0?e:n.actualOptions.interactivity).events;return s.onHover.enable&&!!o.position&&I1("grab",s.onHover.mode)}loadModeOptions(t,...e){t.grab||(t.grab=new Rc);for(const n of e)t.grab.load(n==null?void 0:n.grab)}reset(){}}async function Ac(i){await i.addInteractor("externalGrab",t=>new Zc(t))}class Dc extends T2{constructor(t){super(t),this.handleClickMode=e=>{if(e!=="pause")return;const n=this.container;n.getAnimationStatus()?n.pause():n.play()}}clear(){}init(){}async interact(){}isEnabled(){return!0}reset(){}}function $c(i){i.addInteractor("externalPause",t=>new Dc(t))}class Fc{constructor(){this.default=!0,this.groups=[],this.quantity=4}get particles_nb(){return this.quantity}set particles_nb(t){this.quantity=t}load(t){var e;if(!t)return;t.default!==void 0&&(this.default=t.default),t.groups!==void 0&&(this.groups=t.groups.map(o=>o)),this.groups.length||(this.default=!0);const n=(e=t.quantity)!==null&&e!==void 0?e:t.particles_nb;n!==void 0&&(this.quantity=n)}}class jc extends T2{constructor(t){super(t),this.handleClickMode=e=>{if(e!=="push")return;const n=this.container,o=n.actualOptions,s=o.interactivity.modes.push;if(!s)return;const r=s.quantity;if(r<=0)return;const l=M6([void 0,...s.groups]),a=l!==void 0?n.actualOptions.particles.groups[l]:void 0;n.particles.push(r,n.interactivity.mouse,a,l)}}clear(){}init(){}async interact(){}isEnabled(){return!0}loadModeOptions(t,...e){t.push||(t.push=new Fc);for(const n of e)t.push.load(n==null?void 0:n.push)}reset(){}}async function Nc(i){await i.addInteractor("externalPush",t=>new jc(t))}class Bc{constructor(){this.quantity=2}get particles_nb(){return this.quantity}set particles_nb(t){this.quantity=t}load(t){var e;if(!t)return;const n=(e=t.quantity)!==null&&e!==void 0?e:t.particles_nb;n!==void 0&&(this.quantity=n)}}class Hc extends T2{constructor(t){super(t),this.handleClickMode=e=>{const n=this.container,o=n.actualOptions;if(!o.interactivity.modes.remove||e!=="remove")return;const s=o.interactivity.modes.remove.quantity;n.particles.removeQuantity(s)}}clear(){}init(){}async interact(){}isEnabled(){return!0}loadModeOptions(t,...e){t.remove||(t.remove=new Bc);for(const n of e)t.remove.load(n==null?void 0:n.remove)}reset(){}}function Vc(i){i.addInteractor("externalRemove",t=>new Hc(t))}class D7{constructor(){this.distance=200,this.duration=.4,this.factor=100,this.speed=1,this.maxSpeed=50,this.easing="ease-out-quad"}load(t){t&&(t.distance!==void 0&&(this.distance=t.distance),t.duration!==void 0&&(this.duration=t.duration),t.easing!==void 0&&(this.easing=t.easing),t.factor!==void 0&&(this.factor=t.factor),t.speed!==void 0&&(this.speed=t.speed),t.maxSpeed!==void 0&&(this.maxSpeed=t.maxSpeed))}}class qc extends D7{constructor(){super(),this.selectors=[]}get ids(){return T1(this.selectors,t=>t.replace("#",""))}set ids(t){this.selectors=T1(t,e=>`#${e}`)}load(t){super.load(t),t&&(t.ids!==void 0&&(this.ids=t.ids),t.selectors!==void 0&&(this.selectors=t.selectors))}}class Uc extends D7{load(t){super.load(t),t&&(this.divs=T1(t.divs,e=>{const n=new qc;return n.load(e),n}))}}class Wc extends T2{constructor(t,e){super(e),this._engine=t,e.repulse||(e.repulse={particles:[]}),this.handleClickMode=n=>{const o=this.container.actualOptions,s=o.interactivity.modes.repulse;if(!(!s||n!=="repulse")){e.repulse||(e.repulse={particles:[]}),e.repulse.clicking=!0,e.repulse.count=0;for(const r of e.repulse.particles)this.isEnabled(r)&&r.velocity.setTo(r.initialVelocity);e.repulse.particles=[],e.repulse.finish=!1,setTimeout(()=>{e.destroyed||(e.repulse||(e.repulse={particles:[]}),e.repulse.clicking=!1)},s.duration*1e3)}}}clear(){}init(){const t=this.container,e=t.actualOptions.interactivity.modes.repulse;e&&(t.retina.repulseModeDistance=e.distance*t.retina.pixelRatio)}async interact(){const t=this.container,e=t.actualOptions,n=t.interactivity.status===G5,o=e.interactivity.events,s=o.onHover.enable,r=o.onHover.mode,l=o.onClick.enable,a=o.onClick.mode,c=o.onDiv;n&&s&&I1("repulse",r)?this.hoverRepulse():l&&I1("repulse",a)?this.clickRepulse():Ee("repulse",c,(u,h)=>this.singleSelectorRepulse(u,h))}isEnabled(t){var e;const n=this.container,o=n.actualOptions,s=n.interactivity.mouse,r=((e=t==null?void 0:t.interactivity)!==null&&e!==void 0?e:o.interactivity).events,l=r.onDiv,a=ze("repulse",l);if(!(a||r.onHover.enable&&s.position||r.onClick.enable&&s.clickPosition))return!1;const c=r.onHover.mode,u=r.onClick.mode;return I1("repulse",c)||I1("repulse",u)||a}loadModeOptions(t,...e){t.repulse||(t.repulse=new Uc);for(const n of e)t.repulse.load(n==null?void 0:n.repulse)}reset(){}clickRepulse(){const t=this.container,e=t.actualOptions.interactivity.modes.repulse;if(e){if(t.repulse||(t.repulse={particles:[]}),t.repulse.finish||(t.repulse.count||(t.repulse.count=0),t.repulse.count++,t.repulse.count===t.particles.count&&(t.repulse.finish=!0)),t.repulse.clicking){const n=t.retina.repulseModeDistance;if(!n||n<0)return;const o=Math.pow(n/6,3),s=t.interactivity.mouse.clickPosition;if(s===void 0)return;const r=new c2(s.x,s.y,o),l=t.particles.quadTree.query(r,a=>this.isEnabled(a));for(const a of l){const{dx:c,dy:u,distance:h}=n2(s,a.position),f=h**2,C=e.speed,d=-o*C/f;if(f<=o){t.repulse.particles.push(a);const p=P1.create(c,u);p.length=d,a.velocity.setTo(p)}}}else if(t.repulse.clicking===!1){for(const n of t.repulse.particles)n.velocity.setTo(n.initialVelocity);t.repulse.particles=[]}}}hoverRepulse(){const t=this.container,e=t.interactivity.mouse.position,n=t.retina.repulseModeDistance;!n||n<0||!e||this.processRepulse(e,n,new c2(e.x,e.y,n))}processRepulse(t,e,n,o){var s;const r=this.container,l=r.particles.quadTree.query(n,c=>this.isEnabled(c)),a=r.actualOptions.interactivity.modes.repulse;if(a)for(const c of l){const{dx:u,dy:h,distance:f}=n2(c.position,t),C=((s=o==null?void 0:o.speed)!==null&&s!==void 0?s:a.speed)*a.factor,d=I2(p7(a.easing)(1-f/e)*C,0,a.maxSpeed),p=P1.create(f===0?C:u/f*d,f===0?C:h/f*d);c.position.addTo(p)}}singleSelectorRepulse(t,e){const n=this.container,o=n.actualOptions.interactivity.modes.repulse;if(!o)return;const s=document.querySelectorAll(t);s.length&&s.forEach(r=>{const l=r,a=n.retina.pixelRatio,c={x:(l.offsetLeft+l.offsetWidth/2)*a,y:(l.offsetTop+l.offsetHeight/2)*a},u=l.offsetWidth/2*a,h=e.type==="circle"?new c2(c.x,c.y,u):new l2(l.offsetLeft*a,l.offsetTop*a,l.offsetWidth*a,l.offsetHeight*a),f=o.divs,C=b7(f,l);this.processRepulse(c,u,h,C)})}}async function Gc(i){await i.addInteractor("externalRepulse",t=>new Wc(i,t))}class Kc{constructor(){this.factor=3,this.radius=200}load(t){t&&(t.factor!==void 0&&(this.factor=t.factor),t.radius!==void 0&&(this.radius=t.radius))}}class Yc extends T2{constructor(t){super(t)}clear(t,e,n){t.slow.inRange&&!n||(t.slow.factor=1)}init(){const t=this.container,e=t.actualOptions.interactivity.modes.slow;e&&(t.retina.slowModeRadius=e.radius*t.retina.pixelRatio)}async interact(){}isEnabled(t){var e;const n=this.container,o=n.interactivity.mouse,s=((e=t==null?void 0:t.interactivity)!==null&&e!==void 0?e:n.actualOptions.interactivity).events;return s.onHover.enable&&!!o.position&&I1("slow",s.onHover.mode)}loadModeOptions(t,...e){t.slow||(t.slow=new Kc);for(const n of e)t.slow.load(n==null?void 0:n.slow)}reset(t){t.slow.inRange=!1;const e=this.container,n=e.actualOptions,o=e.interactivity.mouse.position,s=e.retina.slowModeRadius,r=n.interactivity.modes.slow;if(!r||!s||s<0||!o)return;const l=t.getPosition(),a=X1(o,l),c=a/s,u=r.factor;a<=s&&(t.slow.inRange=!0,t.slow.factor=c/u)}}async function Xc(i){await i.addInteractor("externalSlow",t=>new Yc(t))}const Jc=/(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d.]+%?\))|currentcolor/gi;function Qc(i,t,e){const{svgData:n}=i;if(!n)return"";const o=L8(t,e);if(n.includes("fill"))return n.replace(Jc,()=>o);const s=n.indexOf(">");return`${n.substring(0,s)} fill="${o}"${n.substring(s)}`}async function Re(i){return new Promise(t=>{i.loading=!0;const e=new Image;i.element=e,e.addEventListener("load",()=>{i.loading=!1,t()}),e.addEventListener("error",()=>{i.element=void 0,i.error=!0,i.loading=!1,console.error(`Error tsParticles - loading image: ${i.source}`),t()}),e.src=i.source})}async function tu(i){if(i.type!=="svg"){await Re(i);return}i.loading=!0;const t=await fetch(i.source);t.ok||(console.error("Error tsParticles - Image not found"),i.error=!0),i.error||(i.svgData=await t.text()),i.loading=!1}function eu(i,t,e,n){var o,s,r;const l=Qc(i,e,(s=(o=n.opacity)===null||o===void 0?void 0:o.value)!==null&&s!==void 0?s:1),a={color:e,data:Object.assign(Object.assign({},i),{svgData:l}),loaded:!1,ratio:t.width/t.height,replaceColor:(r=t.replaceColor)!==null&&r!==void 0?r:t.replace_color,source:t.src};return new Promise(c=>{const u=new Blob([l],{type:"image/svg+xml"}),h=URL||window.URL||window.webkitURL||window,f=h.createObjectURL(u),C=new Image;C.addEventListener("load",()=>{a.loaded=!0,a.element=C,c(a),h.revokeObjectURL(f)}),C.addEventListener("error",async()=>{h.revokeObjectURL(f);const d=Object.assign(Object.assign({},i),{error:!1,loading:!0});await Re(d),a.loaded=!0,a.element=d.element,c(a)}),C.src=f})}class iu{constructor(){this._images=[]}addImage(t,e){const n=this.getImages(t);n==null||n.images.push(e)}destroy(){this._images=[]}draw(t,e,n,o){var s;const r=e.image,l=r==null?void 0:r.element;if(!l)return;const a=(s=r==null?void 0:r.ratio)!==null&&s!==void 0?s:1,c={x:-n,y:-n};t.globalAlpha=o,t.drawImage(l,c.x,c.y,n*2,n*2/a),t.globalAlpha=1}getImages(t){const e=this._images.find(n=>n.id===t.id);return e||(this._images.push({id:t.id,images:[]}),this.getImages(t))}getSidesCount(){return 12}loadShape(t){if(t.shape!=="image"&&t.shape!=="images")return;const e=t.container,n=this.getImages(e).images,o=t.shapeData;n.find(r=>r.source===o.src)||this.loadImageShape(e,o).then(()=>{this.loadShape(t)})}particleInit(t,e){var n;if(e.shape!=="image"&&e.shape!=="images")return;const o=this.getImages(t).images,s=e.shapeData,r=e.getFillColor(),l=(n=s.replaceColor)!==null&&n!==void 0?n:s.replace_color,a=o.find(c=>c.source===s.src);if(a){if(a.loading){setTimeout(()=>{this.particleInit(t,e)});return}(async()=>{var c,u;let h;a.svgData&&r?h=await eu(a,s,r,e):h={color:r,data:a,element:a.element,loaded:!0,ratio:s.width/s.height,replaceColor:l,source:s.src},h.ratio||(h.ratio=1);const f=(c=s.fill)!==null&&c!==void 0?c:e.fill,C=(u=s.close)!==null&&u!==void 0?u:e.close,d={image:h,fill:f,close:C};e.image=d.image,e.fill=d.fill,e.close=d.close})()}}async loadImageShape(t,e){var n;const o=e.src;if(!o)throw new Error("Error tsParticles - No image.src");try{const s={source:o,type:o.substring(o.length-3),error:!1,loading:!0};this.addImage(t,s),await(((n=e.replaceColor)!==null&&n!==void 0?n:e.replace_color)?tu:Re)(s)}catch{throw new Error(`tsParticles error - ${e.src} not found`)}}}async function nu(i){await i.addShape(["image","images"],new iu)}class ou extends M2{constructor(){super(),this.sync=!1}load(t){t&&(super.load(t),t.sync!==void 0&&(this.sync=t.sync))}}class su extends M2{constructor(){super(),this.random.minimumValue=1e-4,this.sync=!1}load(t){t&&(super.load(t),t.sync!==void 0&&(this.sync=t.sync))}}class ru{constructor(){this.count=0,this.delay=new ou,this.duration=new su}load(t){t&&(t.count!==void 0&&(this.count=t.count),this.delay.load(t.delay),this.duration.load(t.duration))}}class lu{constructor(t){this.container=t}init(t){const e=this.container,n=t.options,o=n.life;o&&(t.life={delay:e.retina.reduceFactor?K(o.delay.value)*(o.delay.sync?1:d1())/e.retina.reduceFactor*1e3:0,delayTime:0,duration:e.retina.reduceFactor?K(o.duration.value)*(o.duration.sync?1:d1())/e.retina.reduceFactor*1e3:0,time:0,count:o.count},t.life.duration<=0&&(t.life.duration=-1),t.life.count<=0&&(t.life.count=-1),t.life&&(t.spawning=t.life.delay>0))}isEnabled(t){return!t.destroyed}loadOptions(t,...e){t.life||(t.life=new ru);for(const n of e)t.life.load(n==null?void 0:n.life)}update(t,e){if(!this.isEnabled(t)||!t.life)return;const n=t.life;let o=!1;if(t.spawning)if(n.delayTime+=e.value,n.delayTime>=t.life.delay)o=!0,t.spawning=!1,n.delayTime=0,n.time=0;else return;if(n.duration===-1||t.spawning||(o?n.time=0:n.time+=e.value,n.time<n.duration))return;if(n.time=0,t.life.count>0&&t.life.count--,t.life.count===0){t.destroy();return}const s=this.container.canvas.size,r=l1(0,s.width),l=l1(0,s.width);t.position.x=Y1(r),t.position.y=Y1(l),t.spawning=!0,n.delayTime=0,n.time=0,t.reset();const a=t.options.life;a&&(n.delay=K(a.delay.value)*1e3,n.duration=K(a.duration.value)*1e3)}}async function au(i){await i.addParticleUpdater("life",t=>new lu(t))}class cu{draw(t,e,n){t.moveTo(-n/2,0),t.lineTo(n/2,0)}getSidesCount(){return 1}}async function uu(i){await i.addShape("line",new cu)}function hu(i,t,e,n){switch(i.options.opacity.animation.destroy){case"max":t>=n&&i.destroy();break;case"min":t<=e&&i.destroy();break}}function fu(i,t){var e,n,o,s,r,l;if(!i.opacity)return;const a=i.opacity.min,c=i.opacity.max,u=(e=i.opacity.decay)!==null&&e!==void 0?e:1;if(!(i.destroyed||!i.opacity.enable||((n=i.opacity.maxLoops)!==null&&n!==void 0?n:0)>0&&((o=i.opacity.loops)!==null&&o!==void 0?o:0)>((s=i.opacity.maxLoops)!==null&&s!==void 0?s:0))){switch(i.opacity.status){case"increasing":i.opacity.value>=c?(i.opacity.status="decreasing",i.opacity.loops||(i.opacity.loops=0),i.opacity.loops++):i.opacity.value+=((r=i.opacity.velocity)!==null&&r!==void 0?r:0)*t.factor;break;case"decreasing":i.opacity.value<=a?(i.opacity.status="increasing",i.opacity.loops||(i.opacity.loops=0),i.opacity.loops++):i.opacity.value-=((l=i.opacity.velocity)!==null&&l!==void 0?l:0)*t.factor;break}i.opacity.velocity&&i.opacity.decay!==1&&(i.opacity.velocity*=u),hu(i,i.opacity.value,a,c),i.destroyed||(i.opacity.value=I2(i.opacity.value,a,c))}}class du{constructor(t){this.container=t}init(t){const e=t.options.opacity;t.opacity={enable:e.animation.enable,max:N2(e.value),min:d6(e.value),value:K(e.value),loops:0,maxLoops:K(e.animation.count)};const n=e.animation;if(n.enable){t.opacity.decay=1-K(n.decay),t.opacity.status="increasing";const o=e.value;switch(t.opacity.min=d6(o),t.opacity.max=N2(o),n.startValue){case"min":t.opacity.value=t.opacity.min,t.opacity.status="increasing";break;case"random":t.opacity.value=Y1(t.opacity),t.opacity.status=d1()>=.5?"increasing":"decreasing";break;case"max":default:t.opacity.value=t.opacity.max,t.opacity.status="decreasing";break}t.opacity.velocity=K(n.speed)/100*this.container.retina.reduceFactor,n.sync||(t.opacity.velocity*=d1())}t.opacity.initialValue=t.opacity.value}isEnabled(t){var e,n,o,s;return!t.destroyed&&!t.spawning&&!!t.opacity&&t.opacity.enable&&(((e=t.opacity.maxLoops)!==null&&e!==void 0?e:0)<=0||((n=t.opacity.maxLoops)!==null&&n!==void 0?n:0)>0&&((o=t.opacity.loops)!==null&&o!==void 0?o:0)<((s=t.opacity.maxLoops)!==null&&s!==void 0?s:0))}reset(t){t.opacity&&(t.opacity.loops=0)}update(t,e){this.isEnabled(t)&&fu(t,e)}}async function Cu(i){await i.addParticleUpdater("opacity",t=>new du(t))}function pu(i){if(i.outMode!=="bounce"&&i.outMode!=="bounce-horizontal"&&i.outMode!=="bounceHorizontal"&&i.outMode!=="split")return;i.bounds.right<0?i.particle.position.x=i.size+i.offset.x:i.bounds.left>i.canvasSize.width&&(i.particle.position.x=i.canvasSize.width-i.size-i.offset.x);const t=i.particle.velocity.x;let e=!1;if(i.direction==="right"&&i.bounds.right>=i.canvasSize.width&&t>0||i.direction==="left"&&i.bounds.left<=0&&t<0){const o=r5(i.particle.options.bounce.horizontal);i.particle.velocity.x*=-o,e=!0}if(!e)return;const n=i.offset.x+i.size;i.bounds.right>=i.canvasSize.width?i.particle.position.x=i.canvasSize.width-n:i.bounds.left<=0&&(i.particle.position.x=n),i.outMode==="split"&&i.particle.destroy()}function vu(i){if(i.outMode!=="bounce"&&i.outMode!=="bounce-vertical"&&i.outMode!=="bounceVertical"&&i.outMode!=="split")return;i.bounds.bottom<0?i.particle.position.y=i.size+i.offset.y:i.bounds.top>i.canvasSize.height&&(i.particle.position.y=i.canvasSize.height-i.size-i.offset.y);const t=i.particle.velocity.y;let e=!1;if(i.direction==="bottom"&&i.bounds.bottom>=i.canvasSize.height&&t>0||i.direction==="top"&&i.bounds.top<=0&&t<0){const o=r5(i.particle.options.bounce.vertical);i.particle.velocity.y*=-o,e=!0}if(!e)return;const n=i.offset.y+i.size;i.bounds.bottom>=i.canvasSize.height?i.particle.position.y=i.canvasSize.height-n:i.bounds.top<=0&&(i.particle.position.y=n),i.outMode==="split"&&i.particle.destroy()}class mu{constructor(t){this.container=t,this.modes=["bounce","bounce-vertical","bounce-horizontal","bounceVertical","bounceHorizontal","split"]}update(t,e,n,o){if(!this.modes.includes(o))return;const s=this.container;let r=!1;for(const[,f]of s.plugins)if(f.particleBounce!==void 0&&(r=f.particleBounce(t,n,e)),r)break;if(r)return;const l=t.getPosition(),a=t.offset,c=t.getRadius(),u=x6(l,c),h=s.canvas.size;pu({particle:t,outMode:o,direction:e,bounds:u,canvasSize:h,offset:a,size:c}),vu({particle:t,outMode:o,direction:e,bounds:u,canvasSize:h,offset:a,size:c})}}class yu{constructor(t){this.container=t,this.modes=["destroy"]}update(t,e,n,o){if(!this.modes.includes(o))return;const s=this.container;switch(t.outType){case"normal":case"outside":if(L6(t.position,s.canvas.size,P1.origin,t.getRadius(),e))return;break;case"inside":{const{dx:r,dy:l}=n2(t.position,t.moveCenter),{x:a,y:c}=t.velocity;if(a<0&&r>t.moveCenter.radius||c<0&&l>t.moveCenter.radius||a>=0&&r<-t.moveCenter.radius||c>=0&&l<-t.moveCenter.radius)return;break}}s.particles.remove(t,void 0,!0)}}class gu{constructor(t){this.container=t,this.modes=["none"]}update(t,e,n,o){if(!this.modes.includes(o)||t.options.move.distance.horizontal&&(e==="left"||e==="right")||t.options.move.distance.vertical&&(e==="top"||e==="bottom"))return;const s=t.options.move.gravity,r=this.container,l=r.canvas.size,a=t.getRadius();if(s.enable){const c=t.position;(!s.inverse&&c.y>l.height+a&&e==="bottom"||s.inverse&&c.y<-a&&e==="top")&&r.particles.remove(t)}else{if(t.velocity.y>0&&t.position.y<=l.height+a||t.velocity.y<0&&t.position.y>=-a||t.velocity.x>0&&t.position.x<=l.width+a||t.velocity.x<0&&t.position.x>=-a)return;L6(t.position,r.canvas.size,P1.origin,a,e)||r.particles.remove(t)}}}class _u{constructor(t){this.container=t,this.modes=["out"]}update(t,e,n,o){if(!this.modes.includes(o))return;const s=this.container;switch(t.outType){case"inside":{const{x:r,y:l}=t.velocity,a=P1.origin;a.length=t.moveCenter.radius,a.angle=t.velocity.angle+Math.PI,a.addTo(P1.create(t.moveCenter));const{dx:c,dy:u}=n2(t.position,a);if(r<=0&&c>=0||l<=0&&u>=0||r>=0&&c<=0||l>=0&&u<=0)return;t.position.x=Math.floor(Y1({min:0,max:s.canvas.size.width})),t.position.y=Math.floor(Y1({min:0,max:s.canvas.size.height}));const{dx:h,dy:f}=n2(t.position,t.moveCenter);t.direction=Math.atan2(-f,-h),t.velocity.angle=t.direction;break}default:{if(L6(t.position,s.canvas.size,P1.origin,t.getRadius(),e))return;switch(t.outType){case"outside":{t.position.x=Math.floor(Y1({min:-t.moveCenter.radius,max:t.moveCenter.radius}))+t.moveCenter.x,t.position.y=Math.floor(Y1({min:-t.moveCenter.radius,max:t.moveCenter.radius}))+t.moveCenter.y;const{dx:r,dy:l}=n2(t.position,t.moveCenter);t.moveCenter.radius&&(t.direction=Math.atan2(l,r),t.velocity.angle=t.direction);break}case"normal":{const r=t.options.move.warp,l=s.canvas.size,a={bottom:l.height+t.getRadius()+t.offset.y,left:-t.getRadius()-t.offset.x,right:l.width+t.getRadius()+t.offset.x,top:-t.getRadius()-t.offset.y},c=t.getRadius(),u=x6(t.position,c);e==="right"&&u.left>l.width+t.offset.x?(t.position.x=a.left,t.initialPosition.x=t.position.x,r||(t.position.y=d1()*l.height,t.initialPosition.y=t.position.y)):e==="left"&&u.right<-t.offset.x&&(t.position.x=a.right,t.initialPosition.x=t.position.x,r||(t.position.y=d1()*l.height,t.initialPosition.y=t.position.y)),e==="bottom"&&u.top>l.height+t.offset.y?(r||(t.position.x=d1()*l.width,t.initialPosition.x=t.position.x),t.position.y=a.top,t.initialPosition.y=t.position.y):e==="top"&&u.bottom<-t.offset.y&&(r||(t.position.x=d1()*l.width,t.initialPosition.x=t.position.x),t.position.y=a.bottom,t.initialPosition.y=t.position.y);break}}break}}}}class bu{constructor(t){this.container=t,this.updaters=[new mu(t),new yu(t),new _u(t),new gu(t)]}init(){}isEnabled(t){return!t.destroyed&&!t.spawning}update(t,e){var n,o,s,r;const l=t.options.move.outModes;this.updateOutMode(t,e,(n=l.bottom)!==null&&n!==void 0?n:l.default,"bottom"),this.updateOutMode(t,e,(o=l.left)!==null&&o!==void 0?o:l.default,"left"),this.updateOutMode(t,e,(s=l.right)!==null&&s!==void 0?s:l.default,"right"),this.updateOutMode(t,e,(r=l.top)!==null&&r!==void 0?r:l.default,"top")}updateOutMode(t,e,n,o){for(const s of this.updaters)s.update(t,o,e,n)}}async function wu(i){await i.addParticleUpdater("outModes",t=>new bu(t))}class Mu{init(){}isEnabled(t){return!W5()&&!t.destroyed&&t.container.actualOptions.interactivity.events.onHover.parallax.enable}move(t){const e=t.container,n=e.actualOptions;if(W5()||!n.interactivity.events.onHover.parallax.enable)return;const o=n.interactivity.events.onHover.parallax.force,s=e.interactivity.mouse.position;if(!s)return;const r={x:e.canvas.size.width/2,y:e.canvas.size.height/2},l=n.interactivity.events.onHover.parallax.smooth,a=t.getRadius()/o,c={x:(s.x-r.x)*a,y:(s.y-r.y)*a};t.offset.x+=(c.x-t.offset.x)/l,t.offset.y+=(c.y-t.offset.y)/l}}async function Lu(i){i.addMover("parallax",()=>new Mu)}class xu extends Oe{constructor(t){super(t)}clear(){}init(){}async interact(t){var e;const n=this.container,o=(e=t.retina.attractDistance)!==null&&e!==void 0?e:n.retina.attractDistance,s=t.getPosition(),r=n.particles.quadTree.queryCircle(s,o);for(const l of r){if(t===l||!l.options.move.attract.enable||l.destroyed||l.spawning)continue;const a=l.getPosition(),{dx:c,dy:u}=n2(s,a),h=t.options.move.attract.rotate,f=c/(h.x*1e3),C=u/(h.y*1e3),d=l.size.value/t.size.value,p=1/d;t.velocity.x-=f*d,t.velocity.y-=C*d,l.velocity.x+=f*p,l.velocity.y+=C*p}}isEnabled(t){return t.options.move.attract.enable}reset(){}}async function ku(i){await i.addInteractor("particlesAttract",t=>new xu(t))}function f3(i,t,e,n,o,s){const r=I2(i.options.collisions.absorb.speed*o.factor/10,0,n);i.size.value+=r/2,e.size.value-=r,n<=s&&(e.size.value=0,e.destroy())}function zu(i,t,e,n){const o=i.getRadius(),s=t.getRadius();o===void 0&&s!==void 0?i.destroy():o!==void 0&&s===void 0?t.destroy():o!==void 0&&s!==void 0&&(o>=s?f3(i,o,t,s,e,n):f3(t,s,i,o,e,n))}function $7(i,t){w7(W4(i),W4(t))}function Eu(i,t){!i.unbreakable&&!t.unbreakable&&$7(i,t),i.getRadius()===void 0&&t.getRadius()!==void 0?i.destroy():i.getRadius()!==void 0&&t.getRadius()===void 0?t.destroy():i.getRadius()!==void 0&&t.getRadius()!==void 0&&(i.getRadius()>=t.getRadius()?i:t).destroy()}function Pu(i,t,e,n){switch(i.options.collisions.mode){case"absorb":{zu(i,t,e,n);break}case"bounce":{$7(i,t);break}case"destroy":{Eu(i,t);break}}}class Su extends Oe{constructor(t){super(t)}clear(){}init(){}async interact(t,e){const n=this.container,o=t.getPosition(),s=t.getRadius(),r=n.particles.quadTree.queryCircle(o,s*2);for(const l of r){if(t===l||!l.options.collisions.enable||t.options.collisions.mode!==l.options.collisions.mode||l.destroyed||l.spawning)continue;const a=l.getPosition(),c=l.getRadius();if(Math.abs(Math.round(o.z)-Math.round(a.z))>s+c)continue;const u=X1(o,a),h=s+c;u>h||Pu(t,l,e,n.retina.pixelRatio)}}isEnabled(t){return t.options.collisions.enable}reset(){}}async function Ou(i){await i.addInteractor("particlesCollisions",t=>new Su(t))}class Ru extends c2{constructor(t,e,n,o){super(t,e,n),this.canvasSize=o,this.canvasSize=Object.assign({},o)}contains(t){if(super.contains(t))return!0;const e={x:t.x-this.canvasSize.width,y:t.y};if(super.contains(e))return!0;const n={x:t.x-this.canvasSize.width,y:t.y-this.canvasSize.height};if(super.contains(n))return!0;const o={x:t.x,y:t.y-this.canvasSize.height};return super.contains(o)}intersects(t){if(super.intersects(t))return!0;const e=t,n=t,o={x:t.position.x-this.canvasSize.width,y:t.position.y-this.canvasSize.height};if(n.radius!==void 0){const s=new c2(o.x,o.y,n.radius*2);return super.intersects(s)}else if(e.size!==void 0){const s=new l2(o.x,o.y,e.size.width*2,e.size.height*2);return super.intersects(s)}return!1}}class Iu{constructor(){this.blur=5,this.color=new N1,this.color.value="#000",this.enable=!1}load(t){t&&(t.blur!==void 0&&(this.blur=t.blur),this.color=N1.create(this.color,t.color),t.enable!==void 0&&(this.enable=t.enable))}}class Tu{constructor(){this.enable=!1,this.frequency=1}load(t){t&&(t.color!==void 0&&(this.color=N1.create(this.color,t.color)),t.enable!==void 0&&(this.enable=t.enable),t.frequency!==void 0&&(this.frequency=t.frequency),t.opacity!==void 0&&(this.opacity=t.opacity))}}class Zu{constructor(){this.blink=!1,this.color=new N1,this.color.value="#fff",this.consent=!1,this.distance=100,this.enable=!1,this.frequency=1,this.opacity=1,this.shadow=new Iu,this.triangles=new Tu,this.width=1,this.warp=!1}load(t){t&&(t.id!==void 0&&(this.id=t.id),t.blink!==void 0&&(this.blink=t.blink),this.color=N1.create(this.color,t.color),t.consent!==void 0&&(this.consent=t.consent),t.distance!==void 0&&(this.distance=t.distance),t.enable!==void 0&&(this.enable=t.enable),t.frequency!==void 0&&(this.frequency=t.frequency),t.opacity!==void 0&&(this.opacity=t.opacity),this.shadow.load(t.shadow),this.triangles.load(t.triangles),t.width!==void 0&&(this.width=t.width),t.warp!==void 0&&(this.warp=t.warp))}}function Au(i,t,e,n,o){let s=X1(i,t);if(!o||s<=e)return s;const r={x:t.x-n.width,y:t.y};if(s=X1(i,r),s<=e)return s;const l={x:t.x-n.width,y:t.y-n.height};if(s=X1(i,l),s<=e)return s;const a={x:t.x,y:t.y-n.height};return s=X1(i,a),s}class Du extends Oe{constructor(t){super(t),this.linkContainer=t}clear(){}init(){this.linkContainer.particles.linksColor=void 0,this.linkContainer.particles.linksColors=new Map}async interact(t){var e;if(!t.options.links)return;t.links=[];const n=t.getPosition(),o=this.container,s=o.canvas.size;if(n.x<0||n.y<0||n.x>s.width||n.y>s.height)return;const r=t.options.links,l=r.opacity,a=(e=t.retina.linksDistance)!==null&&e!==void 0?e:0,c=r.warp,u=c?new Ru(n.x,n.y,a,s):new c2(n.x,n.y,a),h=o.particles.quadTree.query(u);for(const f of h){const C=f.options.links;if(t===f||!(C!=null&&C.enable)||r.id!==C.id||f.spawning||f.destroyed||!f.links||t.links.map(g=>g.destination).indexOf(f)!==-1||f.links.map(g=>g.destination).indexOf(t)!==-1)continue;const d=f.getPosition();if(d.x<0||d.y<0||d.x>s.width||d.y>s.height)continue;const p=Au(n,d,a,s,c&&C.warp);if(p>a)return;const v=(1-p/a)*l;this.setColor(t),t.links.push({destination:f,opacity:v})}}isEnabled(t){var e;return!!(!((e=t.options.links)===null||e===void 0)&&e.enable)}loadParticlesOptions(t,...e){var n,o;t.links||(t.links=new Zu);for(const s of e)t.links.load((o=(n=s==null?void 0:s.links)!==null&&n!==void 0?n:s==null?void 0:s.lineLinked)!==null&&o!==void 0?o:s==null?void 0:s.line_linked)}reset(){}setColor(t){if(!t.options.links)return;const e=this.linkContainer,n=t.options.links;let o=n.id===void 0?e.particles.linksColor:e.particles.linksColors.get(n.id);if(o)return;const s=n.color;o=E7(s,n.blink,n.consent),n.id===void 0?e.particles.linksColor=o:e.particles.linksColors.set(n.id,o)}}async function $u(i){await i.addInteractor("particlesLinks",t=>new Du(t))}function Fu(i,t,e,n,o,s,r,l,a,c,u,h){let f=!1;if(X1(e,n)<=o)J8(i,e,n),f=!0;else if(r){let C,d;const p={x:n.x-s.width,y:n.y},v=n2(e,p);if(v.distance<=o){const g=e.y-v.dy/v.dx*e.x;C={x:0,y:g},d={x:s.width,y:g}}else{const g={x:n.x,y:n.y-s.height},_=n2(e,g);if(_.distance<=o){const P=-(e.y-_.dy/_.dx*e.x)/(_.dy/_.dx);C={x:P,y:0},d={x:P,y:s.height}}else{const b={x:n.x-s.width,y:n.y-s.height},P=n2(e,b);if(P.distance<=o){const E=e.y-P.dy/P.dx*e.x;C={x:-E/(P.dy/P.dx),y:E},d={x:C.x+s.width,y:C.y+s.height}}}}C&&d&&(J8(i,e,C),J8(i,n,d),f=!0)}if(f){if(i.lineWidth=t,l&&(i.globalCompositeOperation=a),i.strokeStyle=B2(c,u),h.enable){const C=b2(h.color);C&&(i.shadowBlur=h.blur,i.shadowColor=B2(C))}i.stroke()}}function ju(i,t,e,n,o,s,r,l){Xr(i,t,e,n),o&&(i.globalCompositeOperation=s),i.fillStyle=B2(r,l),i.fill()}function Nu(i){return i.sort((t,e)=>t-e),i.join("_")}function d3(i,t){const e=Nu(i.map(o=>o.id));let n=t.get(e);return n===void 0&&(n=d1(),t.set(e,n)),n}class Bu{constructor(t){this.container=t,this._freqs={links:new Map,triangles:new Map}}drawParticle(t,e){var n;const o=e.options;if(!e.links||e.links.length<=0)return;const s=e.links.filter(r=>o.links&&this.getLinkFrequency(e,r.destination)<=o.links.frequency);for(const r of s)this.drawTriangles(o,e,r,s),r.opacity>0&&((n=e.retina.linksWidth)!==null&&n!==void 0?n:0)>0&&this.drawLinkLine(e,r)}async init(){this._freqs.links=new Map,this._freqs.triangles=new Map}particleCreated(t){if(t.links=[],!t.options.links)return;const e=this.container.retina.pixelRatio;t.retina.linksDistance=t.options.links.distance*e,t.retina.linksWidth=t.options.links.width*e}particleDestroyed(t){t.links=[]}drawLinkLine(t,e){const n=this.container,o=n.actualOptions,s=e.destination,r=t.getPosition(),l=s.getPosition();let a=e.opacity;n.canvas.draw(c=>{var u,h,f;if(!t.options.links)return;let C;const d=(u=t.options.twinkle)===null||u===void 0?void 0:u.lines;if(d!=null&&d.enable){const g=d.frequency,_=b2(d.color);d1()<g&&_&&(C=_,a=K(d.opacity))}if(!C){const g=t.options.links,_=(g==null?void 0:g.id)!==void 0?n.particles.linksColors.get(g.id):n.particles.linksColor;C=G4(t,s,_)}if(!C)return;const p=(h=t.retina.linksWidth)!==null&&h!==void 0?h:0,v=(f=t.retina.linksDistance)!==null&&f!==void 0?f:0;Fu(c,p,r,l,v,n.canvas.size,t.options.links.warp,o.backgroundMask.enable,o.backgroundMask.composite,C,a,t.options.links.shadow)})}drawLinkTriangle(t,e,n){var o;if(!t.options.links)return;const s=this.container,r=s.actualOptions,l=e.destination,a=n.destination,c=t.options.links.triangles,u=(o=c.opacity)!==null&&o!==void 0?o:(e.opacity+n.opacity)/2;u<=0||s.canvas.draw(h=>{var f;const C=t.getPosition(),d=l.getPosition(),p=a.getPosition(),v=(f=t.retina.linksDistance)!==null&&f!==void 0?f:0;if(X1(C,d)>v||X1(p,d)>v||X1(p,C)>v)return;let g=b2(c.color);if(!g){const _=t.options.links,b=(_==null?void 0:_.id)!==void 0?s.particles.linksColors.get(_.id):s.particles.linksColor;g=G4(t,l,b)}g&&ju(h,C,d,p,r.backgroundMask.enable,r.backgroundMask.composite,g,u)})}drawTriangles(t,e,n,o){var s,r,l;const a=n.destination;if(!(!((s=t.links)===null||s===void 0)&&s.triangles.enable&&(!((r=a.options.links)===null||r===void 0)&&r.triangles.enable)))return;const c=(l=a.links)===null||l===void 0?void 0:l.filter(u=>{const h=this.getLinkFrequency(a,u.destination);return a.options.links&&h<=a.options.links.frequency&&o.findIndex(f=>f.destination===u.destination)>=0});if(c!=null&&c.length)for(const u of c){const h=u.destination;this.getTriangleFrequency(e,a,h)>t.links.triangles.frequency||this.drawLinkTriangle(e,n,u)}}getLinkFrequency(t,e){return d3([t,e],this._freqs.links)}getTriangleFrequency(t,e,n){return d3([t,e,n],this._freqs.triangles)}}class Hu{constructor(){this.id="links"}getPlugin(t){return new Bu(t)}loadOptions(){}needsPlugin(){return!0}}async function Vu(i){const t=new Hu;await i.addPlugin(t)}async function qu(i){await $u(i),await Vu(i)}class F7{draw(t,e,n){const o=this.getCenter(e,n),s=this.getSidesData(e,n),r=s.count.numerator*s.count.denominator,l=s.count.numerator/s.count.denominator,a=180*(l-2)/l,c=Math.PI-Math.PI*a/180;if(t){t.beginPath(),t.translate(o.x,o.y),t.moveTo(0,0);for(let u=0;u<r;u++)t.lineTo(s.length,0),t.translate(s.length,0),t.rotate(c)}}getSidesCount(t){var e,n;const o=t.shapeData;return Math.round(K((n=(e=o==null?void 0:o.sides)!==null&&e!==void 0?e:o==null?void 0:o.nb_sides)!==null&&n!==void 0?n:5))}}class Uu extends F7{getCenter(t,e){return{x:-e/(t.sides/3.5),y:-e/(2.66/3.5)}}getSidesData(t,e){const n=t.sides;return{count:{denominator:1,numerator:n},length:e*2.66/(n/3)}}}class Wu extends F7{getCenter(t,e){return{x:-e,y:e/1.66}}getSidesCount(){return 3}getSidesData(t,e){return{count:{denominator:2,numerator:3},length:e*2}}}async function Gu(i){await i.addShape("polygon",new Uu)}async function Ku(i){await i.addShape("triangle",new Wu)}async function Yu(i){await Gu(i),await Ku(i)}function Xu(i,t,e,n){switch(i.options.size.animation.destroy){case"max":t>=n&&i.destroy();break;case"min":t<=e&&i.destroy();break}}function Ju(i,t){var e,n,o,s,r;const l=((e=i.size.velocity)!==null&&e!==void 0?e:0)*t.factor,a=i.size.min,c=i.size.max,u=(n=i.size.decay)!==null&&n!==void 0?n:1;if(!(i.destroyed||!i.size.enable||((o=i.size.maxLoops)!==null&&o!==void 0?o:0)>0&&((s=i.size.loops)!==null&&s!==void 0?s:0)>((r=i.size.maxLoops)!==null&&r!==void 0?r:0))){switch(i.size.status){case"increasing":i.size.value>=c?(i.size.status="decreasing",i.size.loops||(i.size.loops=0),i.size.loops++):i.size.value+=l;break;case"decreasing":i.size.value<=a?(i.size.status="increasing",i.size.loops||(i.size.loops=0),i.size.loops++):i.size.value-=l}i.size.velocity&&u!==1&&(i.size.velocity*=u),Xu(i,i.size.value,a,c),i.destroyed||(i.size.value=I2(i.size.value,a,c))}}class Qu{init(t){var e;const n=t.container,o=t.options.size,s=o.animation;s.enable&&(t.size.velocity=((e=t.retina.sizeAnimationSpeed)!==null&&e!==void 0?e:n.retina.sizeAnimationSpeed)/100*n.retina.reduceFactor,s.sync||(t.size.velocity*=d1()))}isEnabled(t){var e,n,o,s;return!t.destroyed&&!t.spawning&&t.size.enable&&(((e=t.size.maxLoops)!==null&&e!==void 0?e:0)<=0||((n=t.size.maxLoops)!==null&&n!==void 0?n:0)>0&&((o=t.size.loops)!==null&&o!==void 0?o:0)<((s=t.size.maxLoops)!==null&&s!==void 0?s:0))}reset(t){t.size.loops=0}update(t,e){this.isEnabled(t)&&Ju(t,e)}}async function th(i){await i.addParticleUpdater("size",()=>new Qu)}const H6=Math.sqrt(2);class eh{draw(t,e,n){t.rect(-n/H6,-n/H6,n*2/H6,n*2/H6)}getSidesCount(){return 4}}async function ih(i){const t=new eh;await i.addShape(["edge","square"],t)}class nh{draw(t,e,n){var o;const s=e.sides,r=(o=e.starInset)!==null&&o!==void 0?o:2;t.moveTo(0,0-n);for(let l=0;l<s;l++)t.rotate(Math.PI/s),t.lineTo(0,0-n*r),t.rotate(Math.PI/s),t.lineTo(0,0-n)}getSidesCount(t){var e,n;const o=t.shapeData;return Math.round(K((n=(e=o==null?void 0:o.sides)!==null&&e!==void 0?e:o==null?void 0:o.nb_sides)!==null&&n!==void 0?n:5))}particleInit(t,e){var n;const o=e.shapeData,s=K((n=o==null?void 0:o.inset)!==null&&n!==void 0?n:2);e.starInset=s}}async function oh(i){await i.addShape("star",new nh)}function m4(i,t,e,n,o){var s,r;const l=t;if(!l||!l.enable||l.loops!==void 0&&l.maxLoops!==void 0&&l.maxLoops>0&&l.loops>=l.maxLoops)return;const a=Y1(e.offset),c=((s=t.velocity)!==null&&s!==void 0?s:0)*i.factor+a*3.6,u=(r=t.decay)!==null&&r!==void 0?r:1;!o||l.status==="increasing"?(l.value+=c,l.value>n&&(l.loops||(l.loops=0),l.loops++,o&&(l.status="decreasing",l.value-=l.value%n))):(l.value-=c,l.value<0&&(l.loops||(l.loops=0),l.loops++,l.status="increasing",l.value+=l.value)),l.velocity&&u!==1&&(l.velocity*=u),l.value>n&&(l.value%=n)}function sh(i,t){if(!i.strokeColor||!i.strokeAnimation)return;const e=i.strokeColor.h;e&&m4(t,e,i.strokeAnimation.h,360,!1);const n=i.strokeColor.s;n&&m4(t,n,i.strokeAnimation.s,100,!0);const o=i.strokeColor.l;o&&m4(t,o,i.strokeAnimation.l,100,!0)}class rh{constructor(t){this.container=t}init(t){var e,n,o;const s=this.container,r=_2(t.options.stroke,t.id,t.options.reduceDuplicates);t.strokeWidth=K(r.width)*s.retina.pixelRatio,t.strokeOpacity=K((e=r.opacity)!==null&&e!==void 0?e:1),t.strokeAnimation=(n=r.color)===null||n===void 0?void 0:n.animation;const l=(o=x5(r.color))!==null&&o!==void 0?o:t.getFillColor();l&&(t.strokeColor=P7(l,t.strokeAnimation,s.retina.reduceFactor))}isEnabled(t){var e,n,o;const s=t.strokeAnimation;return!t.destroyed&&!t.spawning&&!!s&&(((e=t.strokeColor)===null||e===void 0?void 0:e.h.value)!==void 0&&t.strokeColor.h.enable||((n=t.strokeColor)===null||n===void 0?void 0:n.s.value)!==void 0&&t.strokeColor.s.enable||((o=t.strokeColor)===null||o===void 0?void 0:o.l.value)!==void 0&&t.strokeColor.l.enable)}update(t,e){this.isEnabled(t)&&sh(t,e)}}async function lh(i){await i.addParticleUpdater("strokeColor",t=>new rh(t))}const Y4=["text","character","char"];class ah{draw(t,e,n,o){var s,r,l;const a=e.shapeData;if(a===void 0)return;const c=a.value;if(c===void 0)return;const u=e;u.text===void 0&&(u.text=_2(c,e.randomIndexData));const h=u.text,f=(s=a.style)!==null&&s!==void 0?s:"",C=(r=a.weight)!==null&&r!==void 0?r:"400",d=Math.round(n)*2,p=(l=a.font)!==null&&l!==void 0?l:"Verdana",v=e.fill,g=h.length*n/2;t.font=`${f} ${C} ${d}px "${p}"`;const _={x:-g,y:n/2};t.globalAlpha=o,v?t.fillText(h,_.x,_.y):t.strokeText(h,_.x,_.y),t.globalAlpha=1}getSidesCount(){return 12}async init(t){const e=t.actualOptions;if(Y4.find(n=>I1(n,e.particles.shape.type))){const n=Y4.map(s=>e.particles.shape.options[s]).find(s=>!!s),o=[];T1(n,s=>{o.push(Vr(s.font,s.weight))}),await Promise.all(o)}}}async function ch(i){await i.addShape(Y4,new ah)}async function uh(i){await lc(i),await Lu(i),await pc(i),await yc(i),await wc(i),await Sc(i),await Ac(i),await $c(i),await Nc(i),await Vc(i),await Gc(i),await Xc(i),await ku(i),await Ou(i),await qu(i),await cc(i),await nu(i),await uu(i),await Yu(i),await ih(i),await oh(i),await ch(i),await au(i),await Cu(i),await th(i),await ec(i),await fc(i),await lh(i),await wu(i),await Ya(i)}class hh{constructor(){this.enable=!1,this.speed=0,this.decay=0,this.sync=!1}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.speed!==void 0&&(this.speed=l1(t.speed)),t.decay!==void 0&&(this.decay=l1(t.decay)),t.sync!==void 0&&(this.sync=t.sync))}}class fh extends M2{constructor(){super(),this.animation=new hh,this.direction="clockwise",this.enable=!1,this.value=0}load(t){super.load(t),t&&(this.animation.load(t.animation),t.direction!==void 0&&(this.direction=t.direction),t.enable!==void 0&&(this.enable=t.enable))}}function dh(i,t){var e,n;if(!i.tilt||!i.options.tilt)return;const o=i.options.tilt,s=o.animation,r=((e=i.tilt.velocity)!==null&&e!==void 0?e:0)*t.factor,l=2*Math.PI,a=(n=i.tilt.decay)!==null&&n!==void 0?n:1;if(s.enable){switch(i.tilt.status){case"increasing":i.tilt.value+=r,i.tilt.value>l&&(i.tilt.value-=l);break;case"decreasing":default:i.tilt.value-=r,i.tilt.value<0&&(i.tilt.value+=l);break}i.tilt.velocity&&a!==1&&(i.tilt.velocity*=a)}}class Ch{constructor(t){this.container=t}getTransformValues(t){var e;const n=((e=t.tilt)===null||e===void 0?void 0:e.enable)&&t.tilt;return{b:n?Math.cos(n.value)*n.cosDirection:void 0,c:n?Math.sin(n.value)*n.sinDirection:void 0}}init(t){var e;const n=t.options.tilt;if(!n)return;t.tilt={enable:n.enable,value:K(n.value)*Math.PI/180,sinDirection:d1()>=.5?1:-1,cosDirection:d1()>=.5?1:-1};let o=n.direction;switch(o==="random"&&(o=Math.floor(d1()*2)>0?"counter-clockwise":"clockwise"),o){case"counter-clockwise":case"counterClockwise":t.tilt.status="decreasing";break;case"clockwise":t.tilt.status="increasing";break}const s=(e=t.options.tilt)===null||e===void 0?void 0:e.animation;s!=null&&s.enable&&(t.tilt.decay=1-K(s.decay),t.tilt.velocity=K(s.speed)/360*this.container.retina.reduceFactor,s.sync||(t.tilt.velocity*=d1()))}isEnabled(t){var e;const n=(e=t.options.tilt)===null||e===void 0?void 0:e.animation;return!t.destroyed&&!t.spawning&&!!(n!=null&&n.enable)}loadOptions(t,...e){t.tilt||(t.tilt=new fh);for(const n of e)t.tilt.load(n==null?void 0:n.tilt)}update(t,e){this.isEnabled(t)&&dh(t,e)}}async function ph(i){await i.addParticleUpdater("tilt",t=>new Ch(t))}class C3{constructor(){this.enable=!1,this.frequency=.05,this.opacity=1}load(t){t&&(t.color!==void 0&&(this.color=N1.create(this.color,t.color)),t.enable!==void 0&&(this.enable=t.enable),t.frequency!==void 0&&(this.frequency=t.frequency),t.opacity!==void 0&&(this.opacity=l1(t.opacity)))}}class vh{constructor(){this.lines=new C3,this.particles=new C3}load(t){t&&(this.lines.load(t.lines),this.particles.load(t.particles))}}class mh{getColorStyles(t,e,n,o){const s=t.options,r=s.twinkle;if(!r)return{};const l=r.particles,a=l.enable&&d1()<l.frequency,c=t.options.zIndex,u=(1-t.zIndexFactor)**c.opacityRate,h=a?K(l.opacity)*u:o,f=x5(l.color),C=f?L8(f,h):void 0,d={},p=a&&C;return d.fill=p?C:void 0,d.stroke=p?C:void 0,d}init(){}isEnabled(t){const e=t.options,n=e.twinkle;return n?n.particles.enable:!1}loadOptions(t,...e){t.twinkle||(t.twinkle=new vh);for(const n of e)t.twinkle.load(n==null?void 0:n.twinkle)}update(){}}async function yh(i){await i.addParticleUpdater("twinkle",()=>new mh)}class gh{constructor(){this.angle=50,this.move=10}load(t){t&&(t.angle!==void 0&&(this.angle=l1(t.angle)),t.move!==void 0&&(this.move=l1(t.move)))}}class _h{constructor(){this.distance=5,this.enable=!1,this.speed=new gh}load(t){if(t&&(t.distance!==void 0&&(this.distance=l1(t.distance)),t.enable!==void 0&&(this.enable=t.enable),t.speed!==void 0))if(typeof t.speed=="number")this.speed.load({angle:t.speed});else{const e=t.speed;e.min!==void 0?this.speed.load({angle:e}):this.speed.load(t.speed)}}}function bh(i,t){var e;const n=i.options.wobble;if(!(n!=null&&n.enable)||!i.wobble)return;const o=i.wobble.angleSpeed*t.factor,s=i.wobble.moveSpeed*t.factor,r=s*(((e=i.retina.wobbleDistance)!==null&&e!==void 0?e:0)*t.factor)/(1e3/60),l=2*Math.PI;i.wobble.angle+=o,i.wobble.angle>l&&(i.wobble.angle-=l),i.position.x+=r*Math.cos(i.wobble.angle),i.position.y+=r*Math.abs(Math.sin(i.wobble.angle))}class wh{constructor(t){this.container=t}init(t){var e;const n=t.options.wobble;n!=null&&n.enable?t.wobble={angle:d1()*Math.PI*2,angleSpeed:K(n.speed.angle)/360,moveSpeed:K(n.speed.move)/10}:t.wobble={angle:0,angleSpeed:0,moveSpeed:0},t.retina.wobbleDistance=K((e=n==null?void 0:n.distance)!==null&&e!==void 0?e:0)*this.container.retina.pixelRatio}isEnabled(t){var e;return!t.destroyed&&!t.spawning&&!!(!((e=t.options.wobble)===null||e===void 0)&&e.enable)}loadOptions(t,...e){t.wobble||(t.wobble=new _h);for(const n of e)t.wobble.load(n==null?void 0:n.wobble)}update(t,e){this.isEnabled(t)&&bh(t,e)}}async function Mh(i){await i.addParticleUpdater("wobble",t=>new wh(t))}async function j7(i){await uh(i),await Ia(i),await Ka(i),await ph(i),await yh(i),await Mh(i),await qa(i),await ka(i),await Ba(i)}const Lh=120,xh={enable:!0,zIndex:-1},kh={number:{value:20,density:{enable:!0,value_area:800}},color:{value:"#fff"},shape:{type:"circle",stroke:{width:0,color:"#000000"},polygon:{nb_sides:5},image:{src:"img/github.svg",width:100,height:100}},opacity:{value:.1,random:!0,anim:{enable:!1,speed:1,opacity_min:.1,sync:!1}},size:{value:30,random:!0,anim:{enable:!1,speed:40,size_min:.1,sync:!1}},line_linked:{enable:!1,distance:500,color:"#ffffff",opacity:.4,width:2},move:{enable:!0,speed:6,direction:"top",random:!0,straight:!0,out_mode:"out",bounce:!1,attract:{enable:!1,rotateX:100,rotateY:100}}},zh={detect_on:"canvas",events:{onhover:{enable:!1,mode:"bubble"},onclick:{enable:!1,mode:"repulse"},resize:!0},modes:{grab:{distance:400,line_linked:{opacity:.5}},bubble:{distance:400,size:4,duration:.3,opacity:1,speed:3},repulse:{distance:200,duration:.4},push:{particles_nb:4},remove:{particles_nb:2}}},Eh=!0,Ph={fpsLimit:Lh,fullScreen:xh,particles:kh,interactivity:zh,retina_detect:Eh},N7=Le("load",()=>{const i=z1(0),t=m1(()=>i.value!==1);return{loadProgress:i,isLoad:t,changeLoadProgress:n=>i.value=n}}),Sh=[{id:5,name:"伏見 虹彩",name_en:"Kousai Fushimi",spell:"フシミ コウサイ",ability_zh:"眼科醫生",ability_jp:"眼科医",ability_en:"Ophthalmologist",birth:"08-31",birth_remark:"檢眼鏡發明人生日",star_sign_zh:"處女",star_sign_jp:"乙女",height:182,weight:63,chest:84,blood:"O",like_zh:"特色吉祥物",like_jp:"変なデザインのマスコット",unlike_zh:"拍攝入鏡",unlike_jp:"写真撮影",school_zh:"愛知第一醫科大附屬高中",school_jp:"愛知第一医学大付属高校",mantra_zh:`饒了我吧，
要上學已經夠麻煩了，還發生這種事……`,mantra_jp:`学校に行くだけでも超絶めんどくさいのに、
なぜこんなことになったんだ？
マジで勘弁してくれ……`,description_zh:`原本只是為了讓自己不要瞎掉才進行研究，但不知不覺就成為專家的眼科醫生。
無時無刻把累字寫在臉上的人，時常打哈欠，平時講話緩慢。
非常怕麻煩，但如果是醫療方面的事，他還是會盡力去做。
雖然覺得麻煩卻又想醫助他人，是個矛盾的人。
身上總是掛著各種奇怪的吉祥物，似乎是他的癖好。`,description_jp:`視力を保つために目の研究しただけなのに、なぜか知らないうちに眼科医となった。
いつも憔悴しきった顔つきであくびをしている。
非常にゆっくり喋っていて、面倒くさがりな一面もある。
ただし他人を治療するためなら面倒くさくても精一杯やりたいと思ってしまう。そんな矛盾を抱えてる。
服についてる変なデザインのマスコットはどうやら彼の趣味らしい。`,author:"地瓜探員",color:"#EE82EE",img_name:"fushimi",school_img:"fushimi",author_img:"hanji"},{id:6,name:"神戶 浩人",name_en:"Hiroto Kando",spell:"カンド ヒロト",ability_zh:"演員",ability_jp:"俳優",ability_en:"Actor",birth:"02-01",birth_remark:"好萊塢註冊地名日",star_sign:"水瓶",height:183,weight:74,chest:94,blood:"AB",like_zh:"植物／鄉間生活",like_jp:"植物／田舎生活",unlike_zh:"地鐵",unlike_jp:"地下鉄",school_zh:"永德高中",school_jp:"永徳高校",mantra_zh:`放心的，我們會平安無事的……
但真希望這裡能有個溫室呢。`,mantra_jp:`安心してください、僕達は必ず無事に脱出します。
……それはそうと、ここは些か
緑が足りないと思わないか？`,description_zh:`有著溫柔王子系形象的人氣演員，戲路很廣似乎沒有能難倒他的角色，年紀輕輕就得到了影視領域的各項獎項。
喜歡欣賞各種植物，有時候會速寫下來，無法接受沒有半個植物的密閉空間。
平時對於任何人都是真誠的對待，是個溫柔又善解人意的人。`,description_jp:`優しい王子様と言われている人気俳優。どんな役でも必ずうまく演じられていて、若いにも関わらず大小様々な賞をかっさらていく。
眺めるだけでは足りず、たまにスケッチもするぐらいの植物好き。緑のない密閉空間が苦手。
どんな相手でもうまく接することが出来て、物腰が柔らかく思いやりがある人種。`,author:"地瓜探員",color:"#B8860B",img_name:"kando",school_img:"kando",author_img:"hanji"},{id:7,name:"調部 教子",name_en:"Kyouko Shirabe",spell:"シラベ キョウコ",ability_zh:"練馬師",ability_jp:"調教師",ability_en:"Horse Trainer",birth:"09-16",birth_remark:"競馬日",star_sign_zh:"處女",star_sign_jp:"乙女",height:174,weight:66,chest:97,blood:"O",like_zh:"帥氣的大姊姊／打扮自己",like_jp:"かっこいいお姉さん／おしゃれをすること",unlike_zh:"胡蘿蔔／蝸牛料理",unlike_jp:"にんじん／エスカルゴ",school_zh:"聖華麗女子學園",school_jp:"聖ハルウララ女子学園",mantra_zh:`我是超高校級的練馬師，調部教子。
不管是多麼凶狠躁動的馬，只要讓我調教牠，
不用幾個月就能上賽場抱得大獎呢！`,mantra_jp:`わたくしは超高校級の調教師、調部教子よ。
どんな気性が荒い馬でもわたくしの手にかかれば、
ものの数ヶ月で試合に出られるような
コンディションにまで整えられるの！`,description_zh:`她訓練的馬匹經常在大大小小的賽馬指標性賽事中獲獎，甚至連業界老手也說只要下注她的馬絕對不會賠錢。
雖然喜歡跟馬打交道，不過騎手少有女性這點讓她有點想轉職。
非常看重顏值，夢想是創一個只有女騎師的團隊。
家境十分富有，導致金錢觀與一般人相去甚遠，時常語出驚人。
為了能夠讓心儀的女孩子也能夠喜歡上自己，每個月花在化妝用品以及美容沙龍的費用相當可觀。`,description_jp:`彼女が訓練する馬がレースに出場するたびに専門家達必ず馬券を購入するほど、馬たちはいつも重賞レースの勝利を獲得する。
馬を訓練する仕事が好きだけど、仕事環境は女の人があまりいなくてかなりストレスが溜まってる。
かなりの面食いで、いつか女性の騎手だけのチームを作り上げようと思っている。
実家がお金持ちのせいで、常人と価値観がズレている。時々すごいことを喋り出すことも。
好きな女の子に気に入ってもらうために、毎月化粧品とエステサロンに莫大の金額をかけている。`,author:"Zoe",color:"#364482",img_name:"shirabe",school_img:"shirabe",author_img:"zoe"},{id:8,name:"堀坂 小衣里",name_en:"Koiri Horisaka",spell:"ホリサカ コイリ",ability_zh:"科學家",ability_jp:"サイエンティスト",ability_en:"Scientist",birth:"11-10",birth_remark:"世界科學日",star_sign_zh:"天蠍",star_sign_jp:"蠍",height:154,weight:45,chest:75,blood:"A",like_zh:"魔法少女",like_jp:"魔法少女",unlike_zh:"沒有夢想／兔子和貓咪的奇美拉",unlike_jp:"夢がない人／うさぎとネコのキメラ",school_zh:"市川高中",school_jp:"市川高校",mantra_zh:`魔法就是世界的奇蹟，
而我們的魔法就是科學喔！`,mantra_jp:`わたしたちサイエンティストが作り出した技術は
魔法そのもの！そしてその魔法を使ったら、
かならずキセキが起こるの！`,description_zh:`研發出了能夠讓小型動物隱形和讓物體快速結冰的液體的天才科學家。
開朗樂觀又有活力的女孩，做著科學相關的事卻要扯上一兩句魔法，也許科學對她來說就是這個世界的魔法吧。
開朗過頭以致於不太會察言觀色。`,description_jp:`小さい動物のステルス化技術と物体を速やかに凍り付く液体を開発した天才科学者。
元気で自由奔放な女の子。
科学分野のお仕事をしているのにも関わらず、常に「魔法」という言葉を口にすることから、もしかして彼女にとっての科学は魔法そのものかもしれない。
陽気すぎて時々空気が読めない。`,author:"地瓜探員",color:"#FFBF00",img_name:"horisaka",school_img:"horisaka",author_img:"hanji"},{id:9,name:"観月 星知",name_en:"Cecil Kangetsu",spell:"カンゲツ セシル",ability_zh:"天文學家",ability_jp:"天文学者",ability_en:"Astronomer",birth:"04-29",birth_remark:"2023年天文の日",star_sign_zh:"金牛",star_sign_jp:"牡牛",height:164,weight:51,chest:79,blood:"A",like_zh:"集郵／寫日記",like_jp:"切手集め／日記をつけること",unlike_zh:"章魚／自己的運氣",unlike_jp:"タコ／自分の運",school_zh:"銀河第一高中",school_jp:"銀河第一高校",mantra_zh:`啊，對不起！
我又自顧自的講起宇宙的奧秘了……`,mantra_jp:`あ、ごめんなさい！
わたしまた宇宙の話に
夢中になっちゃいました……`,description_zh:`美國與日本的混血兒。
也許是因為一天24小時都想著天文觀察，所以不擅長與人交流。
只要有人提到宇宙有關的事物，她就會開啟話匣子，
久而久之，大家看到她發作也習以為常了。`,description_jp:`アメリカと日本のハーフ。
あまり人付き合いが得意じゃない。
四六時中天体観測の事を考えてる。
宇宙マニアで、つい熱く語る時は周りから「まだ始まった」といった感じで見られる。`,author:"Zoe",color:"#302047",img_name:"kangetsu",school_img:"kangetsu",author_img:"zoe"},{id:10,name_zh:"寺園 菜菜子",name_jp:"寺園 菜々子",name_en:"Nanako Terazono",spell:"テラゾノ ナナコ",ability_zh:"營養師",ability_jp:"栄養士",ability_en:"Dietitian",birth:"04-22",birth_remark:"世界地球日",star_sign:"金牛",height:162,weight:57,chest:93,blood:"B",like_zh:"黑巧克力",like_jp:"ブラックチョコレート",unlike_zh:"民俗療法／欺負弱小",unlike_jp:"民間療法／弱い者いじめ",school_zh:"友平學院",school_jp:"友平学院",mantra_zh:`我是超高校級的營養師，
如果有需要飲食方面的諮詢
我都很樂意協助的……！`,mantra_jp:`私は超高校級の栄養士。
もし飲食分野にわからないことがあったら、
気楽に聞いてくださいね……！`,description_zh:`保健營養界的新星權威營養師，目前推出的營養菜單深受國內各大學校的信賴。
熱衷於慈善活動，市內慈善機構提供的免費餐點時常經由她監督。
看似文靜卻努力與他人對話的女孩，偶爾能從話語中感受到她其實缺乏自信。
很喜歡分享關於健康飲食的知識。
有點不太擅長交朋友，所以有時候會有點懷疑自己是否能有良好的人際關係。`,description_jp:`保健栄養学の超新星、最近丹精を込めて作ったメニューは国内各中小学校に採用され、かなりの好評だったらしい。
熱心でボランティアの活動をしていて、市内にそういったイベントが挙げてる時に出した食事は全て彼女の監督下にある。
無口そうに見えて、実はかなり頑張って他人と交流しようとしてる。ただし言葉の端々から自信なさげの様子が伺える。
栄養学に関する知識を少しでも広めるよう尽力している。
友達を作るのが苦手で、たまに自分の人間関係について心配してる。`,author:"地瓜探員",color:"#FF8099",img_name:"terazono",school_img:"terazono_kiku",author_img:"hanji"},{id:11,name:"佐垣 登",name_en:"Noboru Sagaki",spell:"サガキ ノボル",ability_zh:"司機",ability_jp:"運転士",ability_en:"Driver",birth:"01-29",birth_remark:"第一輛汽油汽車誕生日",star_sign:"水瓶",height:179,weight:68,chest:89,blood:"O",like_zh:"綠茶",like_jp:"緑茶",unlike_zh:"爆胎",unlike_jp:"パンク",school_zh:"車田工業高中",school_jp:"車田工業高校",local:"愛知",mantra_zh:"……這裡沒有車嗎？",mantra_jp:"……ここに車はないのか？",description_zh:`憧憬成為某大型公司高層的御用司機的父親，所以從小也立志成為一名優秀的司機。熟悉汽車的各種知識，什麼車有什麼優缺點都能倒背如流，就連最新的型錄都難不倒他。
從計程車到加長禮車都開過，近期還通過了電車駕駛執照，在畢業後就會是一位最年輕的電車駕駛員。
普通時不會有太多的表情反應，關於車的事可以聊很多，但除此之外的回應會非常簡潔，不喜歡廢話，但是遇到不合理的事會吐槽。`,description_jp:`彼の父親は大型会社の偉い人の専属運転手、そのため彼は小さな頃から父親のことを憧れていて、優秀な運転手になることを夢見てる。
小さい頃から車のあらゆる知識を学んでて、車の良し悪しはスラスラと述べられる上、最新のカタログに載ってるようなものも手に取るようにわかる。
車の免許を一通り取ったので、タクシーから結婚式に使うリムジンだけでなく、さらに卒業時とともに内定が決めた会社に就職すれば最年少電車運転士になれる。
車以外のことならリアクションが薄く、返答も簡潔。でも明らかにおかしい場合はツッコミ入れる。`,author:"ヤジルシ",color:"#25491D",img_name:"sagaki",school_img:"sagaki",author_img:"yajirusi"},{id:12,name:"江成 錦司",name_en:"Kinji Enari",spell:"エナリ キンジ",ability_zh:"黑道",ability_jp:"ヤクザ",ability_en:"Yakuza",birth:"01-11",birth_remark:"惡靈古堡4發售日",star_sign:"水瓶",height:183,weight:80,chest:97,blood:"AB",like_zh:"模型槍",like_jp:"モデルガン",unlike_zh:"視力檢查",unlike_jp:"視力検査",school_zh:"釜欠綜合學園",school_jp:"釜欠総合学園",local:"横浜",mantra_zh:`討債是吧，
包在我身上！
十倍百倍都能幫你討回來！`,mantra_jp:`借金取りか、
それなら俺に任せろ！
十倍百倍でも取り返して見せるぜ！`,description_zh:`身在某地區非常有名黑道集團裡，並且是組裡老大的左右手。
由於年紀小且不會擺架子，所以組裡的小弟們都挺喜愛他的，對於經營黑道的事物特別有天賦，沒有他討不到的債。
習慣將武器藏在大衣底下，把大衣拉開可以看到滿滿的兇器與工具。
行為舉止常常會讓人發笑，但也因為帶著墨鏡，所以也不知道他是刻意營造還是本來就這樣，帶有神祕感跟危險的人物。從來沒有人看過他墨鏡下的樣貌。`,description_jp:`どこかのヤクザ集団に所属し、ボスの右手を担ってる。
若いせいかあまり威張ることなく、組の下っ端たちに好かれている。
組がやっているきな臭い商売や取り立てに関してかなり才能がある。
大量の武器と工具をトレンチコートの下に忍ばせている。
サングラスを付けているせいか、彼が本気なのかわざとこういう役を演じてるのかの見分けがつかない、まさにミステリアスと絶妙な危うさを兼ね備えた人物と言える。
サングラスの下の本当の姿は誰にも知らない。`,author:"ヤジルシ",color:"#424242",img_name:"enari",school_img:"enari",author_img:"yajirusi"},{id:13,name_zh:"涼風 日和",name_jp:"涼風 ひより",name_en:"Hiyori Suzukaze",spell:"スズカゼ ヒヨリ",ability_zh:"藝人",ability_jp:"芸能人",ability_en:"Entertainer",birth:"08-07",birth_remark:"野比大雄生日",star_sign:"獅子",height:147,weight:40,chest:65,blood:"O",like_zh:"蒐集玩具／戰鬥陀螺",like_jp:"おもちゃ集め／爆転シュートベイブレード",unlike_zh:"數學課",unlike_jp:"数学の授業",school_zh:"櫻坂高中",school_jp:"桜坂高校",mantra_zh:`我是天南學園小學部五年級的涼風日和～
請多指教喔！`,mantra_jp:`ぼくは天南学園小学部五年生の涼風ひより～
よろしくね！`,description_zh:`從外表到行為舉止都像個小學五年級的小朋友，常在綜藝節目的單元劇中反串小學生，被稱為「間諜小學生」。或許是天生就注定要當藝人的料，一舉一動都充滿笑果，有不少阿嬤粉絲。
明明年紀一樣卻總是把同學當成哥哥姐姐，遇到喜歡小孩的同學還會因此嚐到不少甜頭。
最近的煩惱是不知道為什麼綁好的鞋帶總是馬上就鬆開了，只好換穿魔鬼氈布鞋。`,description_jp:`外見から立ち振舞いまでが小学五年生の子供。よくバラエティ番組にて小学生役を演じるせいで、「スパイ小学生」の異名を持つ。
生まれながらエンターテイナーとしての才能があって、笑わせることを得意としている。そのためお年寄りのファンが多数。
クラスメイトとほとんど歳変わらないのに兄さん姉さん扱いで、たまに子供好きな人に出会うと良い思いをする、それで味が占めた模様。
最近の悩みは靴紐がよく解けてしまうこと。それを解決すべくマジックテープ式のスニーカーに買い替えた。`,author:"いもまる",color:"#FF8438",img_name:"hiyori",school_img:"hiyori",author_img:"imomaru"},{id:14,name:"節見 澄子",name_en:"Sumiko Fushimi",spell:"フシミ スミコ",ability_zh:"幸運",ability_jp:"幸運",ability_en:"Lucky Student",birth:"12-21",birth_remark:"第一屆Comiket開幕日",star_sign:"射手",height:162,weight:51,chest:76,blood:"AB",like_zh:"很會還原角色的Coser",like_jp:"キャラクターをうまく落とし込むコスプレイヤー",unlike_zh:"只會賣肉賺流量的Coser",unlike_jp:"露出度で人の目を引くコスプレイヤー",school_zh:"金森女子學院",school_jp:"金森女子学院",mantra_zh:`我怎樣都無所謂……
只要我的CP快樂就好，嘿嘿……`,mantra_jp:`ワイの推しCPが幸せになってくれれば
ワイはどうなっても構わんから、
だから、う、うふっ、ふふふ……`,description_zh:`興趣是參加各種大小場次追Coser和偷偷幫同學湊CP，並躲在角落默默守護這個「戀情」。
完全不在乎別人的眼光，每天都很快樂地活在自己的小世界裡，但就是因為這樣而在網路跟現實中都惹出許多麻煩。看到喜歡的Coser會忘我地嘿嘿笑，是個讓肥宅都卻步的癡女。`,description_jp:`各種同人イベントに参加し、好きなコスプレイヤーを舐め回すように見るのが好き。
それ以外の趣味はクラスの女子たちをカップリングし、その「恋の行く末」を見守ること。
他人の視線を気にせずに好き勝手やってるせいで、ネットにもリアルにも腫れ物扱いされている。
推しコスプレイヤーを目にするとニヤニヤしながら奇声を発することから、痴女と称しても過言ではない。まさにキモオタすら裸足で逃げ出すレベル。`,author:"いもまる",color:"#9BADBD",img_name:"fushiko",school_img:"fushiko",author_img:"imomaru"},{id:15,name:"荒見 墨入",name_en:"Sumii Arami",spell:"アラミ スミイ",ability_zh:"刺青藝術家",ability_jp:"タトゥーアーティスト",ability_en:"Tattoo Artist",birth:"12-08",birth_remark:"史上第一部紋身機器專利日",star_sign:"射手",height:189,weight:89,chest:111,blood:"O",like_zh:"文具店的美術用品區",like_jp:"文房具屋の美術用品コーナー",unlike_zh:"交友軟體",unlike_jp:"出会い系サイト",school_zh:"秋庭學院",school_jp:"秋庭アカデミー",local:"香川",mantra_zh:`正是因為這種非常時期，
所以有什麼事需要商量都可以找我哦。`,mantra_jp:`こんな時期だからこそ、
一人で抱え込まない方がいいですよ。`,description_zh:`逐漸嶄露頭角的新興刺青藝術家，專門用來放作品的社群帳號超過100萬人追蹤，預約名額更是常常在開放的一分鐘內就額滿，據說比演唱會的門票還難搶。
關於刺青的手藝相當不錯，且只有客戶提不出來的要求，沒有他做不到的刺青。在某些緣由下，如果是為了遮住大面積的疤痕而想要刺青的人，會免費為對方刺青。
外表看起來十分輕佻，但其實是個老好人，看到難過沮喪的人會主動過去安慰對方。`,description_jp:`徐々に頭角を現しているタトゥーアーティスト。
入れ墨の作品を置くSNSアカウントのフォロワーが100万人超え。予約も開始する1分以内で満員になって、入手難易度はコンサートのチケットより難しいと言われている。
タトゥーの技術も相当なものらしく、デザインができないような柄がないらしい。怪我した後の瘢痕を隠すための入れ墨なら、無料で受ける事が多い。
軽そうに見えるが、しんどそうな人を見ると自分から相手を慰めに行くようなただのお人好し。`,author:"ヤジルシ",color:"#5B3E19",img_name:"arami",school_img:"arami",author_img:"yajirusi"},{id:0,name:"十六夜 魔除",name_en:"Mayo Izayoi",spell:"イザヨイ マヨ",ability_zh:"驅魔師",ability_jp:"エクソシスト",ability_en:"Exorcist",birth:"02-03",birth_remark:"節分，取常會喊「鬼出去，福進來」之義",star_sign:"水瓶",height:159,weight:46,chest:75,blood:"AB",like_zh:"都市傳說／多米諾骨牌",like_jp:"都市伝説／ドミノ",unlike_zh:"鯊魚／神棍",unlike_jp:"サメ／胡散臭い同業者",school_zh:"伽藍大附屬四象高中",school_jp:"伽藍大附属四象高校",mantra_zh:`如果你要我們自相殘殺的話
那很抱歉，
我們絕對不會照你說的做的！`,mantra_jp:`コロシアイをさせようとするならすまんが、
俺たちは絶対に
あんたの思い通りにならないから！`,description_zh:`本作的主角。
從小就有陰陽眼，但是「看的到」這件事讓他常被周遭排擠，直到遇到了師父，讓他覺得自己的靈異體質也能夠幫助別人，從此踏進驅魔人之路。
驅魔全靠蠻力，用拳頭KO幽靈。`,description_jp:`本作の主人公。
物心付いた頃から「見える」せいでよく周りにハブられる。
それから師匠に出会ったことがきっかけで、自分のような体質でも他人の役に立てると思い、エクソシストの道へ進んだ。
実はかなりの脳筋、幽霊は殴れれば怖くない。`,author:"Zoe",color:"#AD327A",img_name:"izayoi",school_img:"izayoi",author_img:"zoe"},{id:1,name:"菊 諭司",name_en:"Satoshi Kiku",spell:"キク サトシ",ability_zh:"神父",ability_jp:"聖職者",ability_en:"Priest",birth:"10-01",birth_remark:"耶穌實際上的生日",star_sign:"天秤",height:193,weight:82,chest:92,blood:"A",like_zh:"閱讀／親手做的料理",like_jp:"読書／手作り料理",unlike_zh:"值班",unlike_jp:"残業",school_zh:"友平學院",school_jp:"友平学院",mantra_zh:`我叫做菊諭司，是超高校級的神父。
如果有什麼需要幫助的話，請告訴我哦。`,mantra_jp:`私は菊諭司。超高校級の聖職者やってます。
もし何か困ったことがあったら、
ぜひ私に言ってくださいね。`,description_zh:`當地有名的教會神父，因為口條很好能帶給信徒安心感，所以總是有不少人前來尋求協助或告解。
也因為性格溫和、一直帶著笑容，深受唱詩班的小女孩喜愛，甚至時常被告白。本人對此十分困擾。
雖然任職神父，不過其實對於每天大量來告解的人潮感到有些頭痛，討厭長時間值班的他希望能放個長假。`,description_jp:`地方で結構有名な聖職者。
的確なことを言える上に気遣いができて、彼にアドバイスを求めてる人が後を絶たない。
物腰が柔らかく、いつも優しそうに微笑んでるため、聖歌隊の小さな女の子にたちに好かれている。
告白されることもしばしばあって、本人はそれについてかなり困ってるらしい。
実を言うと毎日告解にくる大勢な人に頭を抱えている。あまり残業が好きじゃない彼は長期休暇を望んでいる。`,author:"Zoe",color:"#33594C",img_name:"kiku",school_img:"terazono_kiku",author_img:"zoe"},{id:2,name:"八尾井 陸",name_en:"Riku Yaoi",spell:"ヤオイ リク",ability_zh:"甜點師",ability_jp:"パティシエ",ability_en:"Pastry Chef",birth:"08-01",birth_remark:"801",star_sign:"獅子",height:186,weight:75,chest:92,blood:"B",like_zh:"巧克力",like_jp:"チョコレート",unlike_zh:"傳統",unlike_jp:"伝統",school_zh:"天野製菓專門學校",school_jp:"天野製菓専門学校",mantra_zh:`你真的對我一點興趣都沒有嗎？
要不要再仔細想想看？`,mantra_jp:`本当に僕に興味ない？
もっとじっくりと僕の顔を見て決めない？`,description_zh:`擅長製作造型華麗的各種甜點，訂單通常要提早一年預訂。
因為長相的關係有不少女粉絲，但因為很少和女性往來因此外界都在懷疑他是不是同性戀，本人並沒有多做解釋因為他就是。
都是看臉在喜歡人，並非覺得個性不重要，而是會把看上的人變成自己喜歡的形狀。`,description_jp:`華やかなデザートを作るのが得意としていて、予定は一年先まで埋まってる。
外見が良いため、女性のファンが多数いるが、女性と一緒にいる場面の目撃情報はあまりにも少ないため、周りの人からもしかしてゲイなんじゃないかと疑われている。
そして彼も別に誤解を解きたいと思わない、なぜならそのゴシップはまさしく真実そのもの。
かなりの面食いで、あまり相手の性格のことを気にしていない。なんでかというと彼は気に入った子を自分の好みにするのが得意だから。`,author:"いもまる",color:"#D4C379",img_name:"yaoi",school_img:"yaoi",author_img:"imomaru"},{id:3,name:"瀨戶 楠理",name_en:"Kusuri Seto",spell:"セト クスリ",ability_zh:"藥師",ability_jp:"薬剤師",ability_en:"Pharmacist",birth:"04-07",birth_remark:"世界衛生日",star_sign:"牡羊",height:173,weight:61,chest:84,blood:"A",like_zh:"冷氣房",like_jp:"エアコンをつけてる空間",unlike_zh:"老人傳的八卦",unlike_jp:"お年寄りの眉唾話",school_zh:"冰室第一高中",school_jp:"氷室第一高校",mantra_zh:`……有什麼事嗎？
沒事的話我要走了。`,mantra_jp:`……何か用？
ないなら私は行きますよ。`,description_zh:`原本家人期望她以醫生的身份繼承家裡的診所，但因為不想面對在診間哭鬧的小孩，她轉而攻讀藥學。
和外表不一樣的是，其實是話少的室內派。不擅長應付話多的人，總是冷漠以對想將人打發走。
因為不想被陌生人搭話才刻意打扮成有點壞壞的樣子，但似乎沒什麼用。`,description_jp:`家族は彼女が医者として家のクリニックを継ぐことを望んでるが、彼女があまりにも子供への対応が苦手なため、代案の薬学の勉強に勤しんだ。
派手な見た目と違って、実は無口のインドア派。
騒がしい人が苦手で、そういうのに出会ったらわざと冷たくするか、社交辞令で話を終わらせたがる。
知らない人に声かけられたくないためわざと近寄りがたい見た目にしたのに、あまり効果がなさそうだ。`,author:"いもまる",color:"#806D9C",img_name:"seto",school_img:"seto",author_img:"imomaru"},{id:4,name:"須屋 民兎",name_en:"Minto Suya",spell:"スヤ ミント",ability_zh:"睡眠專家",ability_jp:"睡眠学者",ability_en:"Sleep Therapist",birth:"12-20",birth_remark:"格林童話出版日",star_sign:"射手",height:153,weight:51,chest:89,blood:"A",like_zh:"毛茸茸的玩偶",like_jp:"モフモフのぬいぐるみ",unlike_zh:"鼾聲",unlike_jp:"いびき",school_zh:"晴韮女子高中",school_jp:"晴韮女子高校",local:"京都",mantra_zh:`那、那個、
我是超高校級的睡眠專家的須屋民兎！
請、請多多指教了！`,mantra_jp:`あ、あの、
わたしは超高校級の睡眠学家の須屋民兎ですぅ！
よ、よろしくお願いします！`,description_zh:`各種人轉傳而慢慢紅起來的睡眠專家，不管是什麼睡眠雜症，只要看過一次對方的睡眠姿勢後，就會用各種天馬行空的方法教對方怎麼安穩入睡，並且都非常有效。但由於方法太過匪夷所思，一時期成為了各種奇怪的偏方謠言，本人對此十分困擾，據他說法每個人適用的方法都不同，隨便用會沒有效果的。
時常都保持著一種無所適從表情的少女，有著不管在什麼環境下都能入睡的體質，可能因為這樣所以會穿著睡衣就外出。`,description_jp:`口コミで徐々に人気を獲得していく睡眠学者。
どんな睡眠に関する問題でも相手の横になる姿を目にすると解決法がわってしまう。
その方法は少々変わってるが、何故か効き目がある。
そのため一時期変な民間療法として認知されたことに本人が大変困惑してる。
彼女の言い分では一人ひとりが適応する方法が違って、適当にやるとかえって逆効果になるということ。
いつも周りから浮いてる少女。どんな環境下に身を置かれてもすぐさま寝れるせいで、たまにパジャマのまま外出する癖がついてる。`,author:"ヤジルシ",color:"#6DBCD9",img_name:"suya",school_img:"suya",author_img:"yajirusi"}],S5=Le("lang",()=>{const i=Er(),t=zr(),e=z1("jp"),n="10mins_lang",o=(s,r)=>{e.value=s,localStorage.setItem(n,s),t.push({name:i.name??"index",query:{lang:s}})};return O2(()=>i.name,()=>{const s=localStorage.getItem(n),r=i.query.lang==="zh"?"zh":"jp";o(r??s??"jp")},{immediate:!0}),{lang:e,langKey:n,changeLang:o}}),x1=(i,t)=>{const e=i.__vccOpts||i;for(const[n,o]of t)e[n]=o;return e},Oh={},Rh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},Ih=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 200.097656 187.71875 C 199.898438 187.472656 199.671875 187.246094 199.429688 187.042969 C 192.691406 182.105469 186.707031 176.21875 181.660156 169.566406 C 180.027344 167.480469 178.363281 165.414062 176.835938 163.253906 C 172.554688 157.199219 173.082031 150.769531 175.445312 143.769531 C 175.890625 144.613281 176.128906 145.15625 176.445312 145.648438 C 177.230469 147.042969 178.125 148.375 179.121094 149.628906 C 181.921875 152.753906 186.414062 152.328125 188.71875 148.828125 C 190.445312 146.195312 190.484375 143.28125 189.996094 140.34375 C 189.304688 136.214844 187.457031 132.546875 185.234375 129.054688 C 184.972656 128.695312 184.570312 128.464844 184.128906 128.417969 C 176.152344 128.417969 168.183594 128.417969 160.054688 128.417969 L 160.054688 186.625 C 157.238281 186.300781 154.5 185.476562 151.972656 184.1875 C 151.644531 183.894531 151.464844 183.46875 151.476562 183.027344 C 151.433594 180.566406 151.476562 178.109375 151.476562 175.652344 L 151.476562 128.5 L 138.402344 128.5 L 138.402344 185.925781 C 135.554688 185.175781 132.917969 184.519531 130.320312 183.730469 C 130.035156 183.648438 129.839844 182.816406 129.839844 182.328125 C 129.839844 174.625 129.839844 166.921875 129.839844 159.214844 L 129.839844 157.394531 L 128.15625 157.394531 C 121.464844 157.394531 114.769531 157.339844 108.078125 157.429688 C 106.078125 157.574219 104.085938 157.835938 102.113281 158.21875 C 107.914062 167.871094 115.679688 174.960938 124.054688 181.585938 C 123.851562 181.578125 123.652344 181.546875 123.453125 181.496094 C 112.292969 177.269531 102.421875 171.175781 94.496094 162.078125 C 89.992188 156.90625 91.050781 148.386719 93.28125 143.878906 C 93.941406 145.164062 94.527344 146.382812 95.1875 147.554688 C 95.851562 148.722656 96.691406 149.875 98.195312 150.207031 C 100.664062 150.753906 102.503906 149.777344 103.367188 147.386719 C 104.308594 144.578125 104.351562 141.550781 103.496094 138.714844 C 102.625 135.5 101.316406 132.398438 100.132812 129.273438 C 99.921875 128.835938 99.511719 128.53125 99.035156 128.449219 C 92.0625 128.449219 85.085938 128.449219 78.109375 128.449219 C 77.972656 128.480469 77.839844 128.535156 77.71875 128.605469 L 77.71875 185.566406 L 69.148438 183.625 L 69.148438 157.394531 L 67.511719 157.394531 C 60.75 157.394531 53.929688 157.332031 47.148438 157.429688 C 45.207031 157.582031 43.28125 157.855469 41.378906 158.25 C 47.175781 167.847656 54.898438 174.953125 63.714844 181.484375 C 63.359375 181.492188 63.003906 181.46875 62.648438 181.414062 C 52.449219 177.707031 43.210938 172.457031 35.675781 164.527344 C 30.78125 159.410156 29.441406 150.648438 32.605469 144.058594 C 33.296875 145.371094 33.90625 146.625 34.609375 147.808594 C 35.316406 148.992188 36.203125 150.054688 37.734375 150.242188 C 40.257812 150.566406 41.859375 149.636719 42.65625 147.246094 C 43.714844 144.023438 43.40625 140.746094 42.488281 137.601562 C 41.695312 134.796875 40.46875 132.121094 39.484375 129.355469 C 39.183594 128.539062 38.628906 128.386719 37.832031 128.386719 C 31.996094 128.386719 26.160156 128.386719 20.324219 128.386719 C 20.277344 128.386719 20.226562 128.386719 19.984375 128.3125 C 23.433594 124.417969 26.890625 120.722656 32.566406 120.511719 C 32.988281 120.511719 33.417969 120.511719 33.84375 120.511719 L 209.609375 120.511719 C 205.445312 125.046875 201.730469 129.78125 194.359375 128.1875 C 194.742188 128.980469 194.9375 129.378906 195.113281 129.773438 C 197.546875 134.835938 199.085938 140.117188 198.613281 145.785156 C 198.117188 151.683594 195.5625 156.390625 189.929688 158.929688 C 188.382812 159.507812 186.796875 159.972656 185.179688 160.324219 C 185.460938 161.074219 185.738281 161.824219 186.039062 162.574219 C 189.410156 171.371094 193.789062 179.601562 199.910156 186.835938 C 200.085938 187.101562 200.230469 187.386719 200.332031 187.6875 Z M 48.125 128.507812 C 51.023438 135.292969 52.945312 142.121094 50.917969 149.496094 L 69.003906 149.496094 L 69.003906 128.507812 Z M 129.71875 149.496094 L 129.71875 128.507812 L 108.820312 128.507812 C 111.789062 135.253906 113.605469 142.121094 111.652344 149.496094 Z M 129.71875 149.496094 "}),w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 67.035156 109.285156 C 67.035156 105.394531 69.671875 102.628906 73.40625 102.628906 C 77.140625 102.628906 80.015625 105.519531 80.039062 109.441406 C 80.0625 113.359375 77.394531 116.082031 73.652344 116.082031 C 69.914062 116.082031 67.050781 113.242188 67.035156 109.285156 Z M 67.035156 109.285156 "})],-1),Th=[Ih];function Zh(i,t){return Y(),i1("svg",Rh,Th)}const Ah=x1(Oh,[["render",Zh]]),Dh={},$h={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},Fh=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 179.585938 115.324219 C 179.132812 115.742188 178.726562 116.207031 178.367188 116.710938 C 176.503906 120.324219 174.121094 123.648438 171.292969 126.574219 C 170.984375 127 170.511719 127.277344 169.988281 127.339844 C 169.46875 127.40625 168.941406 127.253906 168.535156 126.917969 C 163.511719 123.996094 157.976562 122.519531 152.265625 121.605469 C 151.089844 121.417969 149.917969 121.207031 148.625 121 C 148.429688 121.746094 148.25 122.496094 148.082031 123.210938 C 145.941406 133.285156 139.535156 141.941406 130.515625 146.953125 C 130.046875 147.179688 129.523438 147.257812 129.011719 147.171875 C 127.222656 146.886719 126.640625 147.171875 125.796875 148.871094 C 125.578125 149.1875 125.25 149.414062 124.875 149.507812 C 123.160156 150.027344 121.449219 150.550781 119.699219 150.933594 C 118.902344 151.113281 118.648438 151.414062 118.683594 152.199219 C 118.789062 154.066406 118.863281 155.949219 118.863281 157.804688 C 118.800781 158.460938 118.671875 159.109375 118.472656 159.738281 C 118.679688 160.066406 118.828125 160.425781 118.910156 160.804688 C 119.140625 166.171875 119.351562 171.535156 119.511719 176.910156 C 119.523438 177.476562 119.292969 178.023438 118.878906 178.410156 C 117.121094 179.460938 117.03125 181.257812 116.519531 182.953125 C 117.339844 183.355469 118.074219 183.3125 118.535156 182.570312 C 118.910156 181.960938 119.074219 181.226562 119.496094 180.5625 C 119.871094 199.171875 123.25 217.25 128.507812 235.003906 C 125.863281 236.007812 100.242188 236.03125 97.15625 235.003906 C 102.664062 216.328125 106.214844 197.328125 106.367188 177.644531 C 106.605469 177.953125 106.964844 178.222656 107.0625 178.566406 C 107.113281 178.910156 107.328125 179.210938 107.640625 179.367188 C 107.949219 179.523438 108.320312 179.519531 108.625 179.355469 C 109 179.019531 109.183594 178.523438 109.113281 178.027344 C 108.917969 177.417969 108.523438 176.890625 107.996094 176.527344 C 107 176.050781 106.402344 175.011719 106.492188 173.914062 C 106.613281 169.625 106.660156 165.332031 106.742188 161.035156 C 106.742188 160.765625 106.742188 160.355469 106.855469 160.234375 C 108.039062 159.328125 107.671875 158.082031 107.335938 157.078125 C 106.875 155.597656 106.746094 154.03125 106.964844 152.492188 C 107.0625 151.578125 106.898438 151.121094 105.808594 150.886719 C 96.984375 149.175781 89.132812 144.207031 83.816406 136.96875 C 83.5625 136.625 83.335938 136.21875 83.066406 135.875 L 84.34375 135.394531 C 81.597656 133.832031 79.675781 131.144531 79.085938 128.042969 C 79.324219 128.125 79.492188 128.171875 79.640625 128.238281 C 79.886719 128.375 80.167969 128.425781 80.445312 128.386719 C 80.324219 127.953125 80.339844 127.375 80.0625 127.121094 C 79.785156 126.867188 79.257812 127.121094 78.558594 127.160156 L 76.914062 120.992188 L 69.71875 122.199219 L 71.492188 119.535156 C 66.136719 121.785156 61.109375 121.851562 56.265625 117.828125 C 58.445312 117.226562 57.894531 115.453125 58.464844 113.984375 C 56.8125 114.164062 56.152344 113.089844 55.378906 112.117188 C 55.023438 111.664062 54.546875 111.324219 54.003906 111.136719 C 53.171875 110.886719 52.652344 111.246094 52.667969 112.246094 C 52.683594 113.242188 52.894531 114.269531 51.625 115.191406 L 49.925781 112.710938 C 51.863281 111.34375 51.863281 111.34375 50.585938 109.777344 L 54.582031 105.507812 C 54.5 106.734375 54.6875 107.5 55.769531 107.671875 C 55.855469 108.011719 55.855469 108.367188 55.769531 108.707031 C 55.660156 109.023438 55.507812 109.328125 55.320312 109.605469 L 55.605469 109.90625 C 56.117188 109.683594 56.621094 109.433594 57.105469 109.15625 C 58.414062 108.28125 58.480469 108.292969 59.203125 109.628906 C 59.40625 109.960938 59.632812 110.277344 59.878906 110.582031 C 60.554688 109.734375 60.402344 109.082031 59.277344 107.761719 C 58.585938 106.953125 57.835938 106.203125 56.933594 105.242188 C 57.453125 105.378906 57.804688 105.460938 58.144531 105.566406 C 59.644531 106.03125 61.148438 106.457031 62.574219 106.992188 C 63.1875 107.289062 63.773438 107.632812 64.332031 108.015625 C 64.589844 108.152344 64.875 108.222656 65.167969 108.21875 C 65.792969 108.113281 66.425781 108.058594 67.058594 108.0625 C 69.132812 108.390625 71.199219 108.8125 73.347656 109.222656 C 72.59375 111.382812 71.429688 113.007812 69.058594 113.601562 C 68.351562 113.0625 68.433594 112.257812 68.667969 111.425781 C 68.800781 110.917969 69.222656 110.316406 68.375 110.0625 C 68.050781 109.925781 67.6875 109.933594 67.375 110.089844 C 67.058594 110.242188 66.828125 110.527344 66.742188 110.867188 C 66.640625 111.59375 66.726562 112.339844 67 113.023438 C 67.382812 113.949219 67.828125 114.851562 68.328125 115.722656 C 69.761719 115.722656 70.996094 115.683594 72.226562 115.722656 C 73.097656 115.722656 73.398438 115.390625 73.234375 114.574219 C 73.105469 113.921875 72.984375 113.269531 72.917969 112.925781 C 74.015625 112.355469 74.917969 111.871094 75.832031 111.425781 C 76.203125 111.199219 76.609375 111.035156 77.035156 110.933594 C 77.589844 110.851562 78.085938 111.007812 77.988281 111.765625 C 77.765625 112.980469 78.410156 114.191406 79.542969 114.6875 C 79.984375 114.851562 80.332031 115.203125 80.488281 115.644531 C 80.644531 116.085938 80.601562 116.574219 80.363281 116.980469 C 80.257812 117.324219 80.222656 117.6875 80.265625 118.046875 C 80.265625 119.542969 80.265625 121.042969 80.265625 122.542969 C 81.4375 122.625 82.097656 122.011719 82.066406 120.511719 C 82.015625 119.679688 81.921875 118.851562 81.78125 118.03125 C 81.730469 117.609375 81.667969 117.183594 81.625 116.792969 C 82.417969 116.859375 83.125 116.882812 83.800781 116.996094 C 84.265625 117.007812 84.714844 117.167969 85.078125 117.453125 C 85.449219 118.003906 85.746094 118.597656 85.972656 119.222656 L 84.273438 119.972656 C 84.199219 121.050781 85.378906 122.488281 83.382812 123.261719 L 83.585938 123.597656 L 84.980469 123.726562 L 87.59375 130.007812 L 86.296875 129.878906 C 86.46875 130.105469 86.527344 130.269531 86.632812 130.316406 C 88.40625 130.988281 89.503906 132.40625 90.480469 133.914062 C 90.683594 134.382812 90.753906 134.902344 90.683594 135.410156 C 90.640625 135.847656 90.558594 136.277344 90.441406 136.699219 L 90.765625 136.78125 L 91.703125 135.285156 C 92.453125 137.488281 92.71875 139.734375 95.179688 140.597656 L 95.699219 138.859375 C 99.105469 141.363281 103.03125 143.070312 107.183594 143.859375 L 107.183594 118.832031 L 86.714844 119.402344 L 87.867188 115.25 L 86.0625 114.238281 C 85.929688 114.832031 85.734375 115.410156 85.476562 115.960938 C 85.234375 116.246094 84.875 116.40625 84.5 116.390625 C 84.304688 116.390625 83.953125 115.847656 84.003906 115.640625 C 84.167969 114.863281 84.421875 114.109375 84.753906 113.390625 C 85.097656 112.789062 85.492188 112.214844 85.925781 111.675781 C 83.320312 111.140625 82.808594 110.460938 82.425781 107.328125 C 82.34375 106.921875 82.230469 106.523438 82.089844 106.136719 C 81.625 106.296875 81.167969 106.484375 80.722656 106.691406 C 80.453125 106.832031 80.265625 107.222656 79.972656 107.28125 C 79.417969 107.441406 78.835938 107.480469 78.265625 107.394531 C 78.117188 107.359375 77.941406 106.496094 78.085938 106.128906 C 79.0625 103.488281 79.84375 100.730469 81.195312 98.289062 C 85.808594 89.628906 93.851562 83.296875 103.367188 80.839844 C 104.472656 80.539062 104.722656 80.089844 104.699219 78.980469 C 104.601562 73.195312 104.21875 67.445312 102.683594 61.832031 C 102.09375 59.691406 101.496094 57.546875 100.890625 55.402344 C 100.601562 54.558594 100.910156 53.625 101.640625 53.117188 C 105.105469 50.117188 108.507812 47.046875 111.871094 43.933594 C 112.621094 43.1875 113.050781 43.253906 113.808594 43.933594 C 117.113281 46.992188 120.480469 49.984375 123.835938 52.980469 C 125.070312 54.074219 125.097656 55.171875 123.835938 56.308594 C 123.636719 56.539062 123.464844 56.792969 123.320312 57.058594 L 124.40625 57.292969 C 123.90625 58.414062 123.425781 59.539062 122.941406 60.589844 C 122.839844 60.75 122.765625 60.929688 122.71875 61.113281 C 122.273438 64.113281 121.726562 67.066406 121.441406 70.0625 C 121.140625 73.261719 121.101562 76.492188 120.90625 79.707031 C 120.863281 80.457031 121.351562 80.503906 121.863281 80.636719 C 135.230469 84.125 145.433594 94.910156 148.152344 108.429688 C 148.355469 109.390625 148.75 109.605469 149.59375 109.472656 C 150.929688 109.261719 152.273438 109.105469 153.605469 108.847656 C 154.28125 108.722656 154.625 108.847656 154.835938 109.546875 C 154.988281 110.035156 155.246094 110.484375 155.585938 110.867188 C 156.285156 111.613281 156.632812 111.523438 157.007812 110.582031 L 155.292969 108.976562 L 155.453125 108.5625 C 156.21875 108.308594 157.023438 108.179688 157.832031 108.175781 C 158.296875 108.234375 158.742188 108.925781 159.085938 109.417969 C 159.636719 110.167969 160.101562 110.917969 159.261719 111.929688 C 158.507812 112.804688 158.90625 115.566406 159.695312 116.578125 C 159.898438 115.421875 160.042969 114.394531 160.273438 113.382812 C 160.640625 111.757812 161.09375 111.359375 162.105469 111.464844 C 162.105469 113.203125 162.105469 114.921875 162.105469 116.636719 C 162.101562 117.035156 162.203125 117.425781 162.40625 117.769531 C 162.695312 118.082031 163.03125 118.351562 163.398438 118.570312 C 163.625 118.175781 163.777344 117.746094 163.847656 117.296875 C 163.78125 116.238281 163.421875 115.191406 163.4375 114.140625 C 163.472656 112.042969 164.539062 111.097656 166.679688 111.140625 C 166.621094 110.226562 167.253906 109.164062 166.050781 108.527344 C 165.617188 108.339844 165.171875 108.1875 164.714844 108.078125 L 164.480469 109.449219 L 161.054688 109.613281 C 160.898438 107.710938 161.101562 107.453125 163.0625 106.855469 C 165.019531 106.257812 166.988281 105.542969 168.972656 104.960938 C 169.4375 104.804688 169.945312 104.855469 170.371094 105.101562 C 173.179688 107.851562 175.941406 110.664062 178.691406 113.488281 C 179.011719 113.894531 179.285156 114.339844 179.503906 114.808594 Z M 116.695312 145.460938 C 118.097656 144.621094 119.566406 143.890625 121.085938 143.28125 C 131.820312 140.0625 139.738281 130.972656 141.445312 119.917969 C 133.804688 118.539062 126.144531 119.648438 118.480469 118.628906 C 118.480469 119.320312 118.40625 119.785156 118.414062 120.25 C 118.457031 127.285156 118.503906 134.324219 118.59375 141.363281 C 118.59375 142.449219 118.519531 143.214844 117.273438 143.609375 C 116.023438 144.007812 116.003906 144.789062 116.695312 145.460938 Z M 105.53125 87.625 C 102.8125 88.328125 100.207031 89.417969 97.796875 90.855469 C 92.589844 94.066406 88.496094 98.789062 86.0625 104.390625 L 85.566406 101.308594 L 85.242188 101.308594 C 85.175781 102.015625 85.046875 102.710938 85.042969 103.40625 C 85.042969 105.460938 85.289062 107.539062 84.507812 109.523438 C 84.222656 110.273438 84.65625 110.4375 85.257812 110.476562 C 86.492188 110.550781 87.722656 110.664062 88.953125 110.714844 C 89.707031 110.714844 89.878906 110.984375 89.789062 111.75 C 89.722656 112.816406 89.722656 113.882812 89.789062 114.949219 C 89.640625 113.578125 90.492188 112.292969 91.816406 111.890625 C 91.96875 111.84375 92.105469 111.761719 92.214844 111.644531 C 92.839844 110.949219 93.425781 110.566406 94.085938 111.644531 C 94.191406 111.816406 94.574219 111.847656 94.835938 111.878906 C 95.585938 111.960938 96.339844 112.011719 97.140625 112.085938 C 97.285156 111.074219 98.097656 111.128906 98.980469 111.15625 C 101.011719 111.234375 103.039062 111.238281 105.074219 111.253906 C 106.90625 111.253906 107.058594 111.066406 106.960938 109.1875 C 106.792969 106.1875 106.695312 103.234375 106.539062 100.261719 C 106.394531 97.53125 106.230469 94.796875 106.027344 92.066406 C 105.929688 90.628906 105.710938 89.191406 105.53125 87.625 Z M 120.214844 87.570312 C 120.066406 88.125 119.953125 88.6875 119.878906 89.257812 C 119.683594 92.066406 119.53125 94.878906 119.351562 97.683594 C 119.210938 99.808594 119.023438 101.9375 118.917969 104.066406 C 118.820312 106.054688 118.8125 108.03125 118.746094 110.019531 C 118.746094 111 119.136719 111.316406 120.105469 111.285156 C 124.316406 111.140625 128.539062 111.089844 132.761719 110.949219 C 135.222656 110.859375 137.679688 110.632812 140.144531 110.511719 C 141 110.46875 141.445312 110.28125 141.089844 109.296875 C 140.84375 108.640625 140.746094 107.917969 140.527344 107.238281 C 137.28125 97.171875 130.484375 90.757812 120.214844 87.570312 Z M 61.839844 113.171875 L 61.695312 113.511719 C 63.453125 114.484375 62.816406 116.035156 62.792969 117.460938 C 62.75 118.117188 62.839844 118.773438 63.054688 119.394531 C 63.191406 119.703125 63.808594 119.875 64.242188 119.957031 C 64.550781 119.957031 64.832031 119.796875 64.992188 119.535156 C 65.746094 117.871094 64.625 114.289062 63.085938 113.375 C 62.6875 113.234375 62.261719 113.164062 61.839844 113.171875 Z M 111.933594 47.21875 L 111.179688 47.21875 C 110.933594 48.515625 110.65625 49.804688 110.472656 51.109375 C 110.4375 51.347656 110.804688 51.648438 110.992188 51.917969 C 111.195312 51.707031 111.488281 51.527344 111.578125 51.28125 C 111.863281 50.585938 112.0625 49.859375 112.171875 49.113281 C 112.164062 48.476562 112.082031 47.839844 111.933594 47.21875 Z M 114.847656 202.363281 L 115.371094 202.257812 C 115.363281 201.371094 115.292969 200.488281 115.152344 199.613281 C 114.980469 198.96875 114.667969 198.371094 114.238281 197.859375 C 114.078125 197.664062 113.546875 197.769531 113.179688 197.730469 C 113.179688 198.007812 113.027344 198.332031 113.125 198.546875 C 113.488281 199.386719 113.929688 200.199219 114.320312 201.023438 C 114.523438 201.425781 114.671875 201.882812 114.847656 202.363281 Z M 116.738281 210.976562 C 116.910156 209.054688 116.898438 207.226562 115.5 205.730469 C 115.148438 207.5625 115.597656 209.464844 116.738281 210.945312 Z M 120.75 219.414062 C 120.507812 219.839844 120.40625 220.292969 120.125 220.5 C 119.203125 221.183594 119.78125 222.082031 119.691406 222.882812 C 120.113281 222.882812 120.703125 223.140625 120.921875 222.945312 C 121.660156 222.261719 121.53125 220.351562 120.75 219.382812 Z M 115.957031 59.324219 L 119.023438 60.820312 C 118.714844 59.90625 118.457031 59.050781 118.128906 58.226562 C 118.015625 57.949219 117.699219 57.546875 117.519531 57.570312 C 117.128906 57.621094 116.773438 57.816406 116.519531 58.117188 C 116.28125 58.492188 116.089844 58.898438 115.957031 59.324219 Z M 110.292969 56.105469 L 110.804688 56.046875 C 111.054688 55.679688 111.445312 55.296875 111.511719 54.929688 C 111.632812 54.179688 110.625 53.148438 109.949219 53.320312 C 109.511719 53.492188 109.140625 53.800781 108.890625 54.195312 C 109.3125 54.867188 109.78125 55.503906 110.292969 56.105469 Z M 112.203125 139.546875 C 111.324219 140.34375 110.851562 141.046875 111.570312 141.746094 C 112.023438 142.03125 112.589844 142.070312 113.074219 141.84375 C 114.148438 140.613281 112.328125 140.582031 112.203125 139.546875 Z M 124.453125 228.394531 L 124.8125 227.957031 L 122.558594 226.070312 C 123.378906 226.675781 123.257812 228.222656 124.453125 228.394531 Z M 120.007812 146.542969 L 120.113281 147.027344 C 120.824219 147.027344 121.613281 147.34375 122.011719 146.152344 Z M 115.070312 169.386719 C 114.148438 167.96875 113.613281 167.730469 112.675781 168.390625 Z M 115.070312 169.386719 "}),w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 52.816406 124.925781 L 50.84375 122.398438 C 53.980469 121.269531 55.957031 121.746094 57.046875 124.027344 C 56.328125 123.960938 55.609375 123.960938 54.890625 124.027344 C 54.175781 124.265625 53.480469 124.566406 52.816406 124.925781 Z M 52.816406 124.925781 "}),w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 56.828125 126.355469 C 57.261719 125.582031 57.761719 124.84375 58.332031 124.160156 C 58.535156 123.945312 59.234375 124.160156 59.707031 124.222656 C 59.554688 124.730469 59.546875 125.414062 59.210938 125.71875 C 58.597656 126.140625 57.933594 126.480469 57.234375 126.722656 Z M 56.828125 126.355469 "})],-1),jh=[Fh];function Nh(i,t){return Y(),i1("svg",$h,jh)}const Bh=x1(Dh,[["render",Nh]]),Hh={},Vh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},qh=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 24.449219 68.910156 C 24.859375 68.910156 25.4375 68.796875 25.679688 69.019531 C 32.824219 75.765625 40.019531 82.390625 47.035156 89.257812 C 56.410156 98.410156 65.8125 107.46875 76.15625 115.570312 C 77.027344 116.253906 77.972656 116.847656 78.867188 117.5 C 79.214844 117.820312 79.679688 117.988281 80.152344 117.964844 C 80.625 117.941406 81.070312 117.726562 81.382812 117.371094 C 81.78125 117.066406 82.035156 116.617188 82.097656 116.121094 C 82.15625 115.625 82.011719 115.128906 81.699219 114.738281 C 80.195312 112.703125 78.8125 110.574219 77.140625 108.691406 C 70.566406 101.339844 63.996094 94.007812 57.234375 86.828125 C 49.394531 78.449219 41.363281 70.226562 33.417969 61.9375 C 33.277344 61.824219 33.164062 61.683594 33.078125 61.527344 C 32.972656 61.226562 32.882812 60.921875 32.808594 60.613281 C 33.128906 60.65625 33.558594 60.613281 33.761719 60.746094 C 36.015625 62.246094 38.375 63.746094 40.566406 65.410156 C 49.039062 71.816406 56.835938 79.011719 64.46875 86.394531 C 72.519531 94.152344 80.390625 102.132812 88.457031 109.847656 C 95.023438 116.148438 99.011719 123.890625 101.707031 132.414062 C 102.109375 133.71875 102.839844 134.898438 103.835938 135.839844 C 106.574219 138.492188 109.25 141.210938 111.863281 143.828125 L 134.53125 121.199219 C 133.78125 120.382812 132.851562 119.46875 132.046875 118.433594 C 130.5 116.613281 129.09375 114.679688 127.839844 112.648438 C 125.398438 108.285156 125.917969 103.835938 128.589844 99.808594 C 130.386719 97.105469 132.804688 94.820312 134.847656 92.261719 C 136.105469 90.667969 137.261719 89 138.3125 87.261719 C 138.644531 86.464844 138.867188 85.625 138.972656 84.769531 C 141.144531 84.871094 142.464844 83.53125 143.351562 81.566406 C 144.304688 79.46875 145.386719 77.429688 146.25 75.300781 C 147.113281 73.171875 147.054688 73.054688 145.027344 71.554688 C 147.28125 66.441406 149.707031 61.332031 150.457031 55.664062 L 150.894531 55.703125 C 151.035156 56.960938 151.105469 58.226562 151.101562 59.496094 C 150.441406 70.789062 147.503906 81.402344 141.339844 90.972656 C 139.707031 93.5 137.671875 95.761719 135.996094 98.265625 C 135.011719 99.78125 134.183594 101.394531 133.535156 103.078125 C 132.613281 105.15625 133.234375 107.59375 135.035156 108.984375 C 137.167969 110.835938 139.460938 112.507812 141.871094 114.402344 L 172.984375 85.441406 C 172.230469 84.617188 171.667969 84.054688 171 83.351562 L 201.847656 58.769531 L 202.074219 58.984375 L 177.414062 89.773438 L 175.507812 87.984375 C 165.3125 97.777344 156.269531 108.601562 146.296875 118.757812 C 148.421875 121.484375 149.921875 124.421875 152.550781 126.5 C 153.898438 127.679688 155.804688 127.972656 157.441406 127.25 C 159.816406 126.285156 162.054688 125.027344 164.113281 123.5 C 172.480469 116.6875 182.515625 112.226562 193.1875 110.574219 C 196.945312 109.949219 200.699219 109.246094 204.574219 109.824219 C 204.785156 109.855469 204.976562 109.949219 205.132812 110.09375 C 199.519531 111.074219 194.375 113.332031 189.320312 115.667969 C 189.171875 115.578125 189.074219 115.550781 189.027344 115.488281 C 187.765625 113.660156 187.699219 113.535156 185.617188 114.441406 C 182.882812 115.578125 180.234375 116.90625 177.691406 118.421875 C 176.703125 119.035156 176.296875 120.585938 175.53125 121.851562 C 172.628906 122.191406 170.273438 124.199219 168.019531 126.296875 C 166.15625 128.132812 164.179688 129.84375 162.097656 131.425781 C 156.242188 135.515625 150.878906 135.351562 145.167969 131.035156 C 143.164062 129.535156 141.332031 127.757812 139.535156 126.214844 L 116.917969 148.773438 C 117.03125 148.894531 117.300781 149.21875 117.601562 149.523438 C 132.519531 164.414062 147.449219 179.3125 162.390625 194.214844 C 163.035156 194.882812 163.914062 195.273438 164.839844 195.296875 C 168.820312 195.601562 172.808594 195.886719 176.777344 196.324219 C 179.921875 196.667969 181.898438 198.644531 182.929688 201.5 C 184.0625 204.207031 183.449219 207.328125 181.375 209.410156 C 180.226562 210.429688 178.921875 211.257812 177.511719 211.859375 C 176.933594 212.160156 176.542969 212.316406 176.347656 213.035156 C 175.320312 216.894531 171.605469 219.40625 167.636719 218.929688 C 163.664062 218.453125 160.652344 215.128906 160.574219 211.140625 C 160.328125 207.289062 159.964844 203.449219 159.605469 199.613281 C 159.546875 199.144531 159.339844 198.703125 159.011719 198.359375 C 143.789062 183.136719 128.550781 167.925781 113.296875 152.730469 C 113.175781 152.625 113.039062 152.53125 112.902344 152.445312 C 112.5625 152.769531 112.203125 153.085938 111.871094 153.421875 C 93.453125 171.792969 75.046875 190.175781 56.648438 208.5625 C 56.023438 209.28125 55.539062 210.113281 55.230469 211.011719 C 54.839844 211.953125 54.585938 212.945312 54.476562 213.957031 C 54.214844 216.566406 52.757812 217.839844 50.332031 218.703125 C 46.449219 220.074219 42.714844 221.859375 38.898438 223.410156 C 38.289062 223.554688 37.660156 223.605469 37.035156 223.566406 C 36.960938 222.953125 36.988281 222.328125 37.121094 221.722656 C 39.007812 217.136719 40.941406 212.570312 42.917969 208.03125 C 43.199219 207.425781 43.730469 206.96875 44.375 206.785156 C 49.234375 206.105469 52.710938 203.390625 56.09375 199.964844 C 73 182.847656 90.097656 165.921875 107.132812 148.933594 C 107.566406 148.558594 108.027344 148.207031 108.507812 147.890625 C 105.703125 145.101562 103.082031 142.582031 100.582031 139.953125 C 99.402344 138.699219 97.914062 137.773438 96.261719 137.277344 C 88.113281 134.722656 80.675781 130.921875 74.617188 124.738281 C 68.960938 118.976562 63.160156 113.339844 57.578125 107.5 C 50.710938 100.328125 43.925781 93.070312 37.222656 85.726562 C 32.492188 80.589844 28.21875 75.054688 24.449219 69.179688 Z M 165.132812 200.738281 C 165.457031 204.484375 165.703125 208.082031 166.089844 211.636719 C 166.222656 212.871094 167.671875 213.71875 168.90625 213.53125 C 170.246094 213.367188 171.238281 212.210938 171.195312 210.863281 C 171.148438 210.464844 171.074219 210.074219 170.976562 209.6875 C 170.8125 208.820312 171.082031 207.933594 171.699219 207.304688 C 172.316406 206.675781 173.203125 206.390625 174.074219 206.539062 C 174.46875 206.597656 174.824219 206.742188 175.246094 206.761719 C 176.640625 206.835938 177.847656 205.800781 177.976562 204.410156 C 178.132812 203.0625 177.1875 201.839844 175.84375 201.644531 C 172.367188 201.292969 168.875 201.042969 165.132812 200.738281 Z M 165.132812 200.738281 "})],-1),Uh=[qh];function Wh(i,t){return Y(),i1("svg",Vh,Uh)}const Gh=x1(Hh,[["render",Wh]]),Kh={},Yh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},Xh=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 23.320312 217.351562 C 24.296875 215.71875 25.25 215.328125 27.078125 216.019531 C 27.613281 216.273438 28.253906 216.09375 28.578125 215.601562 C 30.605469 213.351562 32.671875 211.101562 34.746094 208.855469 C 33.566406 207.355469 32.371094 205.902344 31.253906 204.355469 C 30.675781 203.636719 30.214844 202.828125 29.886719 201.964844 C 29.703125 201.335938 29.816406 200.65625 30.195312 200.113281 C 30.722656 199.722656 31.410156 199.605469 32.042969 199.800781 C 33.039062 200.246094 33.984375 200.800781 34.859375 201.457031 C 35.746094 202.09375 36.597656 202.777344 37.414062 203.503906 C 37.589844 203.089844 37.8125 202.699219 38.082031 202.339844 C 62.425781 178.03125 86.773438 153.734375 111.121094 129.445312 C 113.179688 127.390625 114.800781 127.195312 117.324219 128.792969 C 119.625 126.90625 121.960938 125.046875 124.265625 123.089844 C 125.691406 121.882812 127.148438 120.839844 129.183594 121.386719 C 129.386719 121.441406 129.726562 121.171875 129.9375 120.976562 C 141.082031 110.4375 152.226562 99.894531 163.363281 89.347656 C 163.449219 89.25 163.582031 89.214844 163.707031 89.25 C 162.761719 90.261719 161.8125 91.28125 160.859375 92.292969 C 151.269531 102.449219 141.683594 112.609375 132.097656 122.765625 C 131.824219 123.078125 131.6875 123.484375 131.722656 123.898438 C 132.050781 125.433594 131.621094 127.03125 130.566406 128.195312 C 128.515625 130.667969 126.472656 133.15625 124.4375 135.621094 C 126.03125 138.230469 125.835938 139.773438 123.6875 141.933594 L 50.664062 214.738281 C 50.328125 215.042969 49.976562 215.332031 49.609375 215.601562 C 50.566406 216.890625 51.449219 218.003906 52.246094 219.183594 C 52.671875 219.800781 53 220.480469 53.222656 221.199219 C 53.417969 221.691406 53.320312 222.25 52.972656 222.652344 C 52.621094 223.050781 52.078125 223.222656 51.5625 223.09375 C 50.957031 223.007812 50.378906 222.78125 49.875 222.433594 C 48.257812 221.28125 46.695312 220.050781 45.117188 218.851562 L 44.042969 218.042969 C 41.625 220.238281 39.261719 222.367188 36.925781 224.527344 C 36.757812 224.753906 36.6875 225.035156 36.734375 225.3125 C 36.796875 225.746094 37.015625 226.160156 37.097656 226.59375 C 37.398438 227.773438 36.789062 228.992188 35.667969 229.464844 L 33.820312 229.464844 C 29.066406 227.390625 25.300781 223.566406 23.304688 218.785156 Z M 96.449219 165.535156 L 91.863281 161.035156 L 92.550781 159.996094 L 97.15625 164.640625 L 99.695312 162.316406 L 93.109375 155.789062 L 93.933594 155.039062 L 100.339844 161.457031 L 102.769531 159.117188 L 98.179688 154.582031 L 98.863281 153.78125 L 103.457031 158.4375 L 105.984375 156.039062 C 104.414062 154.484375 102.878906 152.988281 101.316406 151.449219 L 102.128906 150.699219 L 106.636719 155.378906 L 109.0625 152.898438 L 104.449219 148.398438 L 105.203125 147.507812 L 109.707031 152.132812 L 112.253906 149.667969 L 107.746094 145.265625 L 108.363281 144.34375 L 113.019531 149.050781 L 115.027344 147.007812 L 106.132812 138.160156 L 39.28125 204.867188 L 47.882812 213.769531 L 52.292969 209.363281 L 45.53125 202.617188 L 46.238281 202.042969 L 53 208.832031 C 53.800781 208.039062 54.574219 207.273438 55.5 206.375 L 50.820312 201.792969 L 51.722656 200.984375 L 56.144531 205.609375 L 58.660156 203.113281 L 53.953125 198.617188 L 54.785156 197.867188 C 56.332031 199.441406 57.835938 200.972656 59.292969 202.460938 L 61.742188 200.03125 L 57.160156 195.484375 L 57.910156 194.808594 L 62.417969 199.449219 L 64.925781 197.019531 C 63.355469 195.519531 61.808594 194.023438 60.164062 192.460938 L 61.082031 191.414062 L 65.585938 196.03125 L 68.164062 193.691406 L 61.132812 186.722656 L 61.882812 185.90625 L 68.726562 193.101562 L 71.214844 190.753906 L 66.546875 186.152344 L 67.300781 185.328125 L 71.804688 189.878906 L 74.316406 187.441406 L 69.75 182.875 L 70.445312 182.128906 L 75.089844 186.8125 L 77.574219 184.351562 C 75.988281 182.855469 74.433594 181.355469 72.8125 179.855469 L 73.632812 178.925781 C 75.261719 180.628906 76.765625 182.128906 78.265625 183.699219 L 80.722656 181.257812 L 75.996094 176.597656 L 76.867188 175.847656 L 81.375 180.410156 L 83.839844 178.027344 L 76.988281 171.222656 L 77.84375 170.425781 L 84.664062 177.253906 L 87.105469 174.917969 L 82.449219 170.335938 L 83.285156 169.589844 L 87.789062 174.203125 L 90.269531 171.800781 L 85.582031 167.21875 L 86.257812 166.433594 L 90.914062 171.207031 L 93.445312 168.621094 L 88.738281 164.0625 L 89.667969 163.246094 L 94.175781 167.945312 Z M 116.957031 132.261719 C 116.484375 131.714844 116.070312 131.160156 115.582031 130.6875 C 115.296875 130.386719 114.902344 130.214844 114.484375 130.214844 C 114.070312 130.214844 113.671875 130.386719 113.390625 130.6875 C 112.699219 131.304688 112.035156 131.941406 111.535156 132.40625 L 120.605469 141.460938 C 121.164062 140.914062 121.855469 140.296875 122.476562 139.617188 C 122.800781 139.332031 122.984375 138.921875 122.984375 138.492188 C 122.984375 138.0625 122.800781 137.652344 122.476562 137.367188 C 121.992188 136.890625 121.476562 136.441406 120.9375 136.027344 C 123.527344 132.878906 125.957031 129.953125 128.351562 127.03125 C 128.761719 126.578125 129.074219 126.046875 129.269531 125.464844 C 129.402344 124.980469 129.300781 124.464844 128.996094 124.0625 C 128.53125 123.832031 127.992188 123.785156 127.496094 123.9375 C 127.015625 124.117188 126.578125 124.394531 126.210938 124.753906 C 123.144531 127.160156 120.132812 129.664062 116.957031 132.253906 Z M 34.941406 222.953125 L 42.25 216.3125 L 36.488281 210.609375 L 29.96875 217.742188 Z M 26.046875 218.140625 L 25.816406 218.425781 C 27.601562 222.191406 30.644531 225.222656 34.421875 227 L 34.789062 226.730469 C 33.109375 223.851562 31.433594 220.964844 29.609375 217.824219 L 28.480469 219.324219 Z M 34.550781 204.328125 C 35.917969 206.742188 46.621094 217.351562 48.402344 218.101562 C 43.871094 213.515625 39.785156 208.515625 34.550781 204.328125 Z M 34.550781 204.328125 "}),w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 166.507812 85.773438 C 172.617188 80.277344 175.636719 73.171875 178.105469 65.753906 C 179.171875 62.546875 180.066406 59.253906 181.417969 56.175781 C 182.445312 54.058594 183.726562 52.074219 185.234375 50.269531 C 186.339844 48.835938 187.953125 47.878906 189.742188 47.59375 C 192.175781 47.179688 194.015625 48.867188 193.570312 51.289062 C 193.265625 52.863281 192.792969 54.398438 192.160156 55.875 C 189.742188 61.644531 187.246094 67.378906 184.777344 73.113281 C 184.574219 73.578125 184.355469 74.035156 184.085938 74.613281 C 186.164062 74.289062 188.109375 73.863281 190.09375 73.691406 C 194.21875 73.253906 198.355469 72.859375 202.472656 72.582031 C 203.703125 72.546875 204.933594 72.699219 206.117188 73.039062 C 207.203125 73.316406 207.484375 74.066406 206.722656 74.882812 C 205.753906 75.96875 204.613281 76.894531 203.351562 77.625 C 200.128906 79.363281 196.589844 80.210938 193.007812 80.886719 C 184.175781 82.585938 175.335938 84.160156 166.507812 85.773438 Z M 166.507812 85.773438 "})],-1),Jh=[Xh];function Qh(i,t){return Y(),i1("svg",Yh,Jh)}const tf=x1(Kh,[["render",Qh]]),ef={},nf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},of=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 56.84375 172.863281 L 56.84375 168.261719 C 57.753906 165 60.007812 163.511719 63.304688 163.335938 C 64.835938 163.285156 66.363281 163.144531 67.878906 162.925781 C 68.789062 162.804688 69.65625 162.472656 70.417969 161.957031 C 81.535156 153.320312 92.628906 144.648438 103.699219 135.941406 C 103.8125 135.859375 103.835938 135.667969 103.917969 135.492188 C 101.753906 134.191406 99.582031 132.992188 97.53125 131.609375 C 93.738281 129.078125 89.953125 126.53125 86.265625 123.800781 C 85.121094 122.964844 84.269531 121.792969 83.832031 120.453125 C 82.964844 117.101562 82.359375 113.691406 82.023438 110.25 C 81.894531 108.871094 82.773438 107.34375 83.375 105.984375 C 83.75 105.417969 84.367188 105.058594 85.046875 105.019531 C 87.519531 105.085938 90.066406 105.019531 92.425781 105.597656 C 100.613281 107.621094 107.550781 112.070312 113.96875 117.355469 C 115.761719 118.871094 117.789062 120.085938 119.976562 120.953125 C 120.753906 121.382812 121.722656 121.238281 122.34375 120.601562 C 130.3125 113.59375 138.332031 106.636719 146.289062 99.617188 C 146.867188 99.105469 147.039062 98.167969 147.550781 97.210938 C 146.519531 97.074219 146.011719 96.953125 145.492188 96.941406 C 134.519531 96.722656 123.535156 96.191406 112.570312 96.386719 C 98.476562 96.671875 84.386719 95.578125 70.507812 93.125 C 68.878906 92.824219 67.628906 92.144531 67.082031 90.734375 C 65.925781 87.796875 64.941406 84.796875 64.015625 81.785156 C 63.558594 80.285156 63.371094 78.71875 62.964844 76.71875 C 65.21875 76.972656 67.261719 76.832031 68.976562 77.46875 C 72.03125 78.492188 75.230469 79.050781 78.453125 79.117188 C 88.128906 79.679688 97.804688 80.082031 107.46875 79.371094 C 122.0625 78.292969 136.644531 77.027344 151.230469 75.828125 C 153.085938 75.675781 154.941406 75.4375 156.796875 75.242188 L 161.410156 75.242188 C 163.128906 77.207031 165.164062 78.988281 166.507812 81.183594 C 168.523438 84.421875 170.054688 87.929688 171.804688 91.347656 C 172.820312 93.070312 172.300781 95.289062 170.625 96.386719 C 160.859375 103.484375 150.996094 110.503906 141.261719 117.679688 C 137.867188 120.179688 134.734375 123.035156 131.324219 125.863281 L 132.78125 126.542969 C 139.070312 129.445312 145.890625 130.398438 152.582031 131.792969 C 157.488281 132.789062 162.191406 135.164062 167.476562 134.144531 C 168.175781 134.007812 169.371094 135.171875 169.910156 136.003906 C 170.226562 136.492188 169.859375 137.605469 169.503906 138.289062 C 168.972656 139.324219 168.136719 140.207031 167.515625 141.203125 C 165.457031 144.488281 163.757812 148.039062 159.898438 149.867188 C 161.605469 151.742188 163.179688 153.472656 164.75 155.210938 C 168.574219 159.304688 170.757812 164.65625 170.886719 170.246094 C 170.863281 171.203125 170.484375 172.113281 169.820312 172.804688 C 166.191406 176.347656 161.722656 177.53125 156.699219 177.375 C 153.226562 177.292969 149.75 177.425781 146.296875 177.773438 C 143.613281 178.019531 140.957031 179.203125 138.320312 179.089844 C 117.902344 178.246094 97.488281 177.683594 77.058594 177.847656 C 73.351562 177.914062 69.6875 178.652344 66.25 180.027344 C 64.695312 180.550781 63.09375 180.925781 61.472656 181.152344 C 61.007812 181.265625 60.515625 181.1875 60.109375 180.933594 C 59.703125 180.679688 59.421875 180.269531 59.324219 179.804688 C 58.519531 177.472656 57.671875 175.171875 56.84375 172.863281 Z M 87.527344 159.777344 L 89.847656 159.777344 C 109.558594 159.71875 129.269531 159.621094 148.976562 159.636719 C 152.734375 159.636719 156.488281 159.851562 160.117188 158.539062 C 161.617188 158.015625 162.113281 157.242188 161.355469 155.933594 C 159.320312 152.417969 156.5625 150.011719 152.28125 149.425781 C 148.980469 148.929688 145.714844 148.195312 142.515625 147.230469 C 138.394531 146.046875 134.382812 144.480469 130.257812 143.296875 C 127.320312 142.457031 124.128906 142.335938 121.3125 141.234375 C 117 139.546875 113.3125 139.847656 109.917969 143.046875 C 109.449219 143.390625 108.945312 143.683594 108.417969 143.917969 C 100.914062 148.25 93.710938 152.898438 87.527344 159.777344 Z M 111.242188 118.652344 C 106.648438 113.679688 100.605469 110.269531 93.964844 108.910156 C 93.324219 108.886719 92.6875 108.96875 92.070312 109.148438 C 92.261719 109.773438 92.546875 110.367188 92.914062 110.910156 C 97.921875 116.171875 104.628906 117.28125 111.242188 118.652344 Z M 111.242188 118.652344 "})],-1),sf=[of];function rf(i,t){return Y(),i1("svg",nf,sf)}const lf=x1(ef,[["render",rf]]),af={},cf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},uf=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 124.25 99.449219 C 124.378906 99.632812 124.515625 99.808594 124.664062 99.976562 L 136.996094 112.25 C 137.207031 112.453125 137.425781 112.648438 137.65625 112.859375 L 150.921875 99.628906 L 158.132812 106.886719 L 144.929688 120.015625 L 158.394531 133.410156 L 151.027344 140.644531 L 137.839844 127.511719 L 124.414062 140.90625 L 117.054688 133.574219 L 130.265625 120.4375 L 116.804688 107.042969 L 116.625 106.5625 C 117.046875 106.359375 117.445312 106.105469 117.8125 105.8125 C 119.714844 103.960938 121.570312 102.066406 123.453125 100.207031 C 123.667969 99.96875 123.863281 99.71875 124.046875 99.457031 Z M 124.25 99.449219 "}),w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 71.207031 133.582031 L 81.527344 123.398438 L 84.726562 120.226562 L 71.421875 107.035156 L 78.679688 99.796875 L 91.90625 112.972656 L 105.308594 99.636719 L 112.644531 106.9375 L 99.296875 120.175781 L 112.71875 133.492188 L 105.480469 140.695312 L 92.140625 127.414062 L 78.550781 140.90625 C 76.34375 138.703125 74.195312 136.550781 72.03125 134.414062 C 71.769531 134.179688 71.492188 133.957031 71.207031 133.753906 Z M 71.207031 133.582031 "})],-1),hf=[uf];function ff(i,t){return Y(),i1("svg",cf,hf)}const df=x1(af,[["render",ff]]),Cf={},pf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},vf=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 256.824219 250.585938 C 256.582031 251.132812 256.34375 251.671875 256.074219 252.25 L 255.320312 252.101562 C 254.910156 251.96875 254.472656 252.183594 254.324219 252.585938 C 254.019531 253.203125 253.769531 253.84375 253.570312 254.5 C 253.535156 254.835938 253.625 255.179688 253.820312 255.457031 C 254.035156 255.71875 254.289062 255.945312 254.570312 256.132812 C 250.664062 265.804688 246.757812 275.46875 242.851562 285.121094 C 242.308594 285.023438 241.75 285.011719 241.199219 285.085938 C 240.914062 285.167969 240.710938 285.691406 240.554688 286.050781 C 239.804688 287.789062 239.804688 287.789062 241.199219 289.050781 C 241.082031 289.386719 240.960938 289.800781 240.816406 290.128906 C 240.675781 290.460938 240.515625 290.773438 240.34375 291.148438 C 240.097656 291.074219 239.902344 291.035156 239.722656 290.96875 C 225.292969 285.160156 211.375 278.152344 198.117188 270.027344 C 189.605469 264.789062 181.464844 258.976562 173.75 252.632812 C 165.300781 245.699219 157.492188 238.023438 150.410156 229.707031 C 141.222656 218.855469 133.476562 206.863281 127.375 194.027344 C 123.355469 185.605469 119.863281 176.96875 116.234375 168.375 C 115.542969 166.738281 114.847656 165.105469 114.066406 163.285156 C 113.726562 163.785156 113.488281 164.132812 113.269531 164.492188 C 108.289062 172.429688 103.503906 180.484375 98.3125 188.289062 C 73.523438 225.867188 39.929688 256.851562 0.441406 278.566406 C 0.0976562 278.757812 -0.21875 279.007812 -0.558594 279.222656 L -0.796875 279.222656 L -1.902344 277.148438 L -1.519531 276.824219 C -0.65625 276.121094 -0.617188 275.964844 -1.105469 274.996094 C -1.195312 274.816406 -1.292969 274.644531 -1.390625 274.464844 C -2.140625 273.125 -2.140625 273.125 -3.644531 273.453125 C -3.710938 273.453125 -3.792969 273.453125 -3.96875 273.386719 C -8.925781 264.28125 -13.917969 255.121094 -18.890625 246 C -17.75 244.964844 -17.742188 244.925781 -18.425781 243.667969 C -18.597656 243.347656 -18.785156 243.039062 -18.96875 242.714844 C -19.160156 242.296875 -19.617188 242.066406 -20.070312 242.160156 C -20.34375 242.207031 -20.621094 242.230469 -20.824219 242.25 L -22.234375 240.347656 L -22.234375 240.109375 C -21.855469 239.996094 -21.484375 239.855469 -21.125 239.6875 C -6.019531 231.382812 8.113281 221.429688 21.015625 210.007812 C 32.984375 199.441406 43.839844 187.679688 53.410156 174.910156 C 59.179688 167.203125 64.347656 159.101562 69.417969 150.925781 C 75.613281 140.925781 81.871094 130.964844 88.097656 120.992188 C 88.203125 120.820312 88.292969 120.644531 88.40625 120.453125 C 88.261719 120.234375 88.144531 120.023438 88 119.835938 C 81.722656 111.808594 75.367188 103.851562 68.652344 96.183594 C 61.300781 87.765625 52.738281 80.484375 43.25 74.574219 C 36.878906 70.601562 30.480469 66.652344 24.140625 62.644531 C 16.554688 57.988281 9.40625 52.664062 2.769531 46.738281 C 0.148438 44.296875 -2.375 41.671875 -4.9375 39.125 C -5.160156 38.898438 -5.347656 38.636719 -5.6875 38.269531 L -3.695312 36.824219 C -3.277344 37.0625 -2.699219 37.65625 -2.128906 37.640625 C -1.554688 37.625 -1.039062 37.03125 -0.570312 36.605469 C 0.351562 35.757812 0.328125 35.660156 -0.773438 33.960938 L 22.929688 13.230469 C 24.085938 13.976562 24.183594 13.976562 25.183594 13.0625 L 25.710938 12.5625 C 26.605469 11.699219 26.605469 11.699219 26.078125 10.53125 L 27.835938 9.152344 C 27.929688 9.199219 28.019531 9.257812 28.097656 9.332031 C 32.785156 14.347656 38.09375 18.75 43.894531 22.433594 C 50.1875 26.523438 56.597656 30.445312 62.957031 34.425781 C 69.636719 38.523438 76.082031 42.988281 82.269531 47.796875 C 88.320312 52.664062 93.988281 57.980469 99.230469 63.707031 C 104.554688 69.457031 109.542969 75.496094 114.464844 81.589844 C 114.816406 82.023438 115.175781 82.453125 115.605469 82.960938 C 115.972656 82.527344 116.265625 82.210938 116.535156 81.867188 C 127.066406 68.769531 138.46875 56.394531 150.667969 44.828125 C 165.730469 30.472656 182.332031 17.8125 200.175781 7.082031 C 204.679688 4.382812 209.34375 1.875 214.070312 -0.800781 L 215.257812 1.378906 C 215.210938 1.515625 215.210938 1.625 215.160156 1.65625 C 213.996094 2.40625 213.753906 2.5625 214.601562 4.113281 C 214.625 4.152344 214.640625 4.1875 214.65625 4.226562 C 215.40625 5.644531 215.472656 5.671875 217.164062 5.113281 C 221.957031 14.40625 226.75 23.722656 231.667969 33.269531 C 231.480469 33.339844 231.300781 33.414062 231.121094 33.503906 C 230.875 33.613281 230.6875 33.824219 230.613281 34.082031 C 230.539062 34.339844 230.582031 34.621094 230.730469 34.84375 C 230.902344 35.210938 231.089844 35.59375 231.285156 35.921875 C 231.917969 37.109375 231.960938 37.121094 233.402344 36.71875 L 234.484375 38.742188 C 234.09375 38.972656 233.800781 39.167969 233.488281 39.332031 C 217.160156 47.957031 201.945312 58.527344 188.171875 70.8125 C 171.367188 85.59375 156.625 102.246094 143.140625 120.0625 L 142.636719 120.765625 C 142.6875 120.921875 142.75 121.074219 142.824219 121.222656 C 148.269531 130.515625 152.671875 140.3125 156.863281 150.214844 C 160.28125 158.277344 163.714844 166.328125 167.289062 174.316406 C 170.554688 181.492188 174.585938 188.292969 179.308594 194.605469 C 182.523438 198.945312 186.011719 203.074219 189.757812 206.964844 C 198.972656 216.421875 209.3125 224.714844 220.550781 231.660156 C 231.726562 238.605469 243.476562 244.585938 255.675781 249.527344 C 256.089844 249.703125 256.480469 249.917969 256.875 250.113281 Z M 68.261719 46.085938 L 51.277344 71.007812 C 51.742188 71.335938 52.074219 71.578125 52.40625 71.800781 C 57.734375 75.449219 62.734375 79.558594 67.34375 84.078125 C 72.859375 89.644531 78.070312 95.503906 82.953125 101.632812 C 84.457031 103.421875 85.867188 105.222656 87.40625 107.125 L 110.863281 88.386719 C 110.632812 88.066406 110.480469 87.832031 110.308594 87.636719 C 106.5 83.035156 102.796875 78.390625 98.878906 73.863281 C 92.613281 66.390625 85.628906 59.550781 78.027344 53.445312 C 74.871094 50.964844 71.609375 48.597656 68.261719 46.085938 Z M 207.273438 231.210938 L 189.75 255.628906 C 205.914062 267 223.347656 276.464844 241.695312 283.824219 L 253.089844 256.035156 C 236.914062 249.546875 221.539062 241.222656 207.273438 231.21875 Z M 205.160156 229.710938 C 191.5 219.578125 179.5625 207.976562 170.136719 193.804688 L 145.054688 210.375 C 156.480469 227.554688 170.8125 241.675781 187.285156 253.847656 Z M 65.683594 44.527344 C 64.234375 43.597656 62.949219 42.742188 61.652344 41.925781 C 55.011719 37.765625 48.324219 33.683594 41.738281 29.441406 C 35.152344 25.199219 29.058594 20.648438 23.742188 14.988281 C 23.636719 14.878906 23.5 14.789062 23.304688 14.621094 L 1.058594 34.917969 C 1.285156 35.054688 1.5 35.207031 1.703125 35.375 C 4.886719 38.792969 8.3125 41.984375 11.949219 44.917969 C 17.554688 49.414062 23.429688 53.558594 29.546875 57.328125 C 35.90625 61.324219 42.273438 65.308594 48.648438 69.277344 C 48.777344 69.359375 48.917969 69.417969 49.136719 69.53125 Z M 168.753906 191.714844 C 167.734375 190.011719 166.792969 188.496094 165.90625 186.953125 C 162.195312 180.300781 158.890625 173.433594 156 166.386719 C 152.90625 159.117188 149.820312 151.84375 146.746094 144.5625 C 146.566406 144.128906 146.339844 143.714844 146.117188 143.265625 L 118.828125 155.519531 C 118.917969 155.8125 118.953125 155.96875 119.015625 156.113281 C 122.558594 164.46875 126.066406 172.839844 129.664062 181.175781 C 133.320312 189.976562 137.671875 198.472656 142.683594 206.582031 C 142.914062 206.949219 143.164062 207.332031 143.433594 207.722656 Z M 44.171875 239.5625 L 24.359375 216.84375 C 11.519531 228.015625 -2.476562 237.789062 -17.390625 246 L -2.855469 272.375 C 13.949219 263.140625 29.714844 252.140625 44.171875 239.5625 Z M 84.914062 195.386719 L 60.5625 177.628906 C 50.46875 191.328125 38.972656 203.9375 26.25 215.246094 L 46.296875 237.730469 C 60.625 225.007812 73.566406 210.8125 84.914062 195.386719 Z M 186.144531 63.289062 C 179.53125 55.621094 173.035156 48.066406 166.480469 40.449219 C 152.195312 52.808594 138.945312 66.3125 126.855469 80.816406 L 150.015625 100.132812 C 161.046875 86.90625 173.128906 74.582031 186.144531 63.289062 Z M 148.242188 101.984375 C 140.578125 95.683594 132.867188 89.339844 125.105469 82.953125 C 113.285156 97.359375 102.308594 112.433594 92.230469 128.105469 C 100.730469 133.566406 109.113281 139 117.4375 144.324219 C 122.492188 137.058594 127.320312 129.851562 132.421875 122.84375 C 137.523438 115.835938 142.863281 109.015625 148.242188 101.984375 Z M 90.660156 130.597656 C 80.96875 145.589844 72.421875 161.132812 62.035156 175.605469 L 86.527344 193.105469 C 97.316406 178.191406 106.140625 162.214844 116.046875 146.789062 Z M 188.011719 61.644531 C 200.992188 50.730469 215.089844 41.214844 230.078125 33.261719 C 225.410156 24.34375 220.792969 15.523438 216.113281 6.589844 C 199.171875 15.554688 183.234375 26.296875 168.574219 38.636719 Z M 121.914062 150.601562 L 122.125 150.789062 L 144.695312 140.296875 C 143.839844 137.832031 138.957031 128.375 137.875 127.09375 C 132.328125 134.800781 127.019531 142.640625 121.953125 150.601562 Z M 92.734375 113.878906 L 104.433594 97.34375 L 104.308594 97.210938 L 89.097656 109.261719 Z M 3.808594 43.90625 C 4.558594 43.90625 6.164062 42.585938 6.203125 41.800781 C 6.199219 41.484375 6.085938 41.175781 5.878906 40.9375 C 5.488281 40.480469 5.054688 40.058594 4.589844 39.679688 C 3.835938 39.046875 3.671875 39.070312 2.859375 39.746094 C 2.558594 39.945312 2.265625 40.160156 1.988281 40.390625 C 1.761719 40.589844 1.589844 40.851562 1.5 41.140625 C 1.320312 42.179688 2.769531 43.851562 3.808594 43.90625 Z M 139.761719 204.183594 C 139.519531 203.148438 138.976562 202.207031 138.199219 201.480469 C 137.980469 201.398438 137.742188 201.398438 137.523438 201.480469 C 136.996094 201.667969 136.484375 201.929688 135.976562 202.152344 C 135.464844 202.378906 135.113281 202.738281 135.285156 203.277344 C 135.53125 204.042969 135.855469 204.777344 136.253906 205.472656 C 136.378906 205.714844 136.601562 205.886719 136.863281 205.957031 C 137.125 206.027344 137.40625 205.984375 137.636719 205.839844 C 138.207031 205.542969 138.761719 205.203125 139.289062 204.828125 C 139.492188 204.648438 139.664062 204.429688 139.789062 204.183594 Z M 10.535156 49.683594 C 11.371094 49.742188 12.789062 48.453125 12.859375 47.546875 C 12.925781 46.640625 11.402344 45.300781 10.355469 45.253906 C 9.703125 45.21875 8.359375 46.851562 8.328125 47.726562 C 8.296875 48.453125 9.605469 49.609375 10.535156 49.683594 Z M 87.828125 60.632812 C 88.960938 60.46875 89.867188 59.605469 90.082031 58.484375 C 89.902344 57.375 89.035156 56.503906 87.925781 56.316406 C 87.175781 56.316406 85.628906 57.703125 85.589844 58.386719 C 85.722656 59.5625 86.648438 60.496094 87.828125 60.632812 Z M 81.820312 55.058594 C 82.570312 55.058594 84.003906 53.6875 83.996094 52.9375 C 84.007812 52.777344 83.964844 52.613281 83.878906 52.480469 C 83.214844 51.664062 82.515625 50.703125 81.421875 50.679688 C 80.472656 50.679688 80.070312 51.714844 79.558594 52.417969 C 79.535156 52.453125 79.515625 52.492188 79.503906 52.53125 C 79.472656 52.761719 79.472656 52.992188 79.503906 53.222656 C 79.855469 54.222656 80.75 54.9375 81.804688 55.058594 Z M 93.835938 61.914062 C 93.453125 62.140625 93.082031 62.390625 92.734375 62.664062 C 91.148438 64.089844 91.148438 64.523438 92.671875 65.941406 C 93.621094 66.808594 93.957031 66.800781 94.925781 65.894531 C 96.472656 64.398438 96.480469 64.082031 94.886719 62.648438 C 94.539062 62.382812 94.175781 62.140625 93.800781 61.914062 Z M 168.25 244.222656 C 168.609375 243.996094 168.949219 243.746094 169.273438 243.472656 C 170.871094 241.78125 170.851562 241.507812 169.109375 240.046875 C 168.234375 239.296875 168.101562 239.335938 167.222656 240.175781 C 166.960938 240.421875 166.644531 240.617188 166.375 240.859375 C 166.117188 241.003906 165.941406 241.261719 165.902344 241.554688 C 165.859375 241.847656 165.957031 242.144531 166.164062 242.355469 C 166.539062 242.890625 166.960938 243.394531 167.425781 243.855469 C 167.683594 244.011719 167.960938 244.136719 168.25 244.222656 Z M 162.496094 233.78125 C 162.210938 233.863281 161.933594 233.984375 161.679688 234.132812 C 161.203125 234.507812 160.746094 234.910156 160.320312 235.339844 C 160.117188 235.519531 160 235.773438 160 236.042969 C 160 236.3125 160.117188 236.566406 160.320312 236.742188 C 160.714844 237.203125 161.136719 237.640625 161.582031 238.054688 C 162.183594 238.578125 162.421875 238.542969 163.023438 238.007812 C 163.269531 237.800781 163.519531 237.597656 163.773438 237.402344 C 164.714844 236.652344 164.796875 236.285156 164.148438 235.25 C 163.917969 234.878906 163.636719 234.535156 163.316406 234.230469 C 163.066406 234.046875 162.789062 233.894531 162.496094 233.78125 Z M 151.285156 226.289062 C 151.542969 226.195312 151.792969 226.082031 152.035156 225.949219 C 152.367188 225.71875 152.6875 225.46875 152.988281 225.199219 C 153.578125 224.859375 153.804688 224.128906 153.515625 223.515625 C 153.152344 222.703125 152.761719 221.867188 151.71875 221.746094 C 151.519531 221.738281 151.316406 221.777344 151.132812 221.859375 C 149.066406 222.644531 148.765625 223.835938 150.214844 225.464844 C 150.371094 225.652344 150.539062 225.824219 150.726562 225.980469 C 150.902344 226.09375 151.089844 226.191406 151.285156 226.265625 Z M 144.066406 135.53125 C 145.183594 135.636719 146.550781 134.59375 146.609375 133.597656 C 146.609375 132.847656 145.558594 131.347656 144.90625 131.265625 C 144.253906 131.183594 142.324219 132.457031 142.253906 133.101562 C 142.230469 134.230469 142.976562 135.230469 144.066406 135.53125 Z M 145.867188 219.316406 C 146.558594 219.355469 146.617188 219.316406 147.746094 218.441406 C 148.667969 217.691406 148.75 217.390625 148.121094 216.417969 C 146.6875 214.167969 146.402344 214.679688 144.734375 215.878906 C 144.398438 216.050781 144.160156 216.367188 144.089844 216.734375 C 144.015625 217.105469 144.117188 217.488281 144.367188 217.773438 C 144.605469 218.195312 144.898438 218.585938 145.238281 218.933594 C 145.421875 219.097656 145.636719 219.226562 145.867188 219.316406 Z M 182.785156 252.109375 C 182.785156 252.039062 182.785156 251.824219 182.679688 251.742188 C 182.039062 251.09375 181.300781 250.542969 180.496094 250.113281 C 179.742188 249.8125 179.414062 250.773438 178.992188 251.246094 C 178.800781 251.453125 178.632812 251.683594 178.488281 251.925781 C 178.375 252.09375 178.296875 252.28125 178.265625 252.480469 C 178.226562 253.171875 180.328125 254.730469 180.984375 254.542969 C 181.804688 253.921875 182.429688 253.074219 182.777344 252.109375 Z M 127.839844 188.761719 C 128.125 189.457031 128.367188 190.191406 128.710938 190.859375 C 128.925781 191.285156 129.441406 191.464844 129.875 191.269531 C 130.515625 191.015625 131.152344 190.753906 131.761719 190.445312 C 131.972656 190.363281 132.144531 190.199219 132.234375 189.988281 C 132.324219 189.777344 132.324219 189.539062 132.234375 189.328125 C 131.972656 188.695312 131.667969 188.078125 131.332031 187.480469 C 131.25 187.285156 131.089844 187.140625 130.890625 187.070312 C 130.691406 187.003906 130.472656 187.019531 130.289062 187.117188 L 128.703125 187.710938 C 128.242188 187.875 127.910156 188.277344 127.839844 188.761719 Z M 193.144531 263.613281 C 193.34375 263.59375 193.535156 263.535156 193.714844 263.441406 C 194.53125 262.941406 195.097656 262.128906 195.285156 261.191406 C 195.425781 260.292969 194.53125 260.058594 193.949219 259.640625 C 193.695312 259.433594 193.402344 259.292969 193.082031 259.226562 C 192.777344 259.203125 192.476562 259.292969 192.234375 259.484375 C 191.824219 259.871094 191.457031 260.308594 191.144531 260.777344 C 190.96875 261.042969 190.875 261.355469 190.882812 261.671875 C 190.933594 262.488281 192.210938 263.582031 193.121094 263.613281 Z M 174.28125 249.371094 C 175.390625 249.222656 176.273438 248.378906 176.46875 247.28125 C 176.398438 246.148438 175.511719 245.234375 174.378906 245.121094 C 173.6875 245.121094 172.128906 246.5625 172.128906 247.25 C 172.269531 248.359375 173.148438 249.226562 174.261719 249.355469 Z M 154.234375 229.960938 C 154.886719 230.710938 155.371094 231.390625 155.933594 231.945312 C 156.183594 232.1875 156.535156 232.296875 156.878906 232.246094 C 158.710938 231.496094 159.574219 230.492188 158.125 228.730469 C 158.019531 228.601562 157.929688 228.476562 157.816406 228.363281 C 157.21875 227.765625 156.804688 227.679688 156.113281 228.214844 C 155.421875 228.746094 154.925781 229.269531 154.210938 229.945312 Z M 26.175781 57.042969 C 26.0625 56.699219 26.0625 56.4375 25.933594 56.347656 C 25.230469 55.835938 24.492188 55.351562 23.742188 54.90625 C 23.550781 54.84375 23.339844 54.882812 23.1875 55.011719 C 22.589844 55.609375 22.082031 56.285156 21.683594 57.027344 C 21.339844 57.867188 22.222656 58.273438 22.75 58.722656 C 23.277344 59.171875 23.847656 59.757812 24.441406 59.246094 C 25.09375 58.574219 25.675781 57.835938 26.175781 57.042969 Z M 104.292969 78.441406 C 104.675781 78.285156 105.042969 78.097656 105.398438 77.878906 C 107.0625 76.710938 107.101562 76.222656 105.703125 74.746094 C 104.953125 73.9375 104.722656 73.921875 103.78125 74.589844 C 103.585938 74.730469 103.367188 74.851562 103.164062 74.988281 C 102.347656 75.527344 102.191406 75.847656 102.363281 76.554688 C 102.546875 77.511719 103.296875 78.257812 104.253906 78.441406 Z M 197.859375 265.964844 C 197.996094 266.394531 198.171875 266.808594 198.386719 267.203125 C 198.886719 267.863281 199.738281 268.160156 200.542969 267.953125 C 201.179688 267.667969 202.308594 266.09375 202.238281 265.5625 C 202.089844 264.257812 200.097656 263.3125 199.128906 264.136719 C 198.621094 264.691406 198.179688 265.304688 197.824219 265.964844 Z M 206.355469 267.683594 C 206.121094 267.847656 205.898438 268.03125 205.695312 268.238281 C 205.433594 268.542969 205.222656 268.890625 204.988281 269.21875 C 204.679688 269.527344 204.535156 269.964844 204.605469 270.398438 C 204.671875 270.828125 204.945312 271.203125 205.335938 271.398438 C 205.632812 271.605469 205.957031 271.777344 206.296875 271.910156 C 207.046875 272.210938 207.609375 272.171875 207.925781 271.640625 C 208.367188 270.890625 209.074219 270.246094 208.894531 269.25 C 208.886719 269.207031 208.863281 269.171875 208.835938 269.144531 C 208.144531 268.4375 207.273438 267.929688 206.316406 267.683594 Z M 228.136719 278.925781 C 227.476562 278.777344 226.796875 279.082031 226.464844 279.675781 C 226.277344 280.027344 226.132812 280.421875 225.960938 280.777344 C 225.71875 281.277344 225.53125 281.832031 226.109375 282.175781 C 226.921875 282.664062 227.710938 283.316406 228.777344 283.023438 C 228.820312 283.019531 228.855469 282.996094 228.882812 282.964844 C 229.296875 282.238281 229.664062 281.488281 229.988281 280.714844 C 230 280.355469 229.847656 280.011719 229.566406 279.785156 C 229.101562 279.449219 228.609375 279.152344 228.09375 278.902344 Z M 215.941406 273.5 C 215.789062 273.191406 215.753906 272.9375 215.609375 272.855469 C 214.882812 272.417969 214.132812 272.03125 213.355469 271.691406 C 213.167969 271.617188 212.742188 271.847656 212.558594 272.058594 C 212.21875 272.507812 211.90625 272.980469 211.621094 273.46875 C 211.457031 273.652344 211.375 273.898438 211.394531 274.144531 C 211.414062 274.394531 211.535156 274.621094 211.726562 274.78125 C 212.292969 275.234375 212.902344 275.632812 213.542969 275.972656 C 213.769531 276.089844 214.296875 276.0625 214.414062 275.898438 C 214.972656 275.101562 215.414062 274.261719 215.894531 273.476562 Z M 74.382812 45.390625 C 74.03125 45.609375 73.699219 45.859375 73.390625 46.140625 C 72.152344 47.464844 72.226562 48.125 73.675781 49.136719 C 74.847656 49.976562 75.605469 49.886719 76.378906 48.621094 C 76.671875 48.148438 76.835938 47.605469 76.855469 47.054688 C 76.867188 46.648438 75.089844 45.425781 74.382812 45.390625 Z M 222.875 277.140625 C 222.753906 276.804688 222.738281 276.527344 222.609375 276.449219 C 221.871094 275.980469 221.078125 275.601562 220.246094 275.328125 C 219.492188 275.140625 219.492188 276.078125 219.101562 276.527344 L 219.035156 276.625 C 218.195312 277.890625 218.285156 278.210938 219.492188 279.042969 C 219.8125 279.289062 220.167969 279.476562 220.550781 279.597656 C 220.867188 279.675781 221.410156 279.644531 221.542969 279.449219 C 222.027344 278.703125 222.46875 277.933594 222.875 277.140625 Z M 185.820312 23.699219 C 185.742188 23.507812 185.648438 23.324219 185.550781 23.144531 C 185.347656 22.800781 185.097656 22.476562 184.902344 22.125 C 184.339844 21.113281 183.996094 20.984375 182.957031 21.464844 C 182.738281 21.570312 182.527344 21.6875 182.320312 21.816406 C 181.296875 22.46875 181.1875 22.988281 181.832031 24.066406 C 183.035156 26 183.972656 26.082031 185.429688 24.359375 C 185.574219 24.148438 185.703125 23.925781 185.820312 23.699219 Z M 171.40625 34.925781 C 171.636719 34.855469 171.863281 34.761719 172.074219 34.640625 C 172.496094 34.332031 172.898438 34 173.285156 33.644531 C 173.667969 33.277344 173.914062 32.78125 173.457031 32.378906 C 172.765625 31.761719 172.796875 30.210938 171.390625 30.5625 C 170.710938 30.8125 170.089844 31.191406 169.558594 31.679688 C 169.371094 31.816406 169.25 32.019531 169.21875 32.246094 C 169.1875 32.472656 169.25 32.699219 169.394531 32.878906 C 169.851562 33.488281 170.363281 34.066406 170.894531 34.625 C 171.046875 34.753906 171.21875 34.855469 171.40625 34.925781 Z M 207.496094 6.25 C 207.574219 6.609375 207.675781 6.957031 207.804688 7.300781 C 208.894531 9.503906 209.082031 9.511719 211.148438 8.238281 C 211.898438 7.789062 211.898438 7.585938 211.523438 6.738281 C 211.34375 6.332031 211.207031 5.90625 211.027344 5.5 C 210.855469 4.960938 210.300781 4.636719 209.742188 4.75 C 209.21875 4.828125 208.707031 5 208.242188 5.253906 C 207.941406 5.542969 207.691406 5.878906 207.496094 6.25 Z M 234.757812 282.066406 C 233.75 281.96875 232.992188 282.957031 232.863281 284.539062 C 232.804688 285.289062 233.929688 286.148438 235.160156 286.269531 C 235.875 286.335938 236.828125 285.0625 236.972656 283.855469 C 237.078125 282.933594 236.136719 282.175781 234.757812 282.035156 Z M 70.898438 219.257812 C 70.898438 219.191406 70.898438 218.988281 70.769531 218.898438 C 70.125 218.304688 69.460938 217.714844 68.78125 217.167969 C 68.601562 217.082031 68.394531 217.082031 68.214844 217.167969 C 67.410156 217.5625 66.796875 218.261719 66.511719 219.113281 C 66.285156 219.863281 68.214844 221.648438 68.996094 221.476562 C 69.882812 220.996094 70.558594 220.203125 70.898438 219.257812 Z M 140.4375 128.464844 C 141.332031 128.359375 142.152344 127.925781 142.742188 127.25 C 143.277344 126.582031 142.628906 125.886719 142.300781 125.253906 C 142.203125 125.078125 142.09375 124.90625 141.96875 124.746094 C 141.84375 124.484375 141.609375 124.289062 141.332031 124.210938 C 141.050781 124.128906 140.75 124.175781 140.503906 124.332031 C 139.882812 124.625 139.351562 125.074219 138.957031 125.636719 C 138.542969 126.105469 138.503906 126.789062 138.859375 127.300781 C 139.117188 127.960938 139.730469 128.410156 140.4375 128.464844 Z M 133.1875 198.675781 C 133.652344 198.527344 134.066406 198.375 134.496094 198.257812 C 135.207031 198.113281 135.710938 197.480469 135.699219 196.757812 C 135.683594 195.851562 135.25 195.003906 134.527344 194.464844 C 134.308594 194.359375 134.054688 194.359375 133.835938 194.464844 C 133.03125 194.898438 132.257812 195.386719 131.476562 195.859375 C 131.753906 196.5625 132.015625 197.265625 132.308594 197.964844 C 132.363281 198.121094 132.460938 198.257812 132.585938 198.359375 C 132.78125 198.480469 132.980469 198.585938 133.1875 198.675781 Z M 145.753906 139.960938 C 145.742188 140.929688 146.132812 141.859375 146.828125 142.53125 C 147.386719 143.117188 148.03125 142.488281 148.617188 142.285156 C 148.808594 142.21875 148.996094 142.132812 149.171875 142.035156 C 150.027344 141.585938 150.171875 141.289062 149.878906 140.386719 C 149.777344 140.078125 149.648438 139.78125 149.496094 139.496094 C 148.917969 138.402344 148.632812 138.304688 147.46875 138.820312 C 147.050781 138.984375 146.648438 139.179688 146.265625 139.40625 C 146.066406 139.5625 145.894531 139.75 145.753906 139.960938 Z M 57.933594 232.589844 C 58.128906 232.554688 58.285156 232.589844 58.355469 232.5 C 58.945312 231.917969 59.539062 231.332031 60.097656 230.71875 C 60.195312 230.542969 60.195312 230.328125 60.097656 230.15625 C 59.601562 229.53125 59.066406 228.933594 58.511719 228.355469 C 58.359375 228.222656 58.152344 228.167969 57.957031 228.207031 C 57.097656 228.304688 56.34375 228.828125 55.957031 229.601562 C 55.71875 230.265625 55.941406 231.007812 56.507812 231.4375 C 56.738281 231.703125 56.992188 231.953125 57.257812 232.1875 C 57.46875 232.34375 57.695312 232.480469 57.933594 232.589844 Z M 189.890625 21.234375 C 190.320312 20.964844 190.921875 20.632812 191.460938 20.230469 C 192.210938 19.660156 192.210938 19.425781 191.738281 18.640625 C 191.5 18.265625 191.332031 17.851562 191.085938 17.484375 C 190.949219 17.246094 190.746094 17.050781 190.5 16.921875 C 189.867188 16.652344 187.984375 17.636719 187.742188 18.308594 C 187.503906 18.984375 188.960938 21.195312 189.890625 21.226562 Z M 127.441406 179.921875 C 127.007812 180.097656 126.5625 180.296875 126.105469 180.441406 C 124.738281 180.859375 124.601562 181.136719 124.980469 182.523438 C 125.054688 182.796875 125.148438 183.066406 125.257812 183.328125 C 125.648438 184.171875 126.007812 184.339844 126.894531 184.015625 C 127.308594 183.859375 127.710938 183.671875 128.117188 183.492188 C 128.667969 183.25 129.199219 182.914062 128.976562 182.230469 C 128.6875 181.378906 128.539062 180.394531 127.578125 179.9375 C 127.53125 179.929688 127.488281 179.925781 127.441406 179.921875 Z M 1.726562 271.421875 C 1.839844 271.710938 1.929688 272.007812 1.996094 272.3125 C 2.160156 273.097656 2.832031 273.671875 3.632812 273.707031 C 4.558594 273.859375 5.195312 273.167969 5.714844 272.464844 C 6.234375 271.757812 5.609375 271.339844 5.347656 270.824219 C 5.226562 270.613281 5.085938 270.414062 4.925781 270.230469 C 4.265625 269.414062 4.054688 269.324219 3.296875 269.59375 C 2.425781 269.789062 1.789062 270.535156 1.726562 271.421875 Z M 54.800781 235.582031 C 54.5 235.199219 54.207031 234.773438 53.863281 234.390625 C 52.5625 232.972656 52.441406 232.980469 51.074219 234.261719 C 50.039062 235.242188 50.023438 235.484375 50.957031 236.5625 C 52.34375 238.152344 53.394531 238.0625 54.523438 236.242188 C 54.632812 236.027344 54.726562 235.808594 54.800781 235.582031 Z M 35.453125 252.339844 C 36.445312 252.261719 37.25 251.507812 37.398438 250.527344 C 37.398438 249.722656 36.1875 248.164062 35.511719 248.105469 C 34.417969 248.0625 33.457031 248.828125 33.257812 249.902344 C 33.425781 251.085938 34.292969 252.046875 35.453125 252.339844 Z M 111.445312 82.144531 C 111.144531 81.226562 110.511719 80.453125 109.671875 79.980469 C 109.476562 79.929688 109.273438 79.949219 109.09375 80.039062 C 108.339844 80.585938 107.265625 81.019531 107.0625 81.988281 C 106.890625 82.804688 107.816406 83.335938 108.296875 83.949219 C 108.371094 84.046875 108.464844 84.125 108.574219 84.175781 C 108.710938 84.253906 108.867188 84.300781 109.023438 84.3125 C 109.988281 83.910156 110.820312 83.242188 111.414062 82.382812 C 111.429688 82.304688 111.441406 82.226562 111.445312 82.144531 Z M 12.316406 268.363281 C 12.398438 267.613281 11.144531 265.832031 10.535156 265.679688 C 10.457031 265.671875 10.375 265.671875 10.296875 265.679688 C 9.511719 265.71875 8.792969 266.121094 8.351562 266.769531 C 8.054688 267.320312 8.121094 267.992188 8.515625 268.476562 C 9.523438 270.296875 10.492188 270.425781 11.957031 268.917969 C 12.097656 268.746094 12.21875 268.5625 12.316406 268.363281 Z M 142.203125 208.40625 C 141.261719 208.800781 140.25 209.152344 139.722656 210.039062 C 139.199219 210.921875 140.054688 211.449219 140.421875 212.078125 C 140.667969 212.503906 141.082031 212.984375 141.585938 212.707031 C 142.433594 212.347656 143.183594 211.796875 143.78125 211.09375 C 144.261719 210.34375 143.402344 209.632812 143.027344 208.960938 C 142.9375 208.824219 142.820312 208.707031 142.683594 208.621094 C 142.53125 208.519531 142.371094 208.429688 142.203125 208.359375 Z M 154.4375 49.511719 C 155.300781 49.441406 156.070312 48.9375 156.472656 48.171875 C 156.835938 47.53125 156.472656 47.007812 156.082031 46.527344 C 155.828125 46.21875 155.550781 45.925781 155.25 45.660156 C 154.601562 45.082031 154.242188 45.074219 153.550781 45.660156 C 153.332031 45.835938 153.128906 46.03125 152.9375 46.238281 C 152.085938 47.128906 152.085938 47.421875 152.9375 48.363281 C 153.132812 48.617188 153.355469 48.855469 153.597656 49.070312 C 153.867188 49.238281 154.148438 49.386719 154.4375 49.511719 Z M 145.941406 57.945312 C 145.757812 57.585938 145.546875 57.246094 145.304688 56.925781 C 143.871094 55.261719 143.433594 55.273438 142.007812 56.96875 C 141.390625 57.71875 141.398438 57.882812 142.050781 58.582031 C 142.269531 58.820312 142.472656 59.074219 142.667969 59.328125 C 143.035156 59.792969 143.417969 60.199219 144.09375 59.980469 C 145.039062 59.691406 145.746094 58.910156 145.941406 57.945312 Z M 96.976562 70.289062 C 97.976562 72.648438 99.230469 72.964844 100.859375 71.398438 C 101.144531 71.195312 101.335938 70.886719 101.390625 70.539062 C 101.445312 70.195312 101.359375 69.84375 101.152344 69.5625 C 100.929688 69.21875 100.679688 68.894531 100.402344 68.59375 C 99.757812 67.898438 99.367188 67.84375 98.644531 68.480469 C 98.066406 69.019531 97.5625 69.65625 96.976562 70.289062 Z M 154.453125 152.730469 C 153.558594 152.835938 152.726562 153.253906 152.109375 153.910156 C 151.90625 154.25 151.847656 154.65625 151.945312 155.039062 C 152.046875 155.429688 152.230469 155.792969 152.476562 156.113281 C 152.957031 156.824219 153.152344 156.863281 153.980469 156.515625 C 154.234375 156.394531 154.5 156.300781 154.777344 156.238281 C 156.007812 156.074219 156.277344 155.25 155.933594 154.074219 C 155.820312 153.335938 155.199219 152.78125 154.453125 152.746094 Z M 73.828125 215.628906 C 74.621094 215.632812 75.335938 215.148438 75.621094 214.40625 C 76.230469 213.296875 75.359375 212.773438 74.789062 212.160156 C 74.089844 211.410156 73.707031 211.28125 72.992188 211.582031 L 72.878906 211.636719 C 72.035156 212.015625 71.554688 212.917969 71.707031 213.832031 C 72.09375 214.726562 72.878906 215.390625 73.828125 215.628906 Z M 30.433594 59.03125 C 30.105469 59.128906 29.894531 59.128906 29.8125 59.234375 C 29.300781 59.890625 28.804688 60.566406 28.308594 61.265625 C 28.242188 61.410156 28.242188 61.582031 28.308594 61.726562 C 28.660156 62.558594 29.367188 63.191406 30.230469 63.453125 C 31.074219 63.714844 31.449219 63.015625 31.832031 62.457031 C 32.089844 62.09375 32.3125 61.707031 32.492188 61.300781 C 32.582031 61.070312 32.605469 60.632812 32.492188 60.550781 C 31.808594 59.960938 31.074219 59.488281 30.433594 59.03125 Z M 64.128906 38.6875 C 64.0625 38.53125 64.046875 38.328125 63.941406 38.253906 C 63.28125 37.789062 62.613281 37.347656 61.9375 36.914062 C 61.824219 36.871094 61.699219 36.871094 61.582031 36.914062 C 60.695312 37.480469 60.039062 38.347656 59.734375 39.355469 C 59.734375 40.105469 61.945312 41.542969 62.550781 41.085938 C 63.292969 40.453125 63.839844 39.621094 64.128906 38.6875 Z M 19.617188 52.507812 C 19.5 52.261719 19.355469 52.023438 19.191406 51.804688 C 18.894531 51.535156 18.585938 51.285156 18.257812 51.054688 C 17.109375 50.214844 16.671875 50.214844 15.75 51.355469 C 15.539062 51.585938 15.351562 51.839844 15.1875 52.105469 C 15.03125 52.320312 14.972656 52.59375 15.027344 52.851562 C 15.082031 53.113281 15.242188 53.339844 15.472656 53.476562 C 16.003906 53.84375 16.507812 54.226562 17.058594 54.578125 C 17.273438 54.707031 17.726562 54.8125 17.808594 54.707031 C 18.453125 54.03125 19.023438 53.265625 19.617188 52.507812 Z M 76.582031 207.746094 C 76.582031 208.496094 78.046875 209.992188 78.800781 209.992188 C 79.035156 209.96875 79.261719 209.875 79.445312 209.722656 C 81.171875 208.425781 81.15625 207.394531 79.445312 206.164062 C 79.308594 206.074219 79.183594 205.929688 79.039062 205.910156 C 78.707031 205.808594 78.355469 205.785156 78.011719 205.839844 C 77.191406 206.125 76.625 206.878906 76.582031 207.746094 Z M 94.183594 183.386719 C 94.1875 183.570312 94.226562 183.753906 94.296875 183.925781 C 94.796875 184.714844 95.578125 185.285156 96.480469 185.53125 C 96.644531 185.566406 96.8125 185.546875 96.960938 185.476562 C 97.746094 185.109375 98.285156 184.367188 98.390625 183.507812 C 98.570312 182.757812 97.945312 182.441406 97.433594 182.132812 C 97.019531 181.882812 96.582031 181.667969 96.128906 181.496094 C 95.90625 181.40625 95.660156 181.40625 95.4375 181.496094 C 94.738281 181.886719 94.269531 182.589844 94.183594 183.386719 Z M 43.714844 245.445312 C 43.324219 244.914062 42.964844 244.335938 42.503906 243.832031 C 42.316406 243.535156 42.015625 243.324219 41.667969 243.25 C 41.324219 243.171875 40.960938 243.238281 40.664062 243.429688 C 39.898438 243.746094 39.367188 244.457031 39.28125 245.28125 C 39.292969 245.4375 39.335938 245.59375 39.410156 245.738281 C 40.433594 247.777344 41.882812 247.949219 43.292969 246.1875 C 43.449219 245.949219 43.589844 245.699219 43.714844 245.445312 Z M 25.140625 259.863281 C 25.03125 258.863281 24.546875 257.941406 23.785156 257.277344 C 23.535156 257.160156 23.25 257.132812 22.984375 257.203125 C 21.128906 258 20.414062 258.703125 21.773438 260.496094 C 21.867188 260.628906 21.964844 260.753906 22.074219 260.875 C 22.496094 261.339844 23.160156 261.496094 23.742188 261.265625 C 24.414062 261.0625 24.9375 260.535156 25.140625 259.863281 Z M 83.101562 133.597656 C 83.09375 133.726562 83.09375 133.851562 83.101562 133.980469 C 83.222656 134.632812 85.027344 135.996094 85.695312 135.941406 C 85.808594 135.941406 85.972656 135.941406 86.023438 135.832031 C 86.542969 135.175781 86.988281 134.472656 87.355469 133.726562 C 87.609375 133.082031 86.800781 132.976562 86.445312 132.617188 C 86.332031 132.503906 86.199219 132.398438 86.078125 132.292969 C 85.613281 131.867188 85.09375 131.542969 84.449219 131.875 C 83.746094 132.195312 83.246094 132.839844 83.101562 133.597656 Z M 63.183594 222.683594 C 61.027344 223.6875 60.800781 224.929688 62.371094 226.429688 L 62.453125 226.519531 C 62.6875 226.808594 63.03125 226.984375 63.402344 227 C 63.773438 227.019531 64.136719 226.875 64.394531 226.609375 C 64.660156 226.421875 64.914062 226.210938 65.144531 225.980469 C 65.789062 225.304688 65.820312 224.878906 65.144531 224.21875 C 64.46875 223.558594 63.792969 223.160156 63.183594 222.683594 Z M 140.765625 63.324219 C 140.746094 63.191406 140.691406 63.066406 140.609375 62.957031 C 140.136719 62.417969 139.640625 61.886719 139.109375 61.375 C 138.957031 61.242188 138.765625 61.160156 138.566406 61.144531 C 137.921875 61.082031 136.378906 62.433594 136.3125 63.101562 C 136.246094 63.765625 138.125 65.640625 138.84375 65.5 C 139.738281 65.042969 140.421875 64.265625 140.765625 63.324219 Z M 130.746094 74.5 C 130.746094 74.425781 130.746094 74.214844 130.640625 74.132812 C 129.890625 73.503906 129.253906 72.632812 128.390625 72.355469 C 127.523438 72.078125 127.222656 73.164062 126.714844 73.707031 C 126.589844 73.8125 126.5 73.953125 126.457031 74.109375 C 126.414062 74.363281 126.339844 74.746094 126.457031 74.859375 C 127.058594 75.453125 127.691406 76.007812 128.359375 76.523438 C 128.535156 76.617188 128.742188 76.644531 128.9375 76.597656 C 129.792969 76.164062 130.445312 75.410156 130.746094 74.5 Z M 14.707031 263.425781 C 14.90625 264.257812 15.359375 265.003906 16.003906 265.570312 C 16.199219 265.710938 16.445312 265.75 16.671875 265.679688 C 17.277344 265.445312 17.847656 265.136719 18.378906 264.765625 C 18.660156 264.585938 18.84375 264.289062 18.882812 263.960938 C 18.921875 263.628906 18.8125 263.296875 18.582031 263.058594 C 18.351562 262.730469 18.097656 262.417969 17.832031 262.121094 C 17.476562 261.53125 16.730469 261.316406 16.117188 261.625 C 15.3125 261.867188 14.746094 262.585938 14.707031 263.425781 Z M 202.601562 12.953125 C 203.527344 12.820312 204.339844 12.265625 204.800781 11.453125 C 204.859375 11.308594 204.875 11.148438 204.839844 10.996094 C 204.554688 10.097656 203.996094 9.308594 203.238281 8.746094 C 203.109375 8.65625 202.953125 8.609375 202.796875 8.613281 C 201.804688 8.707031 200.984375 9.417969 200.746094 10.378906 C 200.675781 11.175781 201.683594 12.734375 202.359375 12.890625 C 202.4375 12.917969 202.519531 12.9375 202.601562 12.953125 Z M 29.148438 257.078125 C 29.648438 256.835938 30.132812 256.570312 30.597656 256.273438 C 31.636719 255.523438 31.695312 255.089844 30.953125 254.101562 C 30.765625 253.789062 30.542969 253.503906 30.285156 253.246094 C 29.992188 252.988281 29.628906 252.824219 29.238281 252.78125 C 28.421875 252.863281 27.703125 253.351562 27.324219 254.078125 C 26.902344 254.777344 27.324219 255.300781 27.738281 255.808594 C 27.867188 256.015625 28.011719 256.210938 28.164062 256.394531 C 28.480469 256.640625 28.808594 256.871094 29.148438 257.078125 Z M 106.011719 105.617188 C 106.277344 105.496094 106.53125 105.34375 106.765625 105.167969 C 107.011719 104.902344 107.238281 104.613281 107.433594 104.308594 C 108.144531 103.273438 108.125 103.144531 107.148438 102.367188 C 106.929688 102.1875 106.742188 101.976562 106.53125 101.789062 C 105.703125 101.039062 105.398438 101.039062 104.578125 101.789062 C 103.074219 103.128906 103.128906 103.648438 104.773438 104.832031 C 105.164062 105.109375 105.578125 105.347656 106.011719 105.617188 Z M 101.625 111.613281 C 101.78125 111.597656 101.933594 111.570312 102.085938 111.53125 C 102.804688 110.992188 103.332031 110.234375 103.585938 109.375 C 103.585938 108.667969 101.421875 107.058594 100.882812 107.453125 C 100.273438 107.96875 99.734375 108.5625 99.273438 109.214844 C 99.160156 109.425781 99.160156 109.679688 99.273438 109.890625 C 99.914062 110.632812 100.71875 111.214844 101.625 111.59375 Z M 150.449219 149.613281 C 151.523438 149.613281 152.980469 148.675781 152.988281 147.933594 C 152.988281 146.984375 152.070312 145.613281 151.417969 145.621094 C 150.050781 145.621094 148.863281 146.414062 148.835938 147.328125 C 148.804688 148.242188 149.789062 149.578125 150.480469 149.589844 Z M 53.480469 35.414062 C 53.675781 36.171875 54.238281 36.78125 54.980469 37.03125 C 55.632812 37.367188 56.4375 37.113281 56.777344 36.464844 C 57.289062 35.714844 58.097656 35.03125 57.429688 33.972656 C 57.371094 33.867188 57.285156 33.773438 57.183594 33.703125 C 56.699219 33.417969 56.199219 33.167969 55.679688 32.957031 C 55.410156 32.898438 55.132812 32.972656 54.929688 33.15625 C 54.359375 33.898438 53.921875 34.671875 53.480469 35.414062 Z M 131.394531 68.699219 C 131.316406 69.5625 131.933594 70.011719 132.496094 70.46875 C 132.824219 70.816406 133.292969 70.996094 133.769531 70.960938 C 134.246094 70.925781 134.679688 70.679688 134.953125 70.289062 C 135.703125 69.417969 135.703125 68.863281 134.902344 67.980469 C 134.765625 67.828125 134.636719 67.671875 134.496094 67.523438 C 133.8125 66.773438 133.414062 66.652344 132.699219 66.953125 C 131.949219 67.210938 131.429688 67.90625 131.394531 68.699219 Z M 94.234375 189.523438 C 94.207031 189.402344 94.167969 189.285156 94.113281 189.171875 C 93.644531 188.355469 92.859375 187.765625 91.945312 187.539062 C 90.945312 187.34375 90.75 188.429688 90.269531 189.039062 C 89.921875 189.472656 89.734375 190.019531 90.222656 190.445312 C 90.785156 190.90625 91.382812 191.316406 92.011719 191.675781 C 92.230469 191.773438 92.472656 191.789062 92.703125 191.726562 C 93.457031 191.195312 93.996094 190.414062 94.234375 189.523438 Z M 177.609375 25.59375 C 176.859375 26.097656 176.339844 26.433594 175.84375 26.832031 C 175.152344 27.386719 175.09375 27.582031 175.515625 28.375 C 175.703125 28.777344 175.941406 29.152344 176.21875 29.492188 C 176.671875 30.042969 177.457031 30.179688 178.070312 29.816406 C 178.359375 29.671875 178.636719 29.503906 178.894531 29.3125 C 179.578125 28.804688 179.714844 28.375 179.253906 27.671875 C 178.796875 26.96875 178.210938 26.367188 177.59375 25.59375 Z M 162.429688 42.285156 C 162.371094 42.089844 162.289062 41.898438 162.183594 41.722656 C 161.953125 41.394531 161.703125 41.082031 161.429688 40.789062 C 160.550781 39.835938 160.019531 39.796875 159.058594 40.621094 C 158.800781 40.828125 158.578125 41.066406 158.390625 41.335938 C 158.078125 41.738281 158.078125 42.296875 158.390625 42.699219 C 158.800781 43.199219 159.246094 43.671875 159.71875 44.117188 C 159.871094 44.246094 160.066406 44.320312 160.265625 44.324219 C 160.890625 44.355469 162.390625 43.011719 162.429688 42.285156 Z M 106.304688 171.078125 C 106.183594 170.699219 106.179688 170.332031 106.003906 170.179688 C 105.515625 169.699219 104.976562 169.273438 104.398438 168.90625 C 103.820312 168.546875 103.355469 168.800781 102.609375 169.730469 C 101.867188 170.660156 101.859375 171.042969 102.242188 171.566406 C 102.289062 171.636719 102.347656 171.695312 102.414062 171.738281 C 103.023438 172.132812 103.664062 172.480469 104.332031 172.773438 C 104.707031 172.878906 105.109375 172.800781 105.417969 172.5625 C 105.773438 172.105469 106.070312 171.609375 106.304688 171.078125 Z M 112.359375 97.628906 C 112.261719 97.308594 112.261719 97.105469 112.164062 97.015625 C 111.5625 96.484375 110.957031 95.949219 110.300781 95.46875 C 110.074219 95.386719 109.824219 95.386719 109.59375 95.46875 C 108.625 95.839844 107.992188 96.78125 108.027344 97.816406 C 108.199219 98.519531 109.925781 99.75 110.570312 99.628906 C 110.65625 99.628906 110.753906 99.628906 110.796875 99.554688 C 111.316406 98.84375 111.863281 98.183594 112.359375 97.597656 Z M 88.945312 125.707031 C 88.761719 125.726562 88.582031 125.761719 88.40625 125.816406 C 87.648438 126.226562 87.117188 126.960938 86.972656 127.8125 C 86.746094 128.5625 87.496094 128.800781 87.976562 129.136719 C 88.292969 129.390625 88.640625 129.59375 89.015625 129.746094 C 89.324219 129.84375 89.832031 129.863281 90 129.683594 C 90.464844 129.132812 90.871094 128.535156 91.214844 127.902344 C 91.292969 127.71875 91.265625 127.507812 91.148438 127.347656 C 90.40625 126.722656 89.625 126.171875 88.945312 125.675781 Z M 97.210938 117.753906 C 97.378906 117.730469 97.546875 117.695312 97.710938 117.648438 C 98.617188 117.246094 99.179688 116.328125 99.125 115.339844 C 98.96875 114.695312 97.164062 113.414062 96.578125 113.535156 C 96.503906 113.535156 96.398438 113.570312 96.359375 113.632812 C 95.8125 114.261719 95.339844 114.957031 94.957031 115.699219 C 94.679688 116.375 95.542969 116.53125 95.933594 116.890625 C 96.136719 117.089844 96.351562 117.273438 96.578125 117.445312 C 96.78125 117.550781 96.992188 117.644531 97.210938 117.722656 Z M 148.871094 54.570312 C 149.859375 54.460938 150.730469 53.882812 151.214844 53.019531 C 151.277344 52.789062 151.246094 52.542969 151.125 52.335938 C 150.578125 51.695312 149.988281 51.085938 149.367188 50.515625 C 149.132812 50.394531 148.851562 50.394531 148.617188 50.515625 C 148.117188 50.929688 147.648438 51.371094 147.203125 51.84375 C 146.949219 52.125 146.949219 52.554688 147.203125 52.839844 C 147.550781 53.332031 147.925781 53.800781 148.332031 54.25 C 148.488281 54.390625 148.671875 54.5 148.871094 54.570312 Z M 83.734375 104.246094 C 83.546875 103.917969 83.339844 103.597656 83.117188 103.289062 C 82.230469 102.148438 81.878906 102.105469 80.765625 102.996094 C 80.382812 103.292969 80.019531 103.617188 79.679688 103.960938 C 79.519531 104.136719 79.425781 104.359375 79.40625 104.59375 C 79.746094 105.410156 80.332031 106.101562 81.082031 106.570312 C 81.742188 106.742188 83.742188 105.140625 83.726562 104.246094 Z M 83.320312 199.433594 C 83.171875 199.433594 82.953125 199.433594 82.871094 199.539062 C 82.359375 200.144531 81.863281 200.773438 81.367188 201.410156 C 81.300781 201.507812 81.367188 201.734375 81.421875 201.867188 C 81.8125 202.78125 82.640625 203.433594 83.621094 203.601562 C 84.484375 203.734375 84.777344 202.851562 85.222656 202.332031 C 85.351562 202.183594 85.449219 202.003906 85.5 201.808594 C 85.5625 201.621094 85.5625 201.414062 85.5 201.222656 C 85.03125 200.371094 84.246094 199.734375 83.3125 199.449219 Z M 198.363281 15.183594 C 198.003906 14.503906 197.679688 13.777344 197.246094 13.117188 C 197.121094 12.878906 196.890625 12.710938 196.625 12.667969 C 196.359375 12.621094 196.089844 12.703125 195.894531 12.882812 C 195.464844 13.183594 195.007812 13.445312 194.5625 13.722656 C 194.324219 13.804688 194.144531 14 194.082031 14.242188 C 194.019531 14.484375 194.082031 14.742188 194.246094 14.929688 C 194.601562 15.46875 194.945312 16.007812 195.308594 16.542969 C 195.53125 16.878906 195.824219 17.082031 196.222656 16.863281 C 196.792969 16.550781 197.351562 16.234375 197.882812 15.875 C 198.0625 15.738281 198.152344 15.507812 198.363281 15.183594 Z M 184.84375 256.964844 C 184.730469 258.269531 186.234375 259.476562 187.195312 259.0625 C 187.78125 258.816406 188.96875 257.1875 188.871094 256.664062 C 188.695312 255.773438 187.902344 255.441406 187.230469 255.007812 C 187.167969 254.957031 187.089844 254.925781 187.007812 254.917969 C 186.820312 254.917969 186.570312 254.878906 186.4375 254.976562 C 185.742188 255.488281 185.195312 256.175781 184.851562 256.964844 Z M 120.960938 170.234375 C 121.597656 169.960938 122.21875 169.65625 122.824219 169.316406 C 123.058594 169.097656 123.1875 168.792969 123.183594 168.472656 C 123.269531 167.800781 122.964844 167.140625 122.398438 166.773438 C 121.832031 166.40625 121.101562 166.394531 120.523438 166.746094 C 120.234375 166.890625 119.953125 167.054688 119.683594 167.234375 C 118.933594 167.757812 118.84375 168.035156 119.105469 168.867188 C 119.3125 169.710938 120.09375 170.285156 120.960938 170.234375 Z M 107.628906 162.59375 C 107.289062 162.761719 106.988281 162.804688 106.875 162.96875 C 106.394531 163.554688 106.035156 164.230469 105.816406 164.957031 C 105.710938 165.667969 106.605469 165.871094 107.132812 166.207031 C 108.558594 167.136719 108.941406 167.03125 109.746094 165.554688 C 109.875 165.351562 109.972656 165.128906 110.03125 164.894531 C 110.070312 164.671875 110.070312 164.328125 109.941406 164.222656 C 109.199219 163.644531 108.394531 163.121094 107.628906 162.59375 Z M 157.277344 159.371094 C 156.527344 159.726562 155.707031 160.0625 154.941406 160.503906 C 154.753906 160.609375 154.664062 161.074219 154.707031 161.335938 C 155.070312 163.351562 155.691406 163.683594 157.570312 162.917969 C 157.878906 162.816406 158.171875 162.675781 158.441406 162.496094 C 158.636719 162.339844 158.898438 161.996094 158.847656 161.832031 C 158.585938 161.078125 158.277344 160.347656 157.921875 159.636719 C 157.886719 159.507812 157.570312 159.484375 157.277344 159.371094 Z M 45.035156 68.480469 C 44.914062 68.246094 44.761719 68.027344 44.585938 67.828125 C 44.320312 67.589844 44.027344 67.386719 43.714844 67.214844 C 42.738281 66.660156 42.585938 66.699219 41.949219 67.582031 C 41.738281 67.882812 41.492188 68.152344 41.273438 68.4375 C 40.703125 69.1875 40.710938 69.546875 41.363281 70.21875 C 41.589844 70.460938 41.839844 70.671875 42.113281 70.855469 C 42.910156 71.410156 43.398438 71.328125 43.945312 70.542969 C 44.246094 70.113281 44.519531 69.664062 44.78125 69.207031 C 44.882812 68.972656 44.96875 68.730469 45.035156 68.480469 Z M 76.183594 152.222656 C 76.003906 151.953125 75.796875 151.703125 75.570312 151.472656 C 75.292969 151.242188 74.945312 151.097656 74.660156 150.875 C 73.542969 150.027344 73.226562 150.050781 72.363281 151.105469 C 72.179688 151.324219 72.015625 151.554688 71.875 151.800781 C 71.703125 152.011719 71.632812 152.289062 71.691406 152.554688 C 71.75 152.820312 71.921875 153.046875 72.167969 153.167969 C 72.722656 153.574219 73.316406 153.929688 73.941406 154.222656 C 74.1875 154.34375 74.691406 154.351562 74.824219 154.222656 C 75.316406 153.582031 75.769531 152.914062 76.183594 152.222656 Z M 116.175781 161.214844 C 116.128906 162.65625 116.851562 163.585938 117.789062 163.398438 C 118.535156 163.226562 119.253906 162.953125 119.921875 162.585938 C 120.507812 162.289062 120.449219 161.703125 120.195312 161.207031 C 119.878906 160.59375 119.839844 159.589844 118.925781 159.640625 C 118.128906 159.757812 117.363281 160.023438 116.671875 160.429688 C 116.378906 160.585938 116.265625 161.074219 116.175781 161.222656 Z M 70.355469 42.886719 C 70.261719 42.109375 69.746094 41.449219 69.011719 41.167969 C 68.351562 40.890625 67.585938 41.15625 67.238281 41.785156 C 65.878906 43.507812 66.058594 44.371094 67.992188 45.148438 C 68.246094 45.253906 68.527344 45.277344 68.792969 45.21875 C 69.253906 45.097656 70.363281 43.410156 70.371094 42.894531 Z M 81.542969 142.210938 C 81.785156 142.195312 82.023438 142.136719 82.246094 142.035156 C 82.878906 141.582031 83.277344 140.871094 83.328125 140.09375 C 83.417969 139.347656 82.816406 139.152344 82.34375 138.859375 C 82.03125 138.675781 81.703125 138.527344 81.359375 138.410156 C 80.527344 138.09375 80.285156 138.15625 79.761719 138.753906 C 79.179688 139.246094 79.027344 140.074219 79.394531 140.738281 C 79.921875 141.464844 80.6875 141.984375 81.554688 142.214844 Z M 99.664062 174.828125 C 99.175781 175.578125 98.773438 176.109375 98.433594 176.699219 C 98.296875 176.925781 98.257812 177.195312 98.328125 177.449219 C 98.722656 178.265625 99.480469 178.84375 100.371094 179.015625 C 101.347656 179.167969 101.875 178.46875 102.273438 177.765625 C 102.492188 177.535156 102.585938 177.21875 102.53125 176.90625 C 102.472656 176.59375 102.273438 176.328125 101.988281 176.191406 C 101.324219 175.734375 100.558594 175.382812 99.679688 174.835938 Z M 69.929688 156.164062 C 69.230469 156.339844 68.640625 156.808594 68.304688 157.445312 C 68.09375 157.652344 67.988281 157.941406 68.019531 158.238281 C 68.050781 158.53125 68.21875 158.792969 68.472656 158.945312 C 68.960938 159.367188 69.496094 159.734375 70.0625 160.046875 C 70.753906 160.445312 71.039062 160.355469 71.511719 159.738281 C 71.679688 159.5 71.832031 159.25 71.964844 158.992188 C 72.542969 157.976562 72.496094 157.851562 71.492188 157.167969 C 71.191406 156.964844 70.925781 156.703125 70.628906 156.503906 C 70.402344 156.375 70.167969 156.261719 69.929688 156.164062 Z M 37.277344 67.453125 C 37.769531 66.921875 38.226562 66.363281 38.652344 65.777344 C 38.851562 65.492188 38.929688 65.136719 38.867188 64.796875 C 38.804688 64.453125 38.609375 64.152344 38.320312 63.953125 C 38.042969 63.71875 37.75 63.507812 37.441406 63.316406 C 37.03125 63.015625 36.457031 63.085938 36.136719 63.480469 C 34.355469 65.125 34.542969 66.332031 36.75 67.304688 C 36.921875 67.363281 37.097656 67.414062 37.277344 67.453125 Z M 160.042969 166.125 C 159.964844 166.117188 159.886719 166.117188 159.808594 166.125 L 158.523438 166.484375 C 157.609375 166.777344 157.40625 167.0625 157.5625 167.984375 C 157.625 168.421875 157.753906 168.847656 157.945312 169.242188 C 158.027344 169.523438 158.234375 169.75 158.507812 169.855469 C 158.78125 169.960938 159.085938 169.933594 159.335938 169.78125 C 159.898438 169.582031 160.445312 169.332031 160.964844 169.035156 C 161.65625 168.621094 161.785156 168.285156 161.582031 167.648438 C 161.304688 166.738281 160.6875 166.140625 160.042969 166.125 Z M 250.867188 251.644531 C 250.867188 250.269531 250.523438 249.769531 249.441406 249.523438 C 248.359375 249.273438 248.109375 249.523438 247.652344 250.632812 C 247.480469 251.078125 247.335938 251.535156 247.226562 252.003906 C 247.105469 252.40625 247.273438 252.839844 247.636719 253.050781 C 248.132812 253.550781 248.886719 253.691406 249.53125 253.402344 C 250.199219 253.023438 250.683594 252.386719 250.867188 251.644531 Z M 46.996094 238.570312 L 46.71875 238.570312 C 45.886719 238.632812 44.910156 239.605469 44.96875 240.304688 C 45.027344 241 46.574219 242.785156 47.160156 242.65625 C 47.945312 242.445312 48.601562 241.914062 48.972656 241.195312 C 49.339844 240.574219 48.746094 240.167969 48.410156 239.742188 C 48.226562 239.46875 48.011719 239.214844 47.769531 238.992188 C 47.527344 238.828125 47.265625 238.6875 46.996094 238.570312 Z M 124.476562 173.132812 C 123.722656 173.425781 122.972656 173.679688 122.265625 174.023438 C 121.875 174.21875 121.792969 174.585938 121.9375 175.066406 C 122.628906 177.316406 122.988281 177.511719 125.136719 176.476562 C 125.285156 176.402344 125.488281 176.371094 125.566406 176.257812 C 125.730469 176.011719 125.984375 175.6875 125.933594 175.464844 C 125.769531 174.839844 125.535156 174.234375 125.234375 173.664062 C 125.128906 173.441406 124.835938 173.335938 124.476562 173.132812 Z M 87.316406 193.667969 C 87.128906 193.753906 86.953125 193.863281 86.800781 194 C 86.496094 194.324219 86.226562 194.675781 85.988281 195.046875 C 85.566406 195.746094 85.628906 196.054688 86.28125 196.609375 C 86.617188 196.890625 86.980469 197.15625 87.339844 197.417969 C 87.785156 197.804688 88.445312 197.828125 88.917969 197.46875 C 89.535156 197.128906 89.914062 196.480469 89.910156 195.777344 C 89.855469 195.144531 88.082031 193.660156 87.316406 193.667969 Z M 162.054688 92.800781 C 162.019531 92.652344 161.957031 92.507812 161.875 92.375 C 161.421875 91.851562 160.945312 91.347656 160.441406 90.875 C 159.90625 90.402344 159.199219 90.53125 158.472656 91.136719 C 158.167969 91.316406 157.953125 91.613281 157.882812 91.960938 C 157.8125 92.304688 157.894531 92.664062 158.101562 92.945312 C 158.441406 93.394531 158.832031 93.804688 159.269531 94.167969 C 159.652344 94.496094 160.070312 94.960938 160.640625 94.5625 C 161.308594 94.164062 161.8125 93.539062 162.054688 92.800781 Z M 122.929688 143.070312 C 123.324219 143.152344 123.734375 143.070312 124.070312 142.84375 C 124.40625 142.621094 124.636719 142.269531 124.707031 141.871094 C 125.007812 141.023438 124.910156 140.703125 124.09375 140.148438 C 123.726562 139.890625 123.339844 139.667969 122.9375 139.480469 C 122.183594 139.121094 121.867188 139.179688 121.328125 139.765625 C 120.78125 140.230469 120.617188 141 120.921875 141.648438 C 121.410156 142.402344 121.964844 143.109375 122.929688 143.070312 Z M 220.816406 235.417969 C 220.773438 234.753906 220.355469 234.171875 219.742188 233.917969 C 219.195312 233.597656 218.5 233.703125 218.074219 234.171875 C 217.75 234.535156 217.449219 234.914062 217.171875 235.3125 C 216.910156 235.605469 216.789062 235.996094 216.839844 236.382812 C 216.890625 236.773438 217.109375 237.117188 217.433594 237.335938 C 217.996094 237.921875 218.917969 237.957031 219.523438 237.417969 C 220.003906 236.785156 220.4375 236.117188 220.816406 235.417969 Z M 140.683594 113.113281 C 140.808594 113.46875 140.988281 113.804688 141.210938 114.109375 C 141.542969 114.460938 141.933594 114.753906 142.367188 114.972656 C 142.679688 115.207031 143.074219 115.300781 143.460938 115.230469 C 143.84375 115.160156 144.183594 114.929688 144.386719 114.597656 C 144.664062 114.296875 144.796875 113.890625 144.75 113.484375 C 144.703125 113.074219 144.484375 112.710938 144.148438 112.476562 L 143.457031 111.800781 C 143.101562 111.347656 142.488281 111.183594 141.953125 111.40625 C 141.242188 111.6875 140.75 112.351562 140.683594 113.113281 Z M 121.253906 147.132812 C 121.082031 146.773438 121.035156 146.488281 120.871094 146.382812 C 120.230469 145.898438 119.554688 145.457031 118.847656 145.070312 C 118.601562 144.964844 118.316406 144.96875 118.070312 145.085938 C 117.824219 145.203125 117.640625 145.417969 117.566406 145.679688 C 117.308594 146.25 116.582031 146.757812 117.085938 147.53125 C 117.128906 147.601562 117.1875 147.660156 117.257812 147.710938 C 117.859375 148.109375 118.453125 148.527344 119.089844 148.871094 C 119.300781 148.992188 119.75 149.023438 119.839844 148.871094 C 120.382812 148.324219 120.808594 147.703125 121.253906 147.132812 Z M 79.136719 98.695312 C 79.0625 98.101562 78.691406 97.585938 78.152344 97.320312 C 77.667969 96.984375 77.007812 97.054688 76.605469 97.488281 C 76.359375 97.695312 76.074219 97.855469 75.808594 98.042969 C 75.28125 98.304688 74.976562 98.875 75.058594 99.457031 C 75.132812 100.117188 75.570312 100.675781 76.191406 100.90625 C 77.328125 101.324219 79.105469 100.078125 79.136719 98.695312 Z M 155.128906 95.335938 C 154.535156 95.988281 154.039062 96.503906 153.582031 97.050781 C 153.4375 97.203125 153.367188 97.40625 153.378906 97.617188 C 153.394531 97.824219 153.496094 98.015625 153.65625 98.144531 C 154.175781 98.65625 154.734375 99.128906 155.324219 99.554688 C 155.589844 99.722656 155.921875 99.75 156.210938 99.621094 C 156.722656 99.171875 157.167969 98.652344 157.53125 98.078125 C 157.609375 97.777344 157.535156 97.457031 157.328125 97.222656 C 156.667969 96.585938 155.941406 96.023438 155.128906 95.335938 Z M 147.023438 105.828125 C 146.246094 105.832031 145.542969 106.289062 145.222656 106.996094 C 144.890625 107.589844 145.082031 108.339844 145.65625 108.699219 C 145.964844 108.953125 146.28125 109.203125 146.609375 109.449219 C 147.363281 110.003906 147.714844 109.972656 148.367188 109.261719 C 148.621094 109 148.835938 108.707031 149.015625 108.390625 C 149.144531 108.164062 149.183594 107.898438 149.128906 107.640625 C 148.621094 106.855469 147.886719 106.234375 147.023438 105.867188 Z M 62.597656 167.570312 C 61.867188 167.710938 61.234375 168.171875 60.878906 168.824219 C 60.648438 169.019531 60.53125 169.316406 60.566406 169.617188 C 60.597656 169.917969 60.777344 170.179688 61.042969 170.324219 C 61.617188 170.765625 62.214844 171.171875 62.839844 171.542969 C 63.195312 171.777344 63.675781 171.6875 63.925781 171.34375 C 64.082031 171.15625 64.226562 170.964844 64.363281 170.765625 C 65.113281 169.625 65.113281 169.492188 64.03125 168.652344 C 63.777344 168.457031 63.558594 168.214844 63.28125 168.023438 C 63.0625 167.859375 62.832031 167.710938 62.597656 167.570312 Z M 165.765625 35.226562 C 165.667969 35.214844 165.570312 35.214844 165.472656 35.226562 C 164.699219 35.496094 164.0625 36.058594 163.699219 36.792969 C 163.4375 37.371094 163.992188 37.738281 164.300781 38.140625 C 164.472656 38.367188 164.660156 38.582031 164.855469 38.785156 C 165.605469 39.609375 165.90625 39.632812 166.800781 38.945312 C 166.996094 38.796875 167.179688 38.636719 167.351562 38.464844 C 167.875 37.910156 167.929688 37.578125 167.484375 36.964844 C 167.125 36.476562 166.730469 36.011719 166.3125 35.570312 C 166.144531 35.4375 165.960938 35.320312 165.765625 35.226562 Z M 117.167969 84.910156 L 119.421875 87.773438 C 120.390625 87.578125 120.75 86.851562 121.191406 86.273438 C 121.636719 85.695312 121.621094 85.359375 120.976562 84.773438 C 120.742188 84.550781 120.523438 84.316406 120.292969 84.085938 C 119.488281 83.285156 119 83.230469 118.089844 83.9375 C 117.757812 84.246094 117.449219 84.578125 117.167969 84.933594 Z M 169.371094 84.730469 C 169.980469 84.789062 171.253906 83.644531 171.359375 83.035156 C 171.496094 82.285156 169.378906 80.269531 168.730469 80.675781 C 168.101562 81.089844 167.585938 81.652344 167.230469 82.316406 C 166.945312 82.847656 167.597656 83.222656 167.980469 83.582031 C 168.363281 83.945312 168.550781 84.144531 168.867188 84.40625 C 169.023438 84.539062 169.191406 84.652344 169.371094 84.753906 Z M 241.035156 248.871094 C 240.886719 249.632812 241.332031 250.386719 242.070312 250.632812 C 242.652344 251.003906 243.421875 250.839844 243.800781 250.265625 C 244.203125 249.660156 244.519531 249.003906 244.738281 248.316406 C 244.785156 247.972656 244.660156 247.625 244.402344 247.394531 C 243.9375 247.089844 243.429688 246.863281 242.898438 246.71875 C 242.632812 246.65625 242.351562 246.730469 242.148438 246.914062 C 241.667969 247.625 241.296875 248.382812 241.035156 248.871094 Z M 124.511719 135.570312 C 124.511719 136.234375 125.210938 136.601562 125.84375 137.066406 C 127.105469 137.929688 127.433594 137.863281 128.238281 136.589844 C 128.890625 135.554688 128.863281 135.328125 127.878906 134.59375 C 127.585938 134.375 127.285156 134.171875 126.96875 133.988281 C 125.863281 133.34375 124.582031 134.054688 124.511719 135.570312 Z M 47.148438 31.914062 C 47.816406 32.355469 48.394531 32.78125 49.015625 33.128906 C 49.253906 33.246094 49.53125 33.246094 49.769531 33.128906 C 50.308594 32.65625 50.769531 32.097656 51.128906 31.480469 C 51.527344 30.660156 50.960938 29.738281 49.957031 29.230469 C 49.203125 28.878906 48.792969 29.050781 48.191406 29.980469 C 47.824219 30.570312 47.53125 31.1875 47.132812 31.914062 Z M 20.722656 218.425781 C 20.671875 218.246094 20.597656 218.070312 20.503906 217.90625 C 20.1875 217.4375 19.867188 216.972656 19.511719 216.535156 C 18.941406 215.839844 18.234375 215.785156 17.351562 216.386719 C 17.019531 216.554688 16.777344 216.863281 16.691406 217.222656 C 16.605469 217.585938 16.679688 217.96875 16.898438 218.269531 C 17.15625 218.679688 17.445312 219.070312 17.761719 219.4375 C 18.101562 219.855469 18.515625 220.300781 19.085938 220.023438 C 19.824219 219.734375 20.417969 219.15625 20.722656 218.425781 Z M 43.519531 29.605469 C 43.792969 29.484375 44.046875 29.324219 44.269531 29.125 C 44.558594 28.742188 44.8125 28.328125 45.019531 27.894531 C 45.695312 26.652344 45.195312 25.648438 43.78125 25.484375 C 42.992188 25.378906 41.3125 27.070312 41.414062 27.867188 C 41.796875 28.75 42.578125 29.394531 43.519531 29.605469 Z M 44.40625 195.738281 C 44.351562 195.566406 44.351562 195.273438 44.210938 195.125 C 43.625 194.511719 43.003906 193.9375 42.347656 193.398438 C 42.195312 193.273438 41.792969 193.339844 41.597656 193.453125 C 41.328125 193.632812 41.089844 193.855469 40.890625 194.113281 C 40.035156 195.0625 40.042969 195.175781 40.890625 196.074219 C 41.117188 196.300781 41.3125 196.5625 41.519531 196.824219 C 41.882812 197.257812 42.273438 197.574219 42.894531 197.3125 C 43.636719 197.082031 44.207031 196.488281 44.40625 195.738281 Z M 172.097656 77.535156 C 172.097656 78.425781 172.847656 78.960938 173.441406 79.5 C 173.714844 79.777344 174.101562 79.925781 174.492188 79.902344 C 174.882812 79.878906 175.246094 79.683594 175.484375 79.371094 C 175.789062 79.125 175.972656 78.765625 175.992188 78.375 C 176.011719 77.988281 175.867188 77.609375 175.589844 77.332031 L 174.90625 76.484375 C 174.570312 75.953125 173.90625 75.730469 173.3125 75.945312 C 172.609375 76.167969 172.113281 76.800781 172.066406 77.535156 Z M 199.550781 219.878906 C 199.550781 219.804688 199.550781 219.601562 199.429688 219.511719 C 198.964844 219.015625 198.4375 218.585938 197.859375 218.230469 C 197.246094 217.921875 197.003906 218.65625 196.628906 218.980469 C 196.347656 219.214844 196.078125 219.464844 195.824219 219.730469 C 195.402344 220.148438 195.363281 220.816406 195.734375 221.28125 C 196.082031 221.84375 196.484375 222.367188 197.238281 222.308594 C 197.851562 222.234375 199.445312 220.613281 199.519531 219.878906 Z M 39.914062 200.390625 C 39.890625 200.265625 39.839844 200.148438 39.769531 200.039062 C 39.289062 199.507812 38.800781 198.976562 38.269531 198.457031 C 37.988281 198.132812 37.507812 198.082031 37.164062 198.339844 C 36.71875 198.605469 36.3125 198.929688 35.957031 199.304688 C 35.765625 199.53125 35.648438 200.101562 35.789062 200.265625 C 36.402344 200.953125 37.054688 201.605469 37.742188 202.214844 C 37.882812 202.292969 38.046875 202.316406 38.199219 202.28125 C 38.992188 201.890625 39.59375 201.207031 39.882812 200.378906 Z M 126.015625 80.25 C 125.910156 80.003906 125.78125 79.769531 125.625 79.550781 C 125.34375 79.261719 125.042969 78.992188 124.722656 78.742188 C 123.753906 77.917969 122.996094 77.992188 122.230469 78.890625 C 121.5625 79.695312 121.671875 80.308594 122.648438 81.140625 C 122.808594 81.273438 122.957031 81.402344 123.125 81.523438 C 123.542969 81.824219 123.925781 82.316406 124.519531 82.007812 C 125.203125 81.609375 125.722656 80.980469 125.984375 80.234375 Z M 128.570312 129.527344 C 128.523438 130.390625 130.148438 131.957031 131.019531 131.859375 C 131.210938 131.820312 131.390625 131.726562 131.535156 131.589844 C 131.8125 131.339844 132.0625 131.066406 132.289062 130.773438 C 132.910156 129.886719 132.789062 129.332031 131.875 128.761719 C 131.566406 128.566406 131.25 128.386719 130.925781 128.214844 C 130.453125 127.910156 129.84375 127.886719 129.347656 128.15625 C 128.847656 128.425781 128.539062 128.945312 128.539062 129.511719 Z M 204.5625 224.167969 C 204.523438 223.296875 203.898438 222.980469 203.390625 222.613281 C 202.71875 222.136719 202.441406 222.148438 201.886719 222.71875 C 201.457031 223.199219 201.054688 223.699219 200.675781 224.21875 C 200.527344 224.359375 200.441406 224.558594 200.441406 224.765625 C 200.441406 224.972656 200.527344 225.171875 200.675781 225.3125 C 201.136719 225.710938 201.621094 226.074219 202.128906 226.40625 C 202.304688 226.496094 202.511719 226.496094 202.691406 226.40625 C 203.480469 225.8125 204.117188 225.046875 204.5625 224.167969 Z M 234.800781 245.902344 C 234.652344 246.570312 235.007812 247.253906 235.640625 247.511719 C 236.199219 247.910156 236.96875 247.816406 237.414062 247.296875 C 237.855469 246.675781 238.222656 246.007812 238.503906 245.300781 C 238.566406 245.070312 238.507812 244.828125 238.347656 244.648438 C 237.839844 244.257812 237.277344 243.941406 236.679688 243.714844 C 236.292969 243.65625 235.898438 243.792969 235.636719 244.082031 C 235.308594 244.671875 235.03125 245.289062 234.800781 245.925781 Z M 230.488281 240.445312 C 230.175781 240.601562 229.878906 240.789062 229.601562 241.007812 C 229.335938 241.3125 229.105469 241.644531 228.914062 241.996094 C 228.265625 242.980469 228.425781 243.59375 229.453125 244.15625 C 230.480469 244.71875 231.082031 244.628906 231.75 243.5625 C 231.917969 243.285156 232.058594 242.996094 232.179688 242.695312 C 232.617188 241.613281 231.933594 240.585938 230.488281 240.46875 Z M 92.230469 114.800781 C 92.0625 114.554688 91.960938 114.378906 91.839844 114.222656 C 91.722656 114.058594 91.597656 113.898438 91.464844 113.75 C 90.824219 113.0625 90.621094 113.046875 89.839844 113.585938 C 89.605469 113.757812 89.351562 113.910156 89.089844 114.035156 C 88.089844 114.53125 87.722656 115.160156 88.535156 116.546875 C 88.75 116.996094 89.191406 117.296875 89.691406 117.324219 C 90.191406 117.351562 90.667969 117.105469 90.929688 116.679688 C 91.402344 116.113281 91.785156 115.480469 92.230469 114.800781 Z M 213.09375 233.96875 C 213.386719 233.839844 213.660156 233.671875 213.914062 233.476562 C 214.148438 233.199219 214.351562 232.894531 214.511719 232.566406 C 215.265625 231.40625 215.195312 231.070312 214.039062 230.320312 C 212.882812 229.570312 212.726562 229.683594 211.945312 230.695312 C 211.773438 230.917969 211.605469 231.144531 211.457031 231.382812 C 210.726562 232.605469 211.472656 233.941406 213.09375 233.984375 Z M 210.089844 50.472656 C 210.601562 50.410156 211.0625 50.121094 211.339844 49.6875 C 211.621094 49.25 211.691406 48.714844 211.53125 48.222656 C 211.375 47.894531 211.199219 47.578125 211.042969 47.25 C 210.800781 46.761719 210.523438 46.328125 209.871094 46.378906 C 209.0625 46.480469 208.335938 46.929688 207.878906 47.609375 C 207.640625 48.328125 209.292969 50.5 210.074219 50.484375 Z M 8.1875 224.355469 C 6.847656 224.355469 5.789062 225.566406 6.246094 226.4375 C 6.609375 227.066406 7.050781 227.652344 7.554688 228.175781 C 8.019531 228.6875 8.53125 228.402344 8.96875 228.070312 C 9.402344 227.742188 10.152344 227.441406 10.085938 226.632812 C 10.074219 226.550781 10.039062 226.472656 9.988281 226.40625 C 9.683594 225.886719 9.34375 225.386719 8.972656 224.910156 C 8.738281 224.675781 8.46875 224.480469 8.171875 224.332031 Z M -0.804688 234.5 C -0.871094 234.304688 -0.949219 234.113281 -1.039062 233.925781 C -1.269531 233.503906 -1.527344 233.09375 -1.789062 232.679688 C -2.269531 231.839844 -2.539062 231.734375 -3.472656 232.097656 C -3.777344 232.207031 -4.066406 232.347656 -4.34375 232.515625 C -4.578125 232.632812 -4.75 232.84375 -4.820312 233.097656 C -4.890625 233.351562 -4.851562 233.621094 -4.710938 233.84375 C -4.402344 234.410156 -4.050781 234.953125 -3.660156 235.46875 C -3.203125 236.082031 -2.910156 236.136719 -2.203125 235.761719 C -1.847656 235.566406 -1.511719 235.335938 -1.203125 235.070312 C -1.042969 234.902344 -0.910156 234.710938 -0.804688 234.5 Z M 176.941406 72.933594 C 176.941406 73.683594 178.285156 75.292969 178.945312 75.363281 C 179.144531 75.375 179.34375 75.339844 179.527344 75.257812 C 181.027344 74.574219 181.207031 73.546875 180.132812 72.347656 L 179.628906 71.832031 C 179.28125 71.371094 178.65625 71.214844 178.128906 71.457031 C 177.484375 71.683594 177.023438 72.253906 176.941406 72.933594 Z M 135.007812 126.148438 C 135.5625 126.121094 136.0625 125.8125 136.335938 125.332031 C 136.65625 124.9375 136.632812 124.363281 136.28125 123.996094 C 135.863281 123.472656 135.410156 122.96875 134.929688 122.496094 C 134.734375 122.3125 134.472656 122.214844 134.203125 122.226562 C 133.929688 122.242188 133.679688 122.367188 133.503906 122.574219 C 132.992188 123.074219 132.398438 123.605469 132.585938 124.421875 C 132.746094 125.066406 134.21875 126.09375 135.007812 126.125 Z M 74.707031 93.738281 C 74.707031 93.164062 73.457031 91.746094 72.902344 91.753906 C 72.707031 91.765625 72.519531 91.835938 72.363281 91.957031 C 71.890625 92.265625 71.449219 92.621094 71.046875 93.019531 C 70.800781 93.28125 70.5 93.769531 70.597656 94.023438 C 70.867188 94.648438 71.242188 95.222656 71.707031 95.71875 C 71.96875 95.890625 72.300781 95.917969 72.585938 95.792969 C 73.28125 95.242188 73.949219 94.65625 74.585938 94.039062 C 74.667969 93.964844 74.675781 93.8125 74.707031 93.738281 Z M 33.484375 206.914062 C 34.109375 206.859375 34.644531 206.449219 34.867188 205.863281 C 35.128906 205.386719 35.019531 204.789062 34.609375 204.433594 C 34.332031 204.140625 34.085938 203.816406 33.820312 203.519531 C 33.457031 203.003906 32.773438 202.820312 32.199219 203.089844 C 31.550781 203.304688 31.117188 203.910156 31.125 204.589844 C 31.3125 205.800781 32.269531 206.753906 33.484375 206.933594 Z M 226.464844 239.140625 C 226.535156 238.246094 225.941406 237.429688 225.066406 237.214844 C 224.390625 236.976562 223.992188 237.125 223.5625 237.808594 C 223.324219 238.183594 223.089844 238.558594 222.886719 238.953125 C 222.710938 239.230469 222.65625 239.570312 222.726562 239.890625 C 222.800781 240.210938 223 240.488281 223.277344 240.664062 C 223.984375 241.230469 224.921875 241.414062 225.367188 240.894531 C 225.78125 240.363281 226.148438 239.796875 226.464844 239.203125 Z M 30.417969 209.835938 C 30.328125 209.585938 30.210938 209.347656 30.066406 209.125 C 29.734375 208.714844 29.378906 208.328125 29 207.960938 C 28.195312 207.175781 28 207.175781 27.175781 207.878906 C 27.023438 208.015625 26.875 208.15625 26.738281 208.300781 C 26.09375 208.988281 26.070312 209.25 26.648438 209.957031 C 26.902344 210.269531 27.183594 210.570312 27.460938 210.863281 C 27.738281 211.15625 28.210938 211.746094 28.78125 211.46875 C 29.496094 211.160156 30.074219 210.601562 30.402344 209.894531 Z M 215.308594 46.828125 C 216.070312 46.6875 216.753906 46.269531 217.226562 45.660156 C 217.328125 45.40625 217.328125 45.125 217.226562 44.871094 C 216.875 44.234375 216.484375 43.621094 216.058594 43.027344 C 215.914062 42.835938 215.707031 42.699219 215.472656 42.640625 C 214.648438 42.832031 213.917969 43.308594 213.402344 43.980469 C 213.183594 44.574219 214.707031 46.804688 215.308594 46.828125 Z M -8.738281 239.570312 C -7.460938 239.671875 -6.347656 238.464844 -6.785156 237.492188 C -7.089844 236.878906 -7.46875 236.304688 -7.910156 235.785156 C -8.285156 235.289062 -8.78125 235.429688 -9.203125 235.730469 C -9.734375 236.105469 -10.703125 236.285156 -10.488281 237.117188 C -10.199219 237.90625 -9.789062 238.644531 -9.269531 239.304688 C -9.15625 239.480469 -8.863281 239.515625 -8.738281 239.570312 Z M 220.703125 43.359375 C 222.0625 43.476562 223.054688 42.570312 222.699219 41.582031 C 222.394531 40.84375 221.972656 40.160156 221.453125 39.550781 C 221.3125 39.367188 221.105469 39.25 220.875 39.226562 C 220.644531 39.199219 220.414062 39.269531 220.238281 39.414062 C 219.859375 39.648438 219.515625 39.925781 219.214844 40.246094 C 219.046875 40.460938 218.980469 40.734375 219.035156 40.996094 C 219.359375 41.691406 219.730469 42.359375 220.152344 43 C 220.289062 43.222656 220.613281 43.304688 220.703125 43.359375 Z M 67.75 91.019531 C 67.925781 90.933594 68.09375 90.835938 68.253906 90.726562 C 68.539062 90.507812 68.792969 90.246094 69.078125 90.03125 C 70.273438 89.128906 70.355469 88.410156 69.371094 87.355469 C 69.203125 87.09375 68.925781 86.921875 68.621094 86.878906 C 68.3125 86.835938 68 86.925781 67.765625 87.128906 C 67.304688 87.457031 66.878906 87.828125 66.488281 88.238281 C 66.15625 88.574219 65.738281 88.941406 66.046875 89.480469 C 66.421875 90.171875 67.023438 90.714844 67.75 91.019531 Z M 4.746094 230.679688 C 4.65625 230.476562 4.589844 230.289062 4.492188 230.117188 C 4.25 229.707031 3.996094 229.292969 3.738281 228.886719 C 3.25 228.09375 2.929688 227.988281 2.035156 228.363281 C 1.703125 228.503906 1.386719 228.675781 1.085938 228.875 C 0.875 228.988281 0.722656 229.183594 0.664062 229.417969 C 0.609375 229.652344 0.65625 229.898438 0.792969 230.09375 C 1.109375 230.605469 1.441406 231.113281 1.808594 231.59375 C 2.417969 232.402344 2.65625 232.441406 3.507812 231.910156 C 3.816406 231.722656 4.109375 231.507812 4.378906 231.265625 C 4.527344 231.085938 4.652344 230.890625 4.746094 230.679688 Z M 189.769531 211.125 C 189.839844 210.375 188.597656 209.117188 187.9375 209.207031 C 187.898438 209.203125 187.859375 209.203125 187.816406 209.207031 C 186.917969 209.707031 186.175781 210.453125 185.675781 211.359375 C 185.648438 211.433594 185.648438 211.515625 185.675781 211.589844 C 185.933594 212.320312 186.476562 212.917969 187.179688 213.246094 C 187.734375 213.523438 188.074219 213.050781 188.417969 212.714844 C 188.765625 212.375 189.109375 212.03125 189.425781 211.664062 C 189.5625 211.5 189.679688 211.320312 189.769531 211.125 Z M 51.292969 187.320312 C 51.960938 187.25 52.546875 186.839844 52.839844 186.234375 C 53.144531 185.734375 53.019531 185.085938 52.546875 184.734375 C 52.128906 184.339844 51.6875 183.96875 51.226562 183.625 C 51.054688 183.449219 50.820312 183.347656 50.570312 183.347656 C 50.324219 183.347656 50.089844 183.449219 49.917969 183.625 C 49.421875 184.136719 48.785156 184.609375 48.917969 185.449219 C 49.007812 185.925781 50.683594 187.261719 51.292969 187.320312 Z M 167.402344 180.402344 C 167.449219 179.835938 167.195312 179.285156 166.738281 178.949219 C 166.28125 178.609375 165.679688 178.53125 165.148438 178.738281 C 164.746094 178.925781 164.359375 179.144531 163.992188 179.390625 C 163.535156 179.667969 163.261719 180.164062 163.269531 180.695312 C 163.277344 181.226562 163.566406 181.714844 164.03125 181.976562 C 164.953125 182.578125 167.296875 181.46875 167.402344 180.402344 Z M -12.175781 241.269531 C -12.394531 240.824219 -12.648438 240.390625 -12.929688 239.980469 C -13.972656 238.558594 -13.988281 238.535156 -15.640625 239.574219 C -15.882812 239.695312 -16.054688 239.917969 -16.117188 240.179688 C -16.175781 240.445312 -16.113281 240.71875 -15.949219 240.933594 C -15.675781 241.390625 -15.445312 241.863281 -15.195312 242.304688 C -14.929688 242.832031 -14.324219 243.097656 -13.753906 242.933594 C -12.964844 242.707031 -12.359375 242.070312 -12.175781 241.269531 Z M 160.199219 173.679688 C 160.386719 174.210938 160.492188 174.601562 160.648438 174.960938 C 161.136719 176.140625 161.535156 176.3125 162.714844 175.898438 C 163.019531 175.796875 163.316406 175.664062 163.59375 175.5 C 164.398438 174.992188 164.554688 174.128906 164.066406 173.140625 C 163.683594 172.390625 163.234375 172.210938 162.25 172.632812 C 161.582031 172.914062 160.957031 173.289062 160.199219 173.679688 Z M 195.765625 60.859375 C 195.550781 59.964844 195.074219 59.15625 194.398438 58.535156 C 194.257812 58.328125 194.035156 58.195312 193.785156 58.171875 C 193.539062 58.148438 193.292969 58.234375 193.113281 58.40625 C 192.925781 58.550781 192.730469 58.691406 192.542969 58.851562 C 191.535156 59.667969 191.511719 59.890625 192.300781 60.917969 C 193.746094 62.800781 194.269531 62.792969 195.765625 60.859375 Z M 164.179688 85.441406 C 163.285156 85.847656 162.679688 86.304688 162.625 87.179688 C 162.566406 87.929688 163.535156 89.121094 164.382812 89.429688 C 165.230469 89.738281 165.675781 89.210938 166.164062 88.746094 C 166.824219 88.109375 166.847656 87.675781 166.164062 87.007812 C 165.480469 86.339844 164.847656 86.003906 164.179688 85.441406 Z M 77.183594 144.269531 C 76.914062 144.386719 76.660156 144.542969 76.433594 144.734375 C 76.175781 145.046875 75.957031 145.386719 75.78125 145.746094 C 75.269531 146.683594 75.292969 146.773438 76.207031 147.375 L 76.621094 147.636719 C 78.214844 148.609375 78.769531 148.421875 79.46875 146.660156 C 79.46875 146.585938 79.558594 146.511719 79.550781 146.4375 C 79.566406 146.242188 79.53125 146.050781 79.453125 145.875 C 78.890625 145.109375 78.09375 144.542969 77.183594 144.269531 Z M 53.195312 179.878906 C 53.242188 180.152344 53.359375 180.410156 53.53125 180.628906 C 54.070312 181.117188 54.652344 181.558594 55.273438 181.941406 C 55.53125 182.042969 55.824219 182.027344 56.070312 181.894531 C 57.460938 181.144531 57.574219 179.921875 56.355469 178.964844 C 56.167969 178.8125 55.980469 178.664062 55.777344 178.53125 C 55.277344 178.175781 54.617188 178.128906 54.070312 178.414062 C 53.527344 178.699219 53.1875 179.265625 53.195312 179.878906 Z M 198.867188 54.144531 C 197.6875 54.144531 196.742188 55.34375 197.167969 56.234375 C 197.476562 56.851562 197.886719 57.410156 198.378906 57.890625 C 198.933594 58.445312 199.640625 58.316406 200.332031 57.6875 C 201.023438 57.058594 201.144531 56.578125 200.667969 55.898438 C 200.3125 55.40625 199.914062 54.945312 199.484375 54.519531 C 199.296875 54.363281 199.089844 54.238281 198.867188 54.144531 Z M 228.710938 38.800781 C 228.429688 37.757812 228.332031 36.792969 227.453125 36.246094 C 227.199219 36.0625 226.882812 35.980469 226.570312 36.019531 C 225.015625 36.574219 224.496094 37.144531 225.308594 38.554688 C 225.382812 38.6875 225.457031 38.832031 225.546875 38.964844 C 226.296875 40.15625 226.863281 40.269531 228.019531 39.460938 C 228.265625 39.261719 228.496094 39.039062 228.710938 38.800781 Z M 65.773438 161.890625 C 65.332031 162.503906 65.023438 162.957031 64.679688 163.390625 C 64.503906 163.59375 64.425781 163.859375 64.460938 164.125 C 64.496094 164.390625 64.644531 164.628906 64.867188 164.777344 C 65.082031 164.964844 65.277344 165.167969 65.503906 165.339844 C 66.714844 166.246094 67.488281 166.089844 68.296875 164.835938 C 68.734375 164.15625 68.71875 163.78125 68.050781 163.277344 C 67.382812 162.773438 66.632812 162.429688 65.773438 161.890625 Z M 12.957031 220.351562 C 12.441406 220.304688 11.941406 220.542969 11.652344 220.96875 C 11.367188 221.398438 11.335938 221.949219 11.574219 222.40625 C 11.8125 222.867188 12.089844 223.3125 12.398438 223.730469 C 12.703125 224.292969 13.394531 224.519531 13.96875 224.242188 C 14.65625 224.054688 15.148438 223.453125 15.195312 222.742188 C 14.964844 221.597656 14.09375 220.6875 12.957031 220.410156 Z M 84.078125 109.929688 C 84.023438 110.824219 84.617188 111.628906 85.492188 111.839844 C 86.121094 111.839844 87.886719 110.589844 88.03125 109.988281 C 88.03125 109.914062 88.082031 109.808594 88.03125 109.757812 C 87.691406 109.140625 87.277344 108.566406 86.800781 108.046875 C 86.316406 107.628906 85.828125 108.121094 85.417969 108.429688 C 85.105469 108.617188 84.820312 108.839844 84.5625 109.097656 C 84.367188 109.375 84.207031 109.671875 84.078125 109.988281 Z M 191.949219 217.707031 C 192.78125 217.757812 193.210938 217.203125 193.707031 216.730469 C 194.96875 215.53125 194.351562 214.820312 193.535156 214.003906 C 193.386719 213.804688 193.15625 213.6875 192.910156 213.679688 C 192.660156 213.671875 192.425781 213.777344 192.265625 213.964844 C 191.785156 214.453125 191.335938 214.964844 190.914062 215.503906 C 190.648438 215.832031 190.273438 216.152344 190.605469 216.664062 C 190.851562 217.222656 191.351562 217.632812 191.949219 217.765625 Z M 37.78125 25.949219 C 38.089844 25.796875 38.320312 25.753906 38.425781 25.609375 C 38.945312 24.941406 39.441406 24.261719 39.929688 23.554688 C 40.003906 23.375 40.003906 23.167969 39.929688 22.988281 C 39.527344 22.332031 38.878906 21.863281 38.132812 21.683594 C 37.382812 21.683594 35.699219 23.929688 36.097656 24.484375 C 36.597656 25.039062 37.160156 25.53125 37.78125 25.949219 Z M 185.949219 69.089844 C 185.929688 68.953125 185.902344 68.816406 185.863281 68.683594 C 185.535156 67.855469 184.941406 67.160156 184.175781 66.703125 C 183.960938 66.609375 183.71875 66.609375 183.507812 66.703125 C 181.832031 67.695312 181.578125 68.25 182.753906 69.703125 C 182.976562 69.945312 183.230469 70.15625 183.507812 70.332031 C 183.820312 70.566406 184.144531 70.851562 184.589844 70.550781 C 185.199219 70.234375 185.679688 69.71875 185.949219 69.089844 Z M 178.78125 203.449219 C 179.578125 203.546875 179.953125 202.859375 180.464844 202.453125 C 181.402344 201.703125 181.417969 201.390625 180.710938 200.453125 C 180.007812 199.515625 179.644531 199.359375 178.550781 200.152344 C 178.257812 200.363281 177.984375 200.601562 177.699219 200.835938 C 177.234375 201.179688 177.070312 201.800781 177.300781 202.332031 C 177.511719 202.976562 178.101562 203.425781 178.78125 203.449219 Z M 204.457031 49.910156 C 203.890625 50.265625 203.347656 50.652344 202.824219 51.070312 C 202.605469 51.277344 202.496094 51.574219 202.523438 51.871094 C 202.773438 52.546875 203.128906 53.175781 203.585938 53.730469 C 204.171875 54.382812 205.035156 54.261719 205.835938 53.589844 C 206.4375 53.085938 206.492188 52.636719 205.929688 51.796875 C 205.542969 51.175781 205.042969 50.605469 204.457031 49.910156 Z M 46.441406 188.242188 C 46.125 188.476562 45.921875 188.59375 45.75 188.753906 C 44.449219 189.980469 44.496094 190.320312 45.703125 191.601562 C 46.636719 192.589844 47.574219 192.484375 48.453125 191.421875 C 48.941406 190.828125 48.996094 190.460938 48.453125 189.921875 C 47.914062 189.382812 47.125 188.804688 46.441406 188.242188 Z M 183.011719 208.359375 C 183.859375 208.285156 184.4375 207.609375 184.980469 206.859375 C 185.363281 206.277344 185.277344 205.503906 184.773438 205.015625 C 184.269531 204.53125 183.492188 204.472656 182.921875 204.875 C 182.550781 205.105469 182.191406 205.355469 181.847656 205.625 C 181.304688 205.960938 181.109375 206.65625 181.394531 207.226562 C 181.621094 207.921875 182.28125 208.382812 183.011719 208.359375 Z M 51.925781 76.449219 C 51.828125 77.199219 52.132812 77.671875 52.914062 78.082031 C 53.40625 78.414062 54.070312 78.296875 54.417969 77.820312 C 54.789062 77.398438 55.128906 76.945312 55.433594 76.472656 C 55.652344 76.265625 55.757812 75.96875 55.71875 75.667969 C 55.675781 75.371094 55.496094 75.113281 55.230469 74.972656 C 54.929688 74.707031 54.59375 74.492188 54.230469 74.328125 C 53.980469 74.210938 53.691406 74.210938 53.441406 74.328125 C 52.761719 74.894531 52.242188 75.625 51.925781 76.449219 Z M 151.582031 104.734375 C 151.667969 104.734375 151.777344 104.734375 151.816406 104.734375 C 152.320312 104.285156 152.769531 103.785156 153.160156 103.234375 C 153.484375 102.710938 152.929688 102.375 152.582031 102.058594 C 152.238281 101.71875 151.863281 101.410156 151.472656 101.128906 C 151.019531 100.78125 150.378906 100.816406 149.96875 101.210938 C 149.527344 101.570312 149.097656 101.960938 149.21875 102.613281 C 149.335938 103.265625 151.011719 104.667969 151.582031 104.71875 Z M 167.90625 188.046875 C 168.65625 187.523438 169.492188 187 170.265625 186.4375 C 170.375 186.363281 170.390625 186.0625 170.355469 185.890625 C 170.082031 184.390625 169.128906 183.910156 167.742188 184.621094 C 167.53125 184.734375 167.320312 184.863281 167.109375 184.992188 C 166.140625 185.582031 166.074219 185.816406 166.628906 186.828125 C 166.777344 187.113281 166.960938 187.378906 167.175781 187.621094 C 167.402344 187.792969 167.644531 187.9375 167.90625 188.046875 Z M 58.367188 82.316406 C 58.675781 82.234375 58.886719 82.242188 58.976562 82.136719 C 59.59375 81.511719 60.15625 80.835938 60.667969 80.121094 C 60.96875 79.65625 60.539062 78.914062 59.917969 78.488281 C 59.492188 78.128906 58.863281 78.15625 58.472656 78.554688 C 58.0625 78.9375 57.6875 79.359375 57.355469 79.8125 C 57.0625 80.179688 56.605469 80.617188 57 81.09375 C 57.417969 81.542969 57.878906 81.953125 58.367188 82.316406 Z M 63.242188 86.320312 C 63.46875 86.191406 63.761719 86.058594 63.996094 85.878906 C 64.285156 85.648438 64.558594 85.398438 64.8125 85.128906 C 65.230469 84.699219 65.390625 84.085938 65.238281 83.507812 C 65.082031 82.933594 64.636719 82.480469 64.0625 82.316406 C 63.90625 82.28125 63.746094 82.28125 63.589844 82.316406 C 63.0625 82.46875 61.441406 84.175781 61.515625 84.601562 C 61.660156 85.417969 62.34375 85.847656 63.019531 86.25 C 63.089844 86.285156 63.164062 86.308594 63.242188 86.320312 Z M 32.859375 21.976562 C 32.941406 21.976562 33.183594 21.929688 33.304688 21.796875 C 33.847656 21.25 34.347656 20.664062 34.804688 20.042969 C 35.097656 19.421875 34.890625 18.683594 34.316406 18.308594 C 33.914062 17.863281 33.230469 17.824219 32.777344 18.21875 C 32.308594 18.601562 31.894531 19.054688 31.554688 19.554688 C 30.757812 20.65625 31.378906 21.871094 32.859375 21.976562 Z M 50.472656 72.234375 C 50.472656 71.425781 49.84375 71.179688 49.355469 70.84375 C 49.160156 70.65625 48.890625 70.570312 48.621094 70.605469 C 48.355469 70.640625 48.117188 70.796875 47.980469 71.03125 C 47.582031 71.585938 47.230469 72.152344 46.847656 72.746094 C 46.714844 72.929688 46.664062 73.160156 46.707031 73.382812 C 46.746094 73.605469 46.878906 73.800781 47.070312 73.921875 C 47.582031 74.289062 48.117188 74.964844 48.761719 74.582031 C 49.539062 73.972656 50.132812 73.160156 50.472656 72.234375 Z M 174.335938 198.257812 C 175.28125 198.089844 176.132812 197.589844 176.738281 196.847656 C 177.097656 196.5 177.136719 195.941406 176.835938 195.542969 C 176.167969 194.335938 175.710938 194.1875 174.515625 194.898438 C 174.207031 195.085938 173.914062 195.304688 173.644531 195.542969 C 172.976562 196.144531 172.894531 196.449219 173.417969 197.207031 C 173.699219 197.578125 174.003906 197.929688 174.335938 198.257812 Z M 23.578125 215.855469 C 24.207031 215.898438 25.425781 214.910156 25.4375 214.402344 C 25.445312 214.238281 25.394531 214.082031 25.304688 213.949219 C 24.878906 213.367188 24.40625 212.816406 23.890625 212.308594 C 23.628906 212.078125 23.285156 211.960938 22.933594 211.988281 C 22.585938 212.015625 22.261719 212.183594 22.035156 212.453125 C 21.765625 212.640625 21.59375 212.941406 21.5625 213.269531 C 21.527344 213.597656 21.640625 213.921875 21.871094 214.160156 C 22.257812 214.671875 22.683594 215.15625 23.140625 215.605469 C 23.273438 215.710938 23.417969 215.796875 23.578125 215.855469 Z M 209.636719 227.957031 C 209.539062 227.242188 209.023438 226.652344 208.324219 226.460938 C 207.992188 226.371094 207.636719 226.429688 207.355469 226.625 C 206.871094 227.105469 206.445312 227.644531 206.09375 228.230469 C 205.804688 228.726562 205.921875 229.359375 206.363281 229.726562 C 206.785156 230.15625 207.289062 230.53125 207.867188 230.199219 C 208.660156 229.640625 209.277344 228.863281 209.636719 227.957031 Z M 190.785156 65.207031 C 190.667969 64.851562 190.523438 64.503906 190.347656 64.171875 C 190.097656 63.804688 189.820312 63.460938 189.515625 63.136719 C 188.703125 62.207031 188.441406 62.191406 187.53125 62.988281 C 187.382812 63.121094 187.238281 63.265625 187.097656 63.40625 C 186.933594 63.535156 186.828125 63.726562 186.808594 63.933594 C 186.789062 64.140625 186.859375 64.347656 187 64.5 C 187.410156 65.050781 187.855469 65.574219 188.335938 66.066406 C 188.6875 66.445312 189.261719 66.511719 189.6875 66.226562 C 190.082031 65.917969 190.449219 65.578125 190.785156 65.207031 Z M 59.433594 176.878906 C 60.1875 176.878906 60.457031 176.320312 60.765625 175.863281 C 61.191406 175.21875 61.164062 174.886719 60.570312 174.363281 C 60.070312 173.953125 59.542969 173.578125 58.992188 173.238281 C 58.816406 173.097656 58.585938 173.03125 58.363281 173.0625 C 58.136719 173.09375 57.933594 173.210938 57.796875 173.394531 C 57.40625 173.890625 56.730469 174.40625 57.113281 175.066406 C 57.699219 175.863281 58.507812 176.472656 59.433594 176.820312 Z M 170.859375 193.210938 C 171.910156 192.933594 172.835938 192.304688 173.480469 191.429688 C 173.648438 190.871094 173.484375 190.265625 173.050781 189.878906 C 172.691406 189.515625 172.121094 189.472656 171.707031 189.773438 C 171.136719 190.085938 170.585938 190.425781 170.054688 190.800781 C 169.867188 190.890625 169.726562 191.054688 169.667969 191.25 C 169.605469 191.449219 169.628906 191.660156 169.730469 191.839844 C 170.023438 192.351562 170.234375 192.996094 170.859375 193.152344 Z M 28.835938 13.957031 C 27.945312 14.320312 27.191406 14.957031 26.6875 15.777344 C 26.421875 16.195312 26.480469 16.742188 26.828125 17.097656 C 27.578125 17.996094 28.203125 18.039062 29.082031 17.214844 C 29.359375 16.96875 29.609375 16.695312 29.832031 16.398438 C 30.488281 15.5 30.425781 15.078125 29.546875 14.367188 C 29.320312 14.210938 29.082031 14.074219 28.835938 13.957031 Z M 111.113281 156.800781 C 110.21875 157.105469 109.585938 157.902344 109.492188 158.839844 C 109.492188 158.992188 109.492188 159.222656 109.59375 159.289062 C 110.34375 159.832031 111.121094 160.332031 111.925781 160.789062 C 112.113281 160.886719 112.480469 160.640625 112.832031 160.519531 C 112.34375 159.433594 111.925781 158.464844 111.488281 157.519531 C 111.390625 157.265625 111.253906 157.0625 111.113281 156.800781 Z M 93.417969 119.851562 C 93.125 120.25 92.875 120.671875 92.664062 121.117188 C 92.515625 121.949219 93.019531 122.757812 93.828125 122.992188 C 94.445312 123.171875 94.867188 122.796875 95.136719 121.890625 C 95.3125 121.464844 95.160156 120.972656 94.777344 120.722656 C 94.40625 120.445312 93.988281 120.203125 93.417969 119.851562 Z M 137.3125 117.324219 C 136.101562 118.628906 136.304688 119.265625 138.363281 120.445312 C 138.492188 120.160156 138.777344 119.828125 138.703125 119.625 C 138.523438 118.722656 138.03125 117.90625 137.3125 117.324219 Z M 112.710938 90.6875 C 112.441406 91.828125 112.464844 91.949219 112.945312 92.480469 C 113.90625 93.542969 114.175781 93.695312 115.019531 93.574219 Z M 116.820312 153.832031 C 115.949219 153.398438 115.695312 153.464844 114.847656 154.246094 C 116.03125 154.832031 116.09375 154.824219 116.820312 153.804688 Z M 116.820312 153.832031 "})],-1),mf=[vf];function yf(i,t){return Y(),i1("svg",pf,mf)}const gf=x1(Cf,[["render",yf]]),_f={},bf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},wf=J5('<g id="surface1"><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 94.386719 147.949219 C 94.386719 148.902344 94.851562 149.171875 95.667969 149.058594 C 96.488281 148.945312 96.421875 148.4375 96.351562 147.808594 C 96.179688 146.511719 96.503906 146.308594 97.734375 146.75 C 98.089844 146.9375 98.472656 147.0625 98.871094 147.117188 C 99.441406 147.117188 100.320312 147.117188 100.523438 146.820312 C 100.945312 146.148438 101.136719 145.359375 101.0625 144.570312 C 100.949219 143.820312 100.3125 144.203125 100.019531 144.570312 C 99.589844 145.125 99.269531 145.738281 98.824219 146.414062 C 98.019531 144.539062 98.652344 142.667969 100.515625 142.546875 C 100.746094 142.546875 101.011719 142.222656 101.167969 141.984375 C 101.660156 141.136719 102.203125 140.324219 102.789062 139.539062 C 103.945312 138.257812 105.222656 137.082031 106.441406 135.851562 C 106.832031 135.464844 107.191406 135.105469 107.769531 135.613281 C 108.027344 135.75 108.332031 135.75 108.589844 135.613281 C 108.722656 135.359375 108.589844 134.984375 108.632812 134.660156 C 108.679688 134.339844 108.566406 133.851562 108.753906 133.636719 C 109.632812 132.601562 110.59375 131.632812 111.804688 130.34375 C 112.195312 131.242188 112.691406 131.84375 112.609375 132.316406 C 112.40625 133.558594 113.117188 133.816406 114.171875 134.113281 C 114.050781 133.085938 112.667969 132.152344 114.109375 131.242188 C 114.992188 130.675781 116.152344 130.796875 116.902344 131.527344 L 117.273438 131.425781 C 117.183594 130.675781 117.273438 129.859375 116.925781 129.296875 C 116.730469 128.972656 115.777344 128.949219 115.207031 129.054688 C 113.652344 129.332031 113.703125 129.386719 113.703125 127.894531 C 113.671875 127.460938 113.597656 127.03125 113.488281 126.613281 C 114.019531 126.835938 114.574219 127.277344 114.988281 127.1875 C 115.402344 127.097656 115.835938 126.5 116.234375 126.101562 L 148.789062 93.625 C 149.285156 93.132812 149.726562 92.382812 150.628906 93.296875 C 151.832031 89.855469 154.609375 87.847656 156.96875 85.523438 C 158.167969 84.4375 158.960938 82.976562 159.222656 81.378906 C 159.855469 76.882812 162.105469 73.253906 164.871094 69.839844 C 166.734375 67.53125 168.515625 65.136719 170.488281 62.921875 C 171.992188 61.242188 173.703125 59.773438 175.320312 58.207031 C 175.808594 57.734375 176.296875 57.246094 176.753906 56.746094 C 177.738281 55.664062 178.257812 55.734375 179.5625 56.242188 C 182.84375 57.5 184.695312 60.394531 187.140625 62.605469 C 187.472656 63.007812 187.683594 63.492188 187.75 64.007812 C 188.070312 65.414062 188.351562 66.828125 188.589844 68.25 C 188.660156 68.617188 188.6875 69.15625 188.480469 69.375 C 187.398438 70.488281 186.226562 71.523438 185.054688 72.625 C 183.539062 71.015625 182.800781 68.828125 183.039062 66.628906 C 181.726562 66.78125 180.292969 68.128906 180.269531 69.207031 C 180.335938 69.550781 180.574219 69.835938 180.898438 69.957031 C 182.882812 70.234375 183.429688 71.898438 184.152344 73.332031 C 184.28125 73.585938 183.851562 74.296875 183.507812 74.582031 C 180.886719 76.769531 178.25 78.898438 175.566406 81.050781 C 172.203125 83.777344 168.535156 85.855469 164.15625 86.476562 C 162.644531 86.734375 161.265625 87.492188 160.238281 88.628906 C 146.605469 102.296875 132.945312 115.945312 119.253906 129.566406 C 118.007812 130.808594 118.007812 130.808594 119.253906 132.074219 C 129.769531 142.570312 140.3125 153.078125 150.878906 163.601562 C 151.824219 164.535156 152.199219 165.257812 151.296875 166.425781 C 150.769531 167.246094 150.3125 168.109375 149.9375 169.011719 C 149.429688 168.578125 149 168.261719 148.617188 167.863281 L 115.980469 135.304688 C 114.734375 134.054688 114.726562 134.054688 113.464844 135.304688 C 102.363281 146.382812 91.207031 157.417969 80.175781 168.570312 C 76.191406 172.59375 72.527344 176.925781 68.675781 181.078125 C 66.757812 183.140625 64.753906 185.117188 62.785156 187.132812 C 60.253906 189.71875 57.722656 192.3125 55.175781 194.882812 C 54.875 195.113281 54.542969 195.300781 54.191406 195.445312 C 53.957031 195.132812 53.777344 194.785156 53.660156 194.410156 C 53.589844 193.816406 53.589844 193.214844 53.660156 192.621094 C 53.734375 191.914062 53.882812 191.21875 54.003906 190.515625 L 53.621094 190.378906 C 53.324219 190.972656 53.105469 191.597656 52.96875 192.246094 C 52.847656 193.003906 52.929688 193.777344 53.207031 194.492188 C 53.960938 196.066406 53.207031 197.066406 52.195312 198.082031 C 49.882812 200.488281 47.621094 202.941406 45.246094 205.285156 C 44.542969 205.929688 43.707031 206.414062 42.796875 206.703125 C 41.421875 207.183594 40.761719 206.507812 41.011719 204.882812 L 40.070312 205.5625 C 37.9375 203.832031 37.992188 202.132812 39.914062 200.242188 C 48.019531 192.3125 56.21875 184.503906 64.429688 176.671875 C 67.894531 173.375 71.460938 170.179688 74.945312 166.925781 C 76.507812 165.480469 78.078125 164.042969 79.589844 162.542969 C 84.222656 157.964844 88.820312 153.347656 93.4375 148.746094 C 93.800781 148.488281 94.09375 148.21875 94.386719 147.949219 Z M 178.382812 59.128906 C 178.300781 61.375 179.464844 62.832031 180.59375 64.621094 C 180.734375 62.304688 180.335938 60.535156 178.382812 59.128906 Z M 184.394531 64.238281 L 183.867188 61.722656 L 183.328125 61.722656 C 183.191406 62.277344 182.769531 63.011719 182.980469 63.355469 C 183.558594 64.167969 184.21875 64.921875 184.949219 65.601562 C 185.105469 64.855469 185.292969 64.03125 185.519531 63.003906 Z M 184.394531 64.238281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 100.402344 119.710938 L 99.777344 119.117188 C 89.636719 109 79.496094 98.878906 69.394531 88.738281 C 68.132812 87.507812 66.539062 86.664062 64.804688 86.320312 C 62.386719 85.742188 59.894531 85.277344 57.828125 83.777344 C 54.742188 81.53125 51.601562 79.335938 48.710938 76.851562 C 45.703125 74.253906 42.886719 71.351562 40.003906 68.554688 C 39.253906 67.808594 39.679688 67.058594 39.964844 66.234375 C 41.019531 63.234375 43.667969 61.570312 45.585938 59.292969 C 46.90625 57.710938 48.648438 56.878906 50.40625 56.03125 C 50.765625 55.78125 51.21875 55.691406 51.644531 55.789062 C 52.074219 55.886719 52.441406 56.160156 52.660156 56.542969 C 53.144531 57.183594 53.707031 57.765625 54.335938 58.273438 C 59.335938 62.644531 63.402344 67.820312 67.164062 73.261719 C 68.710938 75.480469 69.738281 78.015625 70.167969 80.683594 C 70.433594 82.554688 71.308594 84.285156 72.664062 85.605469 C 83.109375 95.929688 93.476562 106.324219 103.871094 116.695312 C 104.121094 116.902344 104.347656 117.132812 104.546875 117.386719 C 104.757812 117.691406 105.117188 118.203125 105.015625 118.359375 C 104.757812 118.707031 104.375 118.941406 103.945312 119.011719 C 103.195312 119.117188 102.445312 119.011719 101.695312 119.085938 C 101.234375 119.226562 100.796875 119.4375 100.402344 119.710938 Z M 100.402344 119.710938 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 191.078125 202.820312 C 190.730469 204.492188 189.617188 205.902344 188.074219 206.628906 C 186.796875 207.296875 185.496094 206.554688 184.582031 205.652344 C 182.085938 203.203125 179.714844 200.640625 177.292969 198.113281 C 174.402344 195.117188 171.527344 192.066406 168.621094 189.050781 C 165.488281 185.816406 162.308594 182.628906 159.207031 179.367188 C 156.480469 176.5 153.851562 173.546875 151.140625 170.660156 C 150.390625 169.859375 150.523438 169.332031 151.375 168.734375 C 151.933594 168.34375 152.421875 167.855469 152.816406 167.292969 C 153.445312 166.367188 153.996094 166.449219 154.753906 167.136719 C 156.652344 168.867188 158.660156 170.488281 160.515625 172.269531 C 165.097656 176.664062 169.601562 181.144531 174.175781 185.550781 C 179.246094 190.425781 184.394531 195.222656 189.441406 200.128906 C 190.101562 200.953125 190.652344 201.855469 191.078125 202.820312 Z M 191.078125 202.820312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 110 123.097656 C 111.578125 124.070312 111.855469 124.933594 110.851562 125.800781 C 110.558594 126.058594 109.992188 125.996094 109.558594 126.078125 C 109.53125 125.726562 109.53125 125.371094 109.558594 125.015625 C 109.664062 124.417969 109.8125 123.800781 110 123.097656 Z M 110 123.097656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 111.316406 130.449219 C 111.027344 130.160156 110.761719 129.851562 110.511719 129.527344 C 110.921875 129.035156 111.402344 128.601562 111.9375 128.246094 C 112.027344 128.195312 112.554688 128.867188 112.871094 129.207031 Z M 111.316406 130.449219 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 103.519531 122.65625 L 101.6875 120.667969 C 104.039062 121.199219 104.285156 121.417969 103.519531 122.65625 Z M 103.519531 122.65625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 106.058594 123.441406 C 105.96875 121.996094 106.335938 121.777344 107.808594 122.339844 Z M 106.058594 123.441406 "></path></g>',1),Mf=[wf];function Lf(i,t){return Y(),i1("svg",bf,Mf)}const xf=x1(_f,[["render",Lf]]),kf={},zf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},Ef=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 114.695312 162.21875 C 114.410156 162.746094 114.082031 163.25 113.710938 163.71875 C 100.191406 177.210938 86.6875 190.703125 73.195312 204.191406 C 68.238281 209.132812 61.003906 209.484375 55.792969 205.085938 C 50.539062 200.550781 49.949219 192.628906 54.476562 187.375 C 54.921875 186.863281 55.402344 186.382812 55.875 185.914062 C 69.214844 172.601562 82.554688 159.289062 95.894531 145.980469 C 96.375 145.582031 96.875 145.214844 97.398438 144.878906 C 96.871094 144.574219 96.367188 144.230469 95.894531 143.851562 C 80.515625 128.496094 65.144531 113.132812 49.777344 97.765625 C 49.066406 97.085938 48.519531 96.253906 48.175781 95.335938 C 47.683594 93.78125 48.175781 92.082031 49.421875 91.027344 C 53.222656 87.277344 56.996094 83.480469 60.78125 79.707031 C 62.816406 77.691406 65.234375 77.683594 67.277344 79.707031 C 72.671875 85.070312 78.050781 90.4375 83.417969 95.816406 C 93.503906 105.886719 103.589844 115.960938 113.683594 126.027344 C 114.019531 126.363281 114.296875 126.777344 114.652344 127.175781 C 115.109375 126.746094 115.402344 126.425781 115.726562 126.164062 L 161.882812 80.105469 C 164.503906 77.484375 166.546875 77.492188 169.199219 80.105469 L 179.960938 90.847656 C 182.214844 93.09375 182.214844 95.34375 179.960938 97.589844 L 133.550781 143.902344 C 133.121094 144.277344 132.671875 144.632812 132.203125 144.960938 C 132.707031 145.253906 133.183594 145.582031 133.632812 145.949219 C 147.152344 159.441406 160.660156 172.917969 174.15625 186.382812 C 179.300781 191.527344 179.414062 199.378906 174.464844 204.371094 C 169.820312 209.0625 162.328125 209.363281 157.324219 205.0625 C 156.839844 204.648438 156.390625 204.207031 155.941406 203.757812 C 142.570312 190.425781 129.203125 177.085938 115.84375 163.734375 C 115.433594 163.25 115.050781 162.746094 114.695312 162.21875 Z M 165.691406 205.992188 C 168.695312 205.992188 171.546875 204.664062 173.472656 202.363281 C 177.226562 197.933594 176.820312 192.058594 172.503906 187.742188 L 66.144531 81.558594 C 65.925781 81.328125 65.699219 81.109375 65.460938 80.902344 C 65.078125 80.507812 64.554688 80.289062 64.007812 80.289062 C 63.464844 80.289062 62.941406 80.507812 62.558594 80.902344 C 58.585938 84.816406 54.628906 88.761719 50.699219 92.726562 C 49.789062 93.648438 49.851562 94.683594 50.699219 95.726562 C 50.984375 96.054688 51.300781 96.363281 51.609375 96.667969 L 157.210938 202.046875 C 157.621094 202.46875 158.058594 202.878906 158.492188 203.277344 C 160.453125 205.070312 163.03125 206.042969 165.691406 205.992188 Z M 131.039062 143.394531 C 131.371094 143.09375 131.605469 142.890625 131.792969 142.644531 L 178.4375 96.09375 C 179.824219 94.707031 179.824219 93.738281 178.4375 92.34375 L 167.507812 81.441406 C 165.886719 79.820312 165.035156 79.8125 163.429688 81.441406 L 117.175781 127.675781 C 116.882812 127.96875 116.597656 128.285156 116.371094 128.53125 L 117.753906 130.105469 L 136.964844 110.925781 C 140.941406 114.898438 144.824219 118.773438 148.886719 122.820312 L 129.832031 141.8125 Z M 98.488281 146.390625 L 97.878906 146.953125 L 57.015625 187.734375 C 56.707031 188.039062 56.410156 188.355469 56.121094 188.683594 C 54.246094 190.847656 53.335938 193.683594 53.605469 196.53125 C 53.875 199.378906 55.296875 201.996094 57.542969 203.773438 C 61.914062 207.167969 67.699219 206.679688 71.8125 202.542969 C 85.378906 189.015625 98.945312 175.480469 112.511719 161.9375 C 112.734375 161.710938 112.945312 161.480469 113.097656 161.3125 L 111.667969 159.640625 C 111.351562 160.003906 111.113281 160.308594 110.828125 160.59375 L 78.527344 192.824219 C 75.675781 195.679688 72.828125 198.542969 69.949219 201.375 C 67.199219 204.152344 62.882812 204.640625 59.578125 202.550781 C 54.9375 199.613281 54.371094 193.390625 58.40625 189.359375 C 71.925781 175.867188 85.460938 162.359375 99.011719 148.835938 C 99.3125 148.535156 99.589844 148.21875 99.890625 147.914062 Z M 98.488281 146.390625 "}),w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 92.539062 110.96875 C 92.679688 111.097656 92.882812 111.277344 93.078125 111.472656 L 171.195312 189.417969 C 175.019531 193.234375 174.636719 199.164062 170.398438 202.265625 C 167.375 204.441406 163.269531 204.355469 160.34375 202.046875 C 159.914062 201.699219 159.503906 201.324219 159.117188 200.925781 L 81.601562 123.578125 C 81.300781 123.316406 80.980469 123.082031 80.640625 122.878906 Z M 92.539062 110.96875 "})],-1),Pf=[Ef];function Sf(i,t){return Y(),i1("svg",zf,Pf)}const Of=x1(kf,[["render",Sf]]),Rf={},If={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},Tf=J5('<g id="surface1"><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 79.558594 212.015625 C 76.441406 211.175781 74.804688 208.980469 73.960938 206.019531 C 73.757812 205.363281 73.757812 204.613281 72.789062 204.253906 C 72.488281 204.148438 72.453125 203.300781 72.292969 202.796875 L 72.542969 202.699219 L 73.097656 203.449219 L 73.359375 203.40625 C 73.171875 201.675781 72.984375 199.933594 72.789062 198.203125 C 72.707031 197.453125 72.585938 196.703125 72.527344 195.957031 C 72.375 194.945312 72.617188 193.917969 73.210938 193.085938 C 73.5625 192.46875 73.75 191.769531 73.757812 191.0625 C 73.84375 190.148438 73.757812 189.21875 73.757812 188.128906 L 74.511719 189.898438 L 74.804688 189.824219 L 74.804688 187.515625 L 75.554688 187.882812 C 75.683594 185.058594 74.804688 182.140625 76.9375 179.714844 C 78.039062 180.726562 76.394531 181.503906 76.769531 182.417969 C 77.566406 181.804688 78.273438 181.167969 78.273438 180.058594 C 78.273438 179.738281 78.320312 179.273438 78.136719 179.113281 C 77.507812 178.574219 77.882812 178.148438 78.136719 177.617188 C 78.632812 176.492188 79.09375 175.367188 79.542969 174.210938 C 79.722656 173.777344 79.753906 173.1875 80.46875 173.652344 L 81.128906 172.152344 L 81.316406 172.152344 L 81.449219 173.449219 C 81.972656 173.003906 82.195312 172.296875 82.023438 171.632812 C 81.796875 170.421875 82.496094 169.226562 83.667969 168.824219 C 83.886719 168.691406 84.042969 168.480469 84.101562 168.230469 C 84.3125 167.550781 84.46875 166.84375 84.65625 166.09375 C 83.980469 165.9375 84.074219 165.527344 84.515625 165.179688 C 85.152344 164.703125 85.84375 164.289062 86.519531 163.871094 C 86.820312 163.691406 87.152344 163.5625 87.503906 163.398438 C 86.753906 162.691406 85.921875 162.960938 85.0625 164.191406 C 84.574219 163.667969 84.109375 163.148438 83.628906 162.65625 C 83.503906 162.53125 83.347656 162.433594 83.179688 162.378906 C 81.917969 161.914062 80.648438 161.464844 79.421875 161.007812 C 79.285156 160.945312 79.136719 160.898438 78.988281 160.871094 C 78.320312 160.917969 77.660156 160.726562 77.117188 160.339844 C 76.765625 160.039062 76.164062 160.039062 75.683594 159.867188 C 75.359375 159.746094 75.058594 159.566406 74.59375 159.34375 L 75.203125 159.101562 C 73.925781 158.578125 72.601562 158.054688 71.296875 157.507812 C 69.355469 156.726562 67.738281 155.320312 66.699219 153.511719 C 65.894531 152.164062 64.632812 151.144531 63.144531 150.632812 C 62.828125 150.527344 62.503906 150.445312 62.175781 150.386719 L 62.070312 150.597656 C 62.410156 150.867188 62.746094 151.136719 63.09375 151.398438 C 63.539062 151.699219 63.964844 152.03125 64.363281 152.394531 C 64.535156 152.582031 64.503906 152.957031 64.574219 153.242188 C 64.265625 153.183594 63.820312 153.242188 63.671875 153.03125 C 62.972656 152.113281 62.050781 151.386719 60.988281 150.925781 C 59.699219 150.210938 58.445312 149.429688 57.234375 148.585938 C 56.753906 148.175781 56.316406 147.71875 55.925781 147.222656 C 56.769531 146.832031 56.867188 146.21875 56.257812 145.722656 C 55.996094 145.523438 55.710938 145.359375 55.402344 145.238281 C 54.710938 144.980469 53.996094 144.839844 53.628906 144.023438 C 53.5 143.746094 52.921875 143.582031 52.523438 143.519531 C 51.078125 143.230469 49.746094 142.535156 48.6875 141.511719 C 48.859375 140.683594 48.574219 139.824219 47.9375 139.261719 C 46.863281 138.222656 45.683594 137.277344 44.699219 136.167969 C 43.847656 135.214844 43.195312 134.0625 42.445312 133.035156 C 42.015625 132.363281 41.394531 131.839844 40.65625 131.535156 C 40.054688 131.320312 39.636719 130.570312 39.15625 130.039062 C 36.691406 126.957031 35.070312 123.539062 35.121094 119.542969 C 35.222656 117.472656 35.792969 115.453125 36.78125 113.632812 C 37.511719 112.035156 38.644531 110.660156 40.070312 109.636719 C 41.179688 108.785156 42.515625 108.285156 43.910156 108.203125 L 42.675781 108.953125 C 43.4375 109.292969 44.320312 109.207031 45 108.730469 C 45.207031 108.585938 45.457031 108.382812 45.683594 108.398438 C 46.230469 108.398438 46.75 108.601562 46.839844 107.761719 C 46.839844 107.636719 47.453125 107.433594 47.710938 107.507812 C 50.160156 108.257812 52.667969 107.882812 55.144531 107.949219 C 55.746094 107.949219 56.347656 107.703125 56.949219 107.710938 C 57.519531 107.789062 58.101562 107.816406 58.675781 107.785156 C 59.113281 107.65625 59.566406 107.585938 60.019531 107.574219 C 64.167969 107.996094 68.3125 108.433594 72.453125 108.894531 C 73.136719 108.96875 73.8125 109.203125 74.496094 109.214844 C 75.351562 109.214844 76.207031 109.089844 77.0625 109.082031 C 77.757812 109.078125 78.449219 109.128906 79.136719 109.230469 C 80.527344 109.417969 81.902344 109.660156 83.292969 109.867188 C 84.230469 110.019531 85.183594 110.125 86.117188 110.304688 C 86.484375 110.386719 86.828125 110.558594 87.113281 110.804688 C 87.433594 111.152344 87.726562 111.527344 87.984375 111.921875 L 88.382812 111.734375 C 88.449219 110.847656 88.449219 109.960938 88.382812 109.074219 C 88.179688 107.710938 87.820312 106.375 87.535156 105.027344 C 87.46875 104.671875 87.429688 104.316406 87.421875 103.953125 C 87.421875 102.628906 87.421875 102.628906 86.394531 101.707031 L 86.84375 101.09375 C 86.613281 100.65625 86.445312 100.1875 86.347656 99.707031 C 86.347656 98.207031 86.402344 96.746094 86.429688 95.269531 C 86.429688 95.121094 86.402344 94.972656 86.347656 94.832031 C 85.980469 93.785156 86.386719 92.621094 87.324219 92.023438 C 85.957031 89.820312 86.257812 87.421875 86.65625 84.976562 L 85.4375 85.082031 C 85.597656 84.519531 85.574219 83.914062 85.867188 83.636719 C 86.421875 83.105469 86.265625 82.804688 85.808594 82.40625 C 85.585938 82.21875 85.457031 81.945312 85.445312 81.65625 L 86.386719 82.0625 C 85.363281 80.636719 85.867188 79.273438 86.117188 77.941406 C 86.402344 76.441406 86.707031 74.941406 87.085938 73.441406 C 87.269531 72.914062 87.519531 72.410156 87.835938 71.945312 C 88.316406 71.113281 87.902344 70.511719 87.300781 70.011719 C 86.421875 69.261719 86.363281 68.984375 86.804688 67.949219 C 87.160156 67.101562 87.398438 66.210938 87.722656 65.347656 C 88.128906 64.277344 88.570312 63.226562 89.097656 61.910156 C 88.710938 61.207031 88.800781 60.339844 89.316406 59.726562 C 89.398438 59.570312 89.421875 59.386719 89.382812 59.210938 C 89.101562 58.128906 89.515625 56.988281 90.425781 56.339844 C 90.621094 56.175781 90.621094 55.738281 90.652344 55.433594 C 90.71875 54.804688 90.441406 54.082031 91.261719 53.703125 C 91.351562 53.65625 91.359375 53.3125 91.304688 53.132812 C 90.921875 51.820312 90.921875 50.636719 92.140625 49.675781 C 92.734375 49.203125 92.238281 48.859375 91.875 48.695312 C 92.019531 47.734375 92.15625 46.859375 92.273438 45.972656 C 92.3125 45.742188 92.273438 45.496094 92.335938 45.222656 C 92.523438 44.265625 92.980469 44.121094 93.835938 44.675781 L 93.738281 43.179688 L 94.492188 43.179688 C 95.011719 43.753906 95.722656 44.121094 96.496094 44.21875 C 97.246094 44.128906 98.058594 44.085938 98.839844 44.019531 L 98.929688 44.296875 L 99.148438 43.46875 C 100.4375 43.605469 100.542969 43.65625 102.511719 44.871094 C 102.816406 44.84375 103.121094 44.878906 103.414062 44.96875 C 104.25 45.417969 105.058594 45.917969 105.832031 46.46875 C 106.375 46.867188 107.027344 47.21875 106.945312 48.132812 C 106.945312 48.34375 107.246094 48.582031 107.433594 48.882812 C 108.265625 48.515625 109.015625 47.765625 109.796875 48.476562 C 109.882812 48.863281 109.996094 49.242188 110.136719 49.609375 C 110.398438 50.164062 111.054688 50.570312 110.730469 51.332031 C 110.683594 51.511719 110.726562 51.699219 110.84375 51.84375 C 112.1875 52.929688 112.472656 54.707031 113.546875 55.964844 C 113.695312 56.121094 113.785156 56.320312 113.800781 56.535156 C 113.800781 58.167969 114.972656 58.78125 116.273438 59.351562 L 115.167969 60.207031 L 116.460938 60.46875 C 116.078125 61.324219 116.460938 61.773438 117.273438 62.042969 C 118.292969 62.386719 118.519531 63.300781 118.714844 64.292969 L 120.636719 63.722656 C 120.566406 63.996094 120.476562 64.265625 120.375 64.53125 C 119.722656 65.753906 119.796875 66.53125 120.824219 67.476562 C 121.632812 68.035156 121.976562 69.0625 121.660156 69.996094 C 121.449219 70.699219 121.304688 71.703125 122.628906 71.710938 C 122.6875 71.722656 122.742188 71.757812 122.777344 71.808594 C 123.597656 72.910156 125.03125 73.539062 125.308594 75.03125 C 125.40625 75.878906 125.421875 76.730469 125.355469 77.582031 C 125.355469 77.976562 125.160156 78.375 125.1875 78.765625 C 125.269531 79.109375 125.398438 79.441406 125.578125 79.746094 C 125.714844 80.070312 126.054688 80.496094 125.960938 80.707031 C 125.398438 82.128906 126.128906 83.320312 126.714844 84.40625 C 127.300781 85.496094 127.675781 86.378906 127.300781 87.539062 C 126.960938 87.5625 126.648438 87.746094 126.46875 88.035156 C 126.285156 88.320312 126.253906 88.679688 126.382812 88.996094 C 126.492188 89.261719 126.695312 89.480469 126.953125 89.609375 C 127.050781 89.660156 127.441406 89.429688 127.480469 89.28125 C 127.5 89.019531 127.445312 88.761719 127.320312 88.53125 C 127.277344 88.433594 127.066406 88.402344 126.933594 88.34375 L 127.121094 88.027344 C 127.351562 88.09375 127.773438 88.164062 127.773438 88.238281 C 127.773438 89.078125 128.441406 89.804688 128.050781 90.742188 C 127.835938 91.277344 127.863281 91.882812 128.132812 92.398438 C 128.554688 92.996094 128.367188 93.214844 127.914062 93.535156 C 127.578125 93.128906 127.207031 92.746094 126.8125 92.390625 C 126.554688 92.238281 126.25 92.195312 125.960938 92.269531 C 125.347656 92.433594 125.097656 92.269531 125.210938 91.648438 C 125.265625 91.355469 125.355469 91.078125 125.453125 90.726562 L 126.007812 91.363281 C 126.007812 91.035156 126.121094 90.832031 126.058594 90.6875 C 125.664062 89.878906 124.71875 89.496094 123.867188 89.796875 C 123.648438 89.855469 123.117188 89.570312 123.117188 89.390625 C 122.957031 88.277344 122.890625 87.144531 122.816406 86.011719 C 122.816406 85.796875 122.839844 85.585938 122.875 85.375 L 123.816406 85.765625 C 123.816406 85.765625 123.816406 85.765625 123.816406 85.847656 C 123.816406 86.207031 123.816406 86.597656 123.816406 86.933594 C 124.304688 86.925781 124.789062 86.84375 125.257812 86.695312 C 125.761719 86.445312 125.761719 85.945312 125.257812 85.621094 C 124.957031 85.417969 124.589844 85.316406 124.316406 85.089844 C 123.90625 84.753906 123.429688 84.402344 123.957031 83.757812 C 124.050781 83.5625 124.035156 83.335938 123.917969 83.15625 C 123.253906 82.457031 122.289062 82.125 121.335938 82.273438 C 121.425781 82.414062 121.496094 82.574219 121.539062 82.738281 C 121.554688 82.988281 121.554688 83.238281 121.539062 83.484375 C 121.28125 83.453125 121.027344 83.382812 120.789062 83.285156 C 120.472656 83.058594 120.175781 82.808594 119.902344 82.535156 C 120.707031 82.171875 121.164062 81.3125 121.011719 80.441406 C 120.902344 79.882812 120.886719 79.308594 120.96875 78.742188 C 121.246094 77.65625 120.5625 77.585938 119.894531 77.714844 C 118.632812 77.941406 118.4375 76.6875 117.640625 76.261719 C 117.503906 76.1875 117.414062 76.027344 117.234375 75.828125 C 117.46875 75.292969 118.082031 75.347656 118.675781 75.324219 C 119.429688 75.324219 120.125 75.324219 120.515625 74.355469 L 119.433594 74.5 L 119.375 74.386719 L 121.164062 73.449219 L 120.992188 73.097656 C 119.25 73.507812 117.582031 74.175781 116.039062 75.085938 C 116.09375 74.777344 116.039062 74.574219 116.152344 74.460938 C 116.640625 73.832031 116.679688 73.34375 115.816406 73.03125 C 115.710938 72.984375 115.558594 72.769531 115.589844 72.6875 C 115.964844 71.667969 115.109375 71.554688 114.539062 71.320312 C 113.507812 70.910156 113.492188 70.941406 113.402344 69.824219 C 113.621094 69.753906 113.980469 69.734375 114.027344 69.597656 C 114.28125 68.847656 114.777344 68.910156 115.402344 68.992188 C 116.738281 69.148438 118.082031 69.230469 119.464844 69.34375 C 119.578125 68.667969 119.34375 68.277344 118.660156 68.277344 C 117.46875 68.277344 116.273438 68.347656 115.085938 68.332031 C 114.832031 68.332031 114.589844 68.097656 114.335938 67.972656 L 115.933594 67.050781 L 115.933594 66.855469 C 115.242188 66.773438 114.5625 66.683594 113.871094 66.621094 C 113.382812 66.578125 112.832031 66.621094 112.789062 65.957031 C 112.8125 65.507812 112.886719 65.0625 113.003906 64.628906 L 112.316406 64.457031 L 113.15625 63.8125 L 113.117188 63.707031 L 112.035156 64.089844 L 112.398438 62.589844 C 111.472656 63.527344 111.015625 63.21875 110.746094 62.261719 C 110.683594 62.058594 110.445312 61.914062 110.179688 61.625 L 112.230469 61.007812 L 112.425781 61.242188 L 111.300781 61.832031 L 111.632812 62.246094 L 113.976562 60.902344 L 113.882812 60.6875 L 110.203125 61.078125 L 110.765625 60.460938 C 110.726562 60.382812 110.675781 60.308594 110.625 60.238281 C 110.144531 59.75 109.648438 59.277344 109.183594 58.738281 C 109.046875 58.59375 108.867188 58.355469 108.90625 58.199219 C 109.183594 57.066406 108.507812 56.855469 107.621094 56.789062 C 107.46875 56.789062 107.335938 56.59375 107.257812 56.332031 L 108.011719 56.378906 L 108.070312 56.046875 L 106.378906 55.726562 C 106.417969 55.425781 106.320312 55.121094 106.113281 54.902344 C 105.90625 54.679688 105.609375 54.566406 105.308594 54.585938 C 105.53125 53.527344 106.125 54.03125 106.441406 54.257812 C 107.257812 54.832031 107.71875 54.480469 108.320312 53.574219 C 107.246094 53.5 106.34375 53.402344 105.433594 53.386719 C 104.179688 53.386719 104.023438 53.199219 103.707031 51.886719 C 103.601562 51.316406 103.320312 50.792969 102.902344 50.386719 C 102.609375 50.164062 101.964844 50.386719 101.402344 50.433594 L 101.109375 48.761719 L 100.941406 48.761719 L 100.378906 49.976562 C 100.101562 49.976562 99.757812 49.878906 99.628906 49.976562 C 99.5 50.074219 99.53125 50.449219 99.566406 50.726562 C 99.660156 51.28125 99.792969 51.820312 99.914062 52.390625 L 97.886719 51.773438 L 97.253906 54.171875 C 97.082031 54.195312 96.917969 54.25 96.765625 54.332031 C 96.710938 54.488281 96.734375 54.664062 96.828125 54.804688 C 97.894531 55.417969 97.351562 56.488281 97.578125 57.335938 C 97.71875 57.914062 97.808594 58.5 97.9375 59.195312 C 97.277344 59.359375 96.984375 57.695312 96.03125 58.640625 L 96.578125 59.808594 L 95.496094 60.199219 L 96.5625 60.949219 C 96.171875 61.839844 95.730469 62.726562 95.421875 63.648438 C 95.363281 63.84375 95.796875 64.210938 96.046875 64.539062 L 95.292969 64.621094 C 95.40625 64.988281 95.472656 65.304688 95.59375 65.597656 C 95.804688 66.113281 95.859375 66.511719 95.273438 66.898438 C 95.023438 67.066406 95.007812 67.589844 94.867188 68.015625 L 94.257812 67.738281 L 93.972656 67.84375 C 94.09375 68.285156 94.242188 68.722656 94.324219 69.164062 C 94.386719 69.496094 94.386719 69.839844 94.324219 70.175781 C 94.324219 70.296875 93.925781 70.488281 93.851562 70.4375 C 93.601562 70.238281 93.378906 70.007812 93.183594 69.753906 L 92.523438 70.078125 L 93.695312 70.910156 C 93.503906 71.867188 93.253906 72.808594 92.941406 73.734375 C 92.71875 74.28125 93.035156 74.410156 93.289062 74.671875 C 93.542969 74.933594 93.851562 75.136719 93.8125 75.300781 C 93.6875 75.894531 94.015625 76.679688 93.144531 77.003906 C 92.757812 77.179688 92.382812 77.382812 92.019531 77.609375 L 92.101562 77.917969 L 93.507812 77.917969 C 93.347656 78.457031 93.089844 78.964844 92.753906 79.417969 C 92.195312 79.878906 92.082031 80.691406 92.492188 81.289062 C 92.550781 81.394531 92.578125 81.511719 92.566406 81.628906 C 92.5 82.371094 92.332031 83.097656 92.0625 83.792969 C 91.632812 84.382812 91.128906 84.914062 90.5625 85.375 C 90.367188 85.570312 90.117188 85.816406 90.105469 86.058594 C 90.089844 86.296875 90.390625 86.46875 90.585938 86.714844 C 91.042969 86.25 91.066406 85.335938 91.710938 85.660156 C 91.730469 86.246094 91.789062 86.828125 91.890625 87.40625 C 92.101562 88.238281 91.890625 88.613281 91.035156 88.734375 C 90.824219 88.789062 90.621094 88.855469 90.417969 88.933594 L 92.28125 91.183594 L 91.53125 91.753906 C 91.53125 92.628906 91.53125 93.320312 91.53125 94 C 91.53125 94.234375 91.53125 94.554688 91.671875 94.667969 C 92.628906 95.417969 92.628906 96.542969 92.761719 97.605469 C 92.875 98.453125 92.851562 99.324219 93.515625 100.042969 C 93.746094 100.304688 93.738281 100.792969 93.851562 101.210938 L 92.589844 101.398438 C 93.429688 101.953125 93.4375 102.425781 93.027344 103.128906 C 92.800781 103.609375 92.824219 104.167969 93.085938 104.628906 C 93.941406 105.507812 93.722656 106.464844 93.625 107.46875 C 93.4375 108.636719 93.578125 109.835938 94.039062 110.925781 C 94.175781 111.4375 94.175781 111.976562 94.039062 112.492188 C 93.953125 112.949219 93.84375 113.402344 93.710938 113.847656 L 92.410156 114.671875 L 92.972656 115.023438 C 92.574219 115.398438 92.296875 115.886719 91.621094 115.46875 C 91.34375 115.363281 91.03125 115.394531 90.78125 115.558594 C 90.230469 115.96875 90.117188 115.558594 89.824219 115.234375 C 89.558594 114.882812 89.171875 114.640625 88.738281 114.554688 C 87.574219 114.554688 86.414062 114.71875 85.257812 114.785156 C 84.902344 114.796875 84.542969 114.753906 84.199219 114.65625 C 83.292969 114.441406 82.40625 114.171875 81.496094 113.960938 C 81.207031 113.929688 80.917969 113.929688 80.632812 113.960938 L 80.632812 114.335938 L 81.910156 114.582031 L 81.910156 114.703125 C 81.621094 114.660156 81.332031 114.660156 81.046875 114.703125 C 80.59375 114.835938 79.894531 114.253906 79.664062 115.121094 C 79.492188 115.125 79.324219 115.105469 79.160156 115.0625 C 75.566406 114.191406 71.894531 113.691406 68.199219 113.5625 L 56.933594 113.210938 C 55.078125 113.152344 53.179688 113.054688 51.359375 113.054688 C 50.191406 113.039062 49.019531 113.109375 47.859375 113.261719 C 46.769531 113.394531 45.796875 114.011719 45.214844 114.941406 C 44.960938 115.203125 44.621094 115.371094 44.253906 115.414062 C 43.703125 115.511719 43.148438 115.578125 42.585938 115.617188 L 42.84375 115.835938 C 42.71875 116.429688 42.542969 117.011719 42.324219 117.582031 C 40.988281 120.332031 41.769531 122.828125 43.1875 125.25 C 43.519531 125.738281 43.878906 126.210938 44.261719 126.664062 C 44.40625 126.851562 44.660156 127.085938 44.628906 127.257812 C 44.429688 128.410156 45.5 128.679688 46.027344 129.304688 C 46.554688 129.925781 47.257812 130.480469 47.882812 131.070312 C 48.007812 131.167969 48.117188 131.28125 48.214844 131.410156 C 48.867188 132.511719 49.492188 133.65625 50.167969 134.714844 C 50.578125 135.382812 51.054688 135.980469 50.789062 136.863281 C 50.730469 137.074219 51.058594 137.480469 51.308594 137.613281 C 51.40625 137.691406 51.765625 137.390625 52.058594 137.226562 C 52.96875 138.050781 53.898438 139.023438 54.957031 139.839844 C 59.105469 143.003906 63.273438 146.132812 67.464844 149.222656 C 68.148438 149.625 68.871094 149.953125 69.621094 150.207031 L 69.34375 149.035156 C 69.605469 149.128906 69.855469 149.246094 70.09375 149.390625 C 71.273438 150.25 72.722656 150.648438 73.652344 151.988281 C 74.332031 152.949219 75.652344 153.226562 76.9375 153.105469 C 77.539062 153.109375 78.136719 153.171875 78.722656 153.292969 L 78.722656 153.625 L 77.289062 153.730469 C 78.386719 154.9375 80.21875 153.796875 81.351562 155.160156 L 80.121094 154.996094 L 79.992188 155.304688 L 82.246094 156.34375 C 82.246094 155.902344 82.203125 155.59375 82.1875 155.355469 L 98.621094 160.167969 C 98.277344 160.550781 98.011719 160.863281 97.726562 161.148438 C 94.6875 164.207031 91.507812 167.144531 88.941406 170.636719 C 87.648438 172.390625 86.296875 174.09375 84.964844 175.816406 C 84.90625 175.921875 84.824219 176.015625 84.726562 176.085938 C 84.476562 176.222656 84.214844 176.324219 83.976562 176.445312 L 83.792969 175.695312 C 82.613281 176.445312 82.480469 176.910156 83.125 178.539062 L 84.132812 177.292969 C 84.132812 177.511719 84.117188 177.734375 84.085938 177.953125 C 83.710938 179.117188 83.621094 180.355469 83.824219 181.566406 C 84.148438 182.996094 83.367188 184.292969 82.914062 185.628906 C 82.105469 187.6875 81.433594 189.796875 80.894531 191.945312 C 80.460938 194.097656 80.496094 196.34375 80.257812 198.546875 C 80.097656 199.988281 79.785156 201.417969 79.625 202.859375 C 79.667969 203.214844 79.890625 203.523438 80.21875 203.667969 C 81.128906 203.832031 82.046875 203.9375 82.96875 203.984375 C 83.28125 204.03125 83.597656 203.949219 83.847656 203.757812 L 89.140625 197.761719 C 89.226562 197.671875 89.324219 197.535156 89.414062 197.535156 C 91.15625 197.535156 91.5 195.949219 92.3125 194.914062 C 93.125 193.878906 93.8125 192.753906 94.6875 191.757812 C 95.1875 191.300781 95.746094 190.90625 96.347656 190.582031 C 96.570312 190.453125 96.773438 190.285156 96.9375 190.085938 C 97.691406 188.871094 98.441406 187.636719 99.191406 186.40625 L 99.289062 186.257812 C 100.402344 183.894531 102.347656 182.300781 104.34375 180.742188 C 104.949219 180.195312 105.515625 179.613281 106.042969 178.996094 L 105.050781 178.6875 C 107.101562 177.121094 108.011719 174.855469 109.25 172.824219 C 109.410156 172.539062 109.601562 172.269531 109.820312 172.023438 C 110.40625 171.425781 111.054688 171.019531 112.125 171.902344 C 112.125 171.222656 112.261719 170.75 112.125 170.40625 C 111.894531 169.933594 111.902344 169.566406 112.316406 169.324219 C 112.726562 169.085938 112.789062 168.179688 113.464844 168.929688 C 113.507812 168.972656 113.6875 168.929688 113.800781 168.875 L 116.6875 167.855469 C 117.160156 167.722656 117.53125 167.355469 117.671875 166.882812 C 118.03125 166.226562 118.546875 165.667969 119.171875 165.257812 C 119.976562 164.582031 120.886719 164.035156 121.695312 163.375 C 122.507812 162.714844 122.539062 162.585938 121.757812 161.769531 C 121.835938 161.652344 121.925781 161.539062 122.019531 161.433594 C 122.9375 160.453125 123.828125 159.453125 124.785156 158.511719 C 126.1875 157.117188 127.609375 155.738281 129.09375 154.433594 C 129.34375 154.214844 129.945312 154.433594 130.425781 154.433594 L 130.425781 154.011719 C 130.550781 154.074219 130.648438 154.097656 130.6875 154.148438 C 131.835938 155.722656 132.941406 157.320312 134.128906 158.878906 C 134.679688 159.804688 135.367188 160.644531 136.171875 161.367188 C 138.019531 162.691406 139.070312 164.613281 140.371094 166.359375 C 140.542969 166.613281 140.699219 166.882812 140.835938 167.160156 L 139.941406 166.695312 L 139.789062 166.835938 C 139.941406 167.03125 140.046875 167.324219 140.25 167.414062 C 141.09375 167.757812 141.761719 168.429688 142.105469 169.273438 C 142.285156 169.707031 142.546875 169.8125 143.027344 169.699219 C 144.488281 169.324219 146.015625 170 146.714844 171.335938 L 145.867188 171.335938 C 147.585938 173.320312 149.203125 175.171875 150.636719 176.820312 C 150.683594 177.285156 150.636719 177.609375 150.757812 177.78125 C 151.179688 178.347656 151.636719 178.890625 152.117188 179.40625 C 152.371094 179.691406 152.417969 180.367188 153.085938 179.96875 C 153.136719 179.96875 153.339844 180.105469 153.429688 180.207031 C 157 184.617188 161.785156 187.5625 166.199219 190.964844 C 167.285156 191.824219 168.496094 192.511719 169.789062 193.003906 C 170.433594 193.359375 171.117188 193.632812 171.828125 193.820312 C 172.644531 193.910156 173.464844 193.910156 174.328125 193.953125 C 174.328125 193.992188 174.214844 194.203125 174.273438 194.320312 C 174.414062 194.617188 174.625 194.875 174.882812 195.070312 C 174.980469 195.132812 175.386719 194.859375 175.53125 194.660156 C 175.84375 194.203125 175.753906 193.324219 176.722656 193.640625 C 176.933594 192.980469 177.390625 192.28125 177.308594 191.667969 C 177.097656 190.167969 176.625 188.769531 176.273438 187.3125 C 176.25 187.136719 176.25 186.957031 176.273438 186.78125 C 176.273438 186.03125 176.332031 185.28125 176.371094 184.578125 C 176.371094 184.519531 176.332031 184.457031 176.371094 184.40625 C 176.902344 182.613281 175.6875 182.226562 174.222656 181.96875 C 174.5 181.097656 174.71875 180.210938 174.875 179.308594 C 175.136719 176.621094 174.679688 173.914062 173.554688 171.460938 C 172.734375 169.511719 172 167.519531 171.367188 165.464844 C 170.835938 163.734375 170.542969 161.921875 170.054688 160.175781 C 169.84375 159.425781 169.648438 158.5625 168.550781 158.5625 C 168.371094 158.5625 168.167969 158.210938 168.019531 157.992188 C 167.222656 156.792969 166.464844 155.574219 165.644531 154.386719 C 165.472656 154.125 165.125 153.992188 164.894531 153.789062 C 164.648438 153.640625 164.425781 153.460938 164.234375 153.25 C 163.082031 151.675781 161.980469 150.085938 160.835938 148.488281 C 160.488281 148.078125 160.199219 147.617188 159.972656 147.125 C 159.222656 144.878906 157.570312 143.167969 156.21875 141.308594 C 156.097656 141.179688 156.003906 141.027344 155.941406 140.859375 C 155.570312 139.089844 154.316406 138.160156 152.792969 137.457031 C 152.433594 137.300781 152.117188 137.070312 151.855469 136.78125 C 150.847656 135.5625 149.894531 134.300781 148.847656 133.082031 C 148.546875 132.75 148.203125 132.460938 147.828125 132.21875 C 146.324219 131.132812 144.824219 130.042969 143.277344 128.996094 C 142.660156 128.574219 142.523438 128.246094 142.984375 127.554688 C 144.441406 125.308594 145.835938 123.058594 147.21875 120.8125 C 148.074219 119.410156 148.765625 117.902344 149.691406 116.546875 C 150.507812 115.347656 151.546875 114.296875 152.53125 113.113281 L 152.417969 114.035156 C 153.3125 113.722656 154.09375 113.472656 154.257812 112.445312 C 154.257812 112.289062 154.625 112.183594 154.8125 112.050781 C 155 111.914062 155.078125 111.929688 155.121094 111.832031 C 155.691406 110.640625 156.242188 109.441406 156.789062 108.242188 C 156.839844 108.121094 156.789062 107.972656 156.644531 107.71875 L 154.679688 109.824219 L 154.484375 109.695312 C 154.621094 109.433594 154.773438 109.183594 154.949219 108.945312 C 155.734375 108.164062 156.292969 107.183594 156.554688 106.105469 C 156.554688 105.972656 156.804688 105.859375 156.933594 105.738281 C 157.816406 104.882812 158.726562 104.050781 159.566406 103.152344 C 159.769531 102.832031 159.910156 102.476562 159.988281 102.105469 C 160.671875 101.152344 161.492188 100.335938 161.730469 99.054688 C 161.828125 98.5 162.714844 98.085938 163.355469 97.75 L 161.175781 103.03125 L 161.410156 103.152344 L 162.390625 102.621094 C 162.574219 103.375 162.292969 104.167969 161.679688 104.644531 C 160.925781 105.453125 160.175781 106.25 159.3125 107.179688 L 160.257812 105.296875 C 158.929688 105.820312 157.449219 109.296875 157.433594 112.042969 L 158.351562 110.949219 C 158.648438 111.652344 158.53125 112.464844 158.050781 113.0625 C 155.585938 116.5 153.101562 119.910156 150.605469 123.328125 C 150.375 123.621094 150.125 123.890625 149.855469 124.144531 L 149.683594 124.011719 L 150.871094 122.183594 L 149.960938 122.664062 L 149.824219 122.527344 C 150.523438 121.734375 151.230469 120.945312 151.914062 120.144531 C 152.183594 119.828125 152.417969 119.46875 152.664062 119.15625 C 153.183594 118.5625 152.839844 118.058594 152.441406 117.65625 C 152.042969 117.25 151.507812 117.5 151.117188 117.871094 C 150.148438 118.859375 149.460938 120.085938 149.128906 121.425781 C 148.644531 122.992188 148.027344 124.515625 147.28125 125.976562 C 146.886719 126.550781 146.375 127.035156 145.777344 127.398438 C 145.3125 127.773438 145.027344 128.148438 145.71875 128.472656 C 147.699219 129.527344 149.675781 130.59375 151.726562 131.550781 C 152.398438 131.761719 153.109375 131.8125 153.808594 131.703125 C 152.785156 130.570312 151.101562 130.308594 150.410156 128.898438 L 150.5625 128.628906 C 150.882812 128.699219 151.195312 128.792969 151.5 128.914062 C 152.402344 129.324219 153.289062 129.753906 154.167969 130.203125 C 154.304688 130.277344 154.363281 130.503906 154.460938 130.652344 C 154.28125 130.695312 154.078125 130.816406 153.917969 130.773438 C 153.65625 130.664062 153.40625 130.53125 153.167969 130.375 L 153.054688 130.5625 L 154.867188 131.589844 C 154.828125 132.53125 155.472656 133.207031 156.097656 133.949219 C 157.886719 136.085938 159.613281 138.273438 161.355469 140.449219 C 161.476562 140.582031 161.554688 140.75 161.574219 140.925781 C 161.574219 141.488281 161.574219 142.042969 162.203125 142.285156 C 163.242188 142.710938 164.292969 143.078125 165.34375 143.484375 C 165.660156 143.609375 166.09375 143.691406 166.238281 143.933594 C 166.71875 144.613281 167.09375 145.371094 167.53125 146.136719 L 167.769531 145.859375 C 168.351562 146.363281 168.902344 146.902344 169.421875 147.46875 C 169.621094 147.8125 169.761719 148.1875 169.828125 148.578125 L 170.144531 149.523438 L 170.46875 149.449219 L 170.625 148.765625 L 170.835938 148.765625 C 170.835938 149.179688 170.976562 149.6875 170.789062 149.957031 C 170.484375 150.210938 170.082031 150.3125 169.691406 150.234375 C 167.816406 149.90625 167.761719 149.945312 168.136719 151.800781 C 168.214844 152.167969 168.320312 152.550781 168.4375 153.039062 C 168.75 152.847656 169.070312 152.679688 169.402344 152.53125 C 169.582031 152.507812 169.769531 152.519531 169.949219 152.566406 C 169.851562 152.746094 169.789062 152.988281 169.632812 153.089844 C 169.316406 153.316406 168.640625 153.488281 168.648438 153.644531 C 168.691406 154.332031 168.863281 155.003906 169.160156 155.625 C 169.25 155.804688 169.910156 155.851562 170.277344 155.746094 C 171.515625 155.324219 172.5625 154.484375 173.238281 153.367188 C 173.359375 153.175781 173.492188 152.980469 173.792969 152.523438 C 174.148438 154.195312 174.238281 155.691406 174.792969 157.019531 C 175.347656 158.347656 176.386719 159.492188 177.347656 160.929688 L 176.445312 160.8125 L 177.851562 163.441406 C 177.234375 163.316406 176.84375 163.203125 176.4375 163.15625 C 176.03125 163.113281 175.6875 163.261719 175.835938 163.757812 C 176.550781 165.976562 177.941406 167.921875 179.8125 169.316406 L 180.058594 169.175781 L 177.558594 164.230469 L 177.769531 164.019531 C 178.054688 164.246094 178.320312 164.496094 178.5625 164.769531 C 179.269531 165.644531 179.953125 166.550781 180.628906 167.453125 C 180.734375 167.597656 180.808594 167.765625 180.847656 167.9375 C 181.183594 169.4375 181.515625 170.9375 181.847656 172.4375 L 181.644531 172.511719 L 180.894531 171.101562 L 180.757812 171.140625 L 180.757812 173.71875 L 174.109375 166.972656 C 174.234375 167.890625 174.417969 168.804688 174.660156 169.699219 C 174.851562 170.269531 175.179688 170.785156 175.613281 171.199219 C 177.007812 172.519531 178.453125 173.769531 179.902344 175.03125 C 180.425781 175.480469 181.253906 175.726562 180.976562 176.671875 C 180.699219 177.617188 179.976562 177.765625 178.796875 177.570312 C 179.285156 178.542969 179.625 179.347656 180.058594 180.097656 C 180.59375 181.160156 181.234375 182.164062 181.972656 183.09375 C 183.230469 184.511719 182.441406 186.152344 182.726562 187.664062 C 182.769531 187.90625 182.410156 188.339844 182.132812 188.492188 C 181.464844 188.851562 181.5625 189.238281 181.808594 189.808594 C 182.140625 190.558594 182.351562 191.367188 182.558594 192.003906 C 181.921875 192.058594 181.1875 191.914062 180.90625 192.199219 C 180.480469 192.648438 181.328125 193.953125 182.175781 194.261719 C 181.1875 196.058594 179.921875 197.46875 177.671875 197.8125 L 177.671875 198.128906 L 179.234375 198.722656 C 178.476562 199.597656 177.375 200.105469 176.214844 200.113281 C 175.109375 200.082031 174.011719 199.957031 172.929688 199.742188 C 171.878906 199.566406 170.84375 199.304688 169.582031 199.042969 C 170.648438 198.578125 171.554688 198.167969 172.480469 197.8125 C 172.585938 197.777344 172.863281 198.015625 172.976562 198.1875 C 173.179688 198.480469 173.292969 198.832031 173.488281 199.132812 C 173.664062 199.453125 173.972656 199.679688 174.332031 199.75 C 174.691406 199.820312 175.0625 199.730469 175.347656 199.5 C 175.625 199.363281 175.824219 199.113281 175.894531 198.816406 C 175.96875 198.519531 175.90625 198.203125 175.726562 197.957031 C 175.425781 197.378906 175.167969 196.78125 174.972656 196.367188 C 173.570312 196.742188 172.292969 197.117188 171 197.417969 C 170.015625 197.625 168.996094 197.679688 167.734375 197.835938 L 168.65625 196.808594 C 168.046875 196.660156 167.53125 196.5625 167.027344 196.398438 C 163.996094 195.339844 161.164062 193.792969 158.636719 191.816406 C 157.984375 191.339844 157.628906 190.476562 157.007812 189.945312 C 155.941406 189.039062 154.875 188.125 153.332031 187.949219 C 152.363281 187.839844 152.027344 187.351562 151.597656 186.371094 L 153.640625 187.589844 L 153.792969 187.359375 C 152.597656 186.480469 151.425781 185.574219 150.195312 184.742188 C 149.953125 184.578125 149.503906 184.742188 148.878906 184.742188 C 148.625 184.300781 148.269531 183.664062 147.886719 183.035156 C 147.738281 182.753906 147.542969 182.5 147.308594 182.285156 C 146.925781 181.953125 146.484375 181.683594 146.070312 181.386719 C 145.230469 180.785156 144.125 180.375 144.3125 178.964844 L 149.179688 182.898438 L 150.164062 181.753906 C 148.953125 180.941406 147.796875 180.105469 146.574219 179.382812 C 145.335938 178.648438 144.058594 177.980469 142.75 177.375 C 141.429688 176.789062 140.355469 175.769531 139.699219 174.480469 C 139.222656 173.675781 138.703125 172.890625 138.144531 172.136719 C 138.230469 171.214844 137.644531 170.363281 136.75 170.113281 C 137.296875 169.09375 138.25 169.632812 139.078125 169.484375 C 138.316406 168.972656 137.527344 168.503906 136.710938 168.089844 C 136.554688 168.015625 136.207031 168.023438 136.140625 168.089844 C 136.035156 168.285156 136.019531 168.515625 136.089844 168.726562 C 136.277344 169.191406 136.492188 169.648438 136.726562 170.089844 C 136.546875 169.96875 136.277344 169.886719 136.191406 169.714844 C 135.796875 168.875 135.488281 167.992188 135.050781 167.175781 C 134.792969 166.710938 134.441406 166.300781 134.023438 165.976562 C 132.984375 165.167969 131.882812 164.4375 130.851562 163.613281 C 130.648438 163.457031 130.679688 163.015625 130.558594 162.535156 L 129.199219 159.800781 L 128.890625 159.800781 L 127.839844 163.390625 C 127.539062 163.523438 127.203125 163.570312 127.089844 163.75 C 125.941406 165.789062 124.507812 167.652344 122.832031 169.289062 C 122.644531 169.519531 122.484375 169.769531 122.355469 170.039062 L 123.527344 170.136719 C 123.519531 170.398438 123.410156 170.644531 123.21875 170.824219 C 123.023438 171.003906 122.769531 171.097656 122.507812 171.085938 C 120.808594 171.175781 120.15625 171.761719 119.820312 173.375 C 119.707031 173.914062 119.496094 174.4375 119.292969 175.082031 C 118.445312 174.460938 118 174.84375 117.617188 175.472656 C 117.511719 175.691406 117.339844 175.871094 117.121094 175.980469 C 115.808594 176.417969 115.507812 177.863281 114.476562 178.582031 C 114.320312 178.695312 114.296875 178.980469 114.359375 179.398438 C 114.875 179.21875 115.394531 179.0625 115.898438 178.867188 C 116.414062 178.632812 116.949219 178.4375 117.496094 178.289062 C 115.996094 179.390625 114.953125 181.09375 112.824219 181.550781 L 113.089844 180.75 L 112.886719 180.628906 C 112.417969 181.332031 111.984375 182.058594 111.496094 182.75 C 111.242188 183.214844 110.882812 183.613281 110.445312 183.910156 C 109.890625 184.027344 109.320312 184.042969 108.761719 183.957031 C 108.761719 183.886719 108.679688 184.007812 108.65625 184.144531 C 108.417969 186.054688 106.847656 187.140625 105.816406 188.519531 C 105.066406 189.546875 104.203125 190.5 103.429688 191.4375 L 103.585938 190.828125 C 103.480469 190.828125 103.390625 190.828125 103.332031 190.828125 C 102.085938 191.550781 101.285156 192.847656 101.199219 194.285156 C 101.234375 195.214844 100.601562 196.035156 99.695312 196.246094 C 99.53125 196.292969 99.28125 196.480469 99.273438 196.613281 C 99.125 198.453125 97.707031 199.515625 96.738281 200.855469 C 96.03125 201.832031 95.015625 202.640625 95.078125 204.042969 C 95.078125 204.230469 94.601562 204.445312 94.324219 204.640625 L 94.039062 204.402344 L 95.152344 202.101562 C 93.730469 202.324219 92.566406 203.339844 92.148438 204.710938 C 92.011719 205.167969 91.816406 205.609375 91.5625 206.011719 C 91.402344 206.238281 90.945312 206.492188 90.757812 206.417969 C 90.339844 206.21875 89.839844 206.347656 89.5625 206.71875 C 88.601562 207.648438 87.625 208.554688 86.5 209.617188 L 87.867188 209.902344 C 87.691406 210.5625 87.117188 211.035156 86.4375 211.082031 L 82.382812 211.761719 C 82.207031 211.8125 82.039062 211.878906 81.878906 211.964844 Z M 76.554688 159.484375 C 78.101562 159.90625 79.429688 160.722656 80.957031 160.8125 L 81.039062 160.578125 L 78.265625 159.507812 L 78.328125 159.351562 L 80.136719 159.492188 L 80.210938 159.148438 L 75.703125 157.902344 C 75.96875 158.617188 77.417969 158.269531 76.554688 159.484375 Z M 114.734375 70.296875 C 115.769531 71.351562 116.605469 71.921875 117.265625 70.953125 C 116.617188 70.207031 115.753906 70.234375 114.734375 70.324219 Z M 140.863281 169.976562 L 139.363281 168.164062 C 139.332031 169.386719 139.859375 169.910156 140.863281 170.023438 Z M 90.480469 80.871094 L 90.238281 80.992188 L 90.621094 81.914062 L 91.792969 81.515625 L 91.5625 80.527344 L 91.09375 81.273438 Z M 139.984375 170.058594 C 139.65625 170.90625 139.941406 171.222656 140.519531 171.238281 C 140.65625 171.238281 140.804688 171.027344 140.949219 170.90625 Z M 175.289062 179.464844 L 175.011719 179.542969 L 175.320312 181.109375 L 175.671875 181.03125 Z M 175.289062 179.464844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 208.960938 133.769531 C 208.550781 134.421875 208.160156 134.375 207.738281 133.769531 C 207.492188 133.433594 207.230469 133.113281 206.949219 132.804688 L 206.664062 133.050781 C 207.144531 133.484375 207.558594 133.992188 207.886719 134.550781 C 208.113281 135.074219 208.585938 135.777344 207.753906 136.460938 L 207.511719 135.253906 L 207.25 135.253906 C 207.25 135.53125 207.191406 135.808594 207.167969 136.085938 C 207.171875 136.492188 206.992188 136.878906 206.683594 137.144531 C 206.371094 137.40625 205.960938 137.519531 205.558594 137.449219 C 204.6875 137.449219 203.800781 137.5625 202.9375 137.488281 C 202.429688 137.425781 201.953125 137.21875 201.5625 136.886719 C 200.144531 135.734375 198.746094 134.542969 197.410156 133.289062 C 196.980469 132.765625 196.589844 132.207031 196.253906 131.617188 C 196.089844 131.394531 195.742188 131.289062 195.601562 131.058594 C 195.3125 130.578125 195.125 130.039062 194.886719 129.558594 C 194.519531 128.769531 194.136719 127.992188 193.757812 127.167969 L 192.488281 129.273438 L 191.46875 129.65625 L 191.507812 129.871094 L 192.023438 130.03125 C 189.019531 130.863281 187.765625 133.71875 185.390625 135.441406 C 185.390625 135.246094 185.390625 135.15625 185.429688 135.058594 C 185.46875 134.960938 185.429688 134.902344 185.503906 134.601562 C 185.128906 134.917969 184.894531 135.132812 184.648438 135.351562 C 184.472656 135.503906 184.265625 135.613281 184.039062 135.667969 C 183.289062 135.734375 183.289062 135.710938 182.964844 136.339844 C 181.757812 136.46875 180.585938 135.882812 179.960938 134.839844 C 179.535156 133.976562 179.394531 133 179.5625 132.054688 C 179.824219 130.957031 180.230469 129.902344 180.773438 128.914062 C 181.101562 128.347656 181.46875 127.804688 181.867188 127.285156 C 182.394531 126.46875 182.890625 125.644531 183.425781 124.835938 C 183.589844 124.585938 183.800781 124.371094 184.046875 124.199219 C 184.582031 123.824219 185.136719 123.488281 185.761719 123.089844 L 184.378906 121.074219 C 183.53125 120.953125 182.78125 120.472656 182.320312 119.753906 C 182.238281 119.558594 182.085938 119.253906 181.945312 119.238281 C 180.148438 119.066406 179.277344 117.445312 177.886719 116.636719 C 176.386719 115.746094 176.214844 113.167969 177.378906 111.808594 C 177.808594 111.347656 178.421875 111.09375 179.050781 111.121094 C 180.015625 111.046875 180.929688 111.324219 181.847656 111.21875 C 183.242188 111.050781 184.4375 111.621094 185.667969 112.050781 C 186.644531 112.378906 187.578125 112.835938 188.675781 113.285156 C 189.214844 112.746094 188.742188 111.96875 188.839844 111.285156 C 188.980469 110.289062 189.148438 109.292969 189.296875 108.285156 C 189.453125 107.804688 189.523438 107.296875 189.5 106.789062 C 189.171875 105.445312 190.109375 104.605469 190.589844 103.582031 C 190.691406 103.300781 190.765625 103.011719 190.808594 102.71875 C 190.84375 102.546875 190.808594 102.34375 190.914062 102.214844 C 191.574219 101.300781 192.289062 100.417969 192.933594 99.496094 C 193.578125 98.574219 194.050781 97.757812 194.609375 96.886719 C 194.757812 96.640625 194.894531 96.386719 195.015625 96.175781 L 196.125 96.511719 C 196.800781 97.121094 197.492188 97.683594 198.09375 98.328125 C 198.304688 98.558594 198.28125 99 198.371094 99.34375 C 198.640625 100.433594 198.875 101.535156 199.21875 102.597656 C 199.324219 102.9375 199.730469 103.183594 200.105469 103.582031 C 200.105469 104.328125 199.835938 105.257812 200.773438 105.933594 C 200.925781 106.082031 200.996094 106.292969 200.960938 106.503906 C 200.527344 107.761719 201.066406 108.976562 201.097656 110.214844 C 201.097656 110.648438 201.316406 111.261719 200.65625 111.300781 L 201.59375 112.703125 C 200.84375 114.027344 200.460938 114.199219 199.445312 113.554688 C 200.609375 113.398438 200.722656 112.769531 200.195312 111.898438 C 199.363281 112.125 199.257812 111.636719 199.296875 110.851562 C 199.265625 110.21875 199.171875 109.59375 199.015625 108.984375 L 199.640625 108.757812 L 199.640625 108.558594 L 198.355469 108.667969 L 198.925781 107.230469 L 198.679688 107.335938 C 198.132812 106.585938 197.582031 105.835938 197.050781 105.085938 C 197.003906 105.019531 197.050781 104.871094 197.050781 104.757812 C 197.050781 103.167969 196.945312 101.632812 195.710938 100.335938 C 195.417969 101.085938 195.410156 101.960938 194.457031 102.148438 C 194.308594 103.304688 192.957031 103.714844 192.835938 105.003906 C 192.730469 105.972656 191.910156 106.839844 191.492188 107.792969 C 191.242188 108.25 191.144531 108.773438 191.214844 109.292969 C 191.617188 110.753906 190.921875 112.085938 190.882812 113.496094 C 190.882812 113.78125 190.335938 114.140625 189.964844 114.320312 C 189.214844 114.6875 188.394531 114.957031 187.539062 115.289062 C 186.285156 114.429688 184.875 113.828125 183.386719 113.511719 C 182.523438 113.382812 181.644531 113.390625 180.789062 113.261719 C 180.507812 113.191406 180.207031 113.234375 179.960938 113.386719 C 179.710938 113.539062 179.539062 113.789062 179.480469 114.074219 C 179.421875 114.546875 179.585938 115.023438 179.921875 115.363281 C 181.539062 116.847656 183.300781 118.164062 185.179688 119.296875 C 186.152344 119.808594 186.730469 120.742188 187.796875 121.089844 C 188.492188 121.3125 188.710938 123.382812 188.171875 124.085938 C 187.757812 124.59375 187.296875 125.066406 186.796875 125.488281 C 185.957031 126.238281 185.070312 126.988281 184.25 127.738281 C 183.957031 127.984375 183.773438 128.335938 183.738281 128.71875 C 183.824219 129.5 183.582031 130.285156 183.070312 130.882812 C 182.972656 130.996094 182.902344 131.132812 182.867188 131.28125 C 182.800781 131.753906 182.753906 132.234375 182.703125 132.707031 L 183.996094 132.324219 C 185.300781 131.917969 186.128906 130.898438 187.105469 130.03125 C 187.96875 129.277344 188.726562 128.410156 189.359375 127.453125 C 189.636719 127.070312 190.054688 126.816406 190.523438 126.746094 C 191.359375 126.625 192.105469 126.15625 192.582031 125.457031 C 193.570312 124.328125 194.480469 124.28125 195.203125 125.585938 C 195.710938 126.53125 196.15625 127.511719 196.636719 128.476562 C 196.710938 128.636719 196.800781 128.90625 196.90625 128.914062 C 198.011719 128.980469 198.003906 130.042969 198.507812 130.652344 C 199.601562 131.972656 200.609375 133.378906 201.828125 134.585938 C 202.488281 135.074219 203.265625 135.382812 204.078125 135.480469 C 204.34375 135.558594 204.632812 135.507812 204.851562 135.335938 C 205.074219 135.167969 205.195312 134.902344 205.183594 134.625 C 205.183594 134.519531 205.320312 134.421875 205.363281 134.316406 C 205.546875 133.910156 205.695312 133.488281 205.800781 133.058594 C 205.859375 132.71875 205.621094 132.308594 205.746094 132.007812 C 206.257812 130.863281 205.597656 130.015625 205.175781 129.085938 C 204.902344 128.523438 204.710938 127.925781 204.605469 127.308594 C 204.34375 125.785156 203.796875 124.324219 202.992188 123.007812 C 202.878906 122.835938 202.804688 122.640625 202.78125 122.4375 C 202.691406 121.253906 202.300781 120.839844 201.15625 120.78125 C 200.835938 120.78125 200.523438 120.683594 200.257812 120.503906 C 200.738281 120.429688 201.339844 120.503906 201.675781 120.234375 C 202.015625 119.964844 201.871094 119.410156 201.945312 119.003906 L 204.199219 118.144531 L 204.5625 119.777344 C 203.480469 119.199219 203.34375 120.144531 202.714844 120.527344 L 204.078125 121.164062 C 203.988281 121.328125 203.71875 121.644531 203.785156 121.746094 C 203.945312 122.039062 204.21875 122.246094 204.539062 122.324219 C 205.394531 122.386719 205.53125 122.789062 205.703125 123.605469 C 205.929688 124.671875 205.703125 126.035156 207.097656 126.6875 C 207.476562 126.867188 207.664062 127.503906 207.851562 127.960938 C 207.894531 128.058594 207.671875 128.359375 207.511719 128.425781 C 207.289062 128.46875 207.058594 128.46875 206.835938 128.425781 L 206.582031 129.496094 L 208.082031 129.234375 C 208.375 130.375 208.667969 131.484375 208.953125 132.601562 Z M 208.960938 133.769531 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 20.609375 168.304688 C 21.074219 166.867188 22.414062 166.53125 23.53125 165.839844 C 24.6875 165.113281 25.882812 164.449219 27.113281 163.855469 C 27.949219 163.363281 28.972656 163.316406 29.847656 163.726562 C 29.554688 162.976562 29.359375 162.445312 29.148438 161.921875 C 28.992188 161.515625 28.8125 161.113281 28.648438 160.707031 C 28.273438 159.898438 27.941406 159.070312 27.65625 158.226562 C 27.523438 157.554688 27.425781 156.875 27.363281 156.195312 C 27.292969 155.878906 27.03125 155.617188 26.933594 155.308594 C 26.792969 154.851562 26.714844 154.375 26.605469 153.902344 L 25.386719 148.558594 C 25.300781 148.253906 25.242188 147.941406 25.214844 147.628906 C 25.964844 148.167969 26.714844 148.429688 27.46875 147.785156 C 28.847656 148.578125 29.578125 150.371094 31.53125 150.476562 C 32.050781 151.226562 32.328125 152.441406 33.6875 152.605469 C 33.855469 152.664062 33.988281 152.800781 34.039062 152.972656 C 34.191406 154.402344 35.601562 154.949219 36.234375 156.042969 C 36.421875 156.375 36.984375 156.507812 37.21875 156.660156 C 37.804688 156.015625 38.382812 155.40625 38.921875 154.777344 C 39.335938 154.296875 39.671875 153.789062 40.09375 153.277344 C 40.230469 153.113281 40.328125 152.90625 40.5 152.808594 C 42.753906 151.480469 44.855469 149.597656 47.746094 149.667969 C 48.316406 149.707031 48.871094 149.847656 49.386719 150.085938 C 49.613281 150.265625 49.722656 150.550781 49.679688 150.835938 C 49.40625 152.003906 49.65625 153.234375 50.363281 154.207031 C 50.453125 154.433594 50.453125 154.6875 50.363281 154.914062 C 49.933594 156.140625 49.609375 157.355469 50.363281 158.570312 C 50.414062 158.652344 50.300781 158.832031 50.300781 158.960938 C 50.300781 159.589844 50.300781 160.21875 50.355469 160.847656 C 50.382812 161.097656 50.382812 161.347656 50.355469 161.597656 C 50.097656 162.503906 49.8125 163.398438 49.550781 164.304688 C 49.496094 164.476562 49.492188 164.65625 49.453125 164.835938 C 49.28125 165.707031 48.542969 166.582031 49.6875 167.453125 L 49.476562 167.632812 L 47.671875 167.78125 L 47.628906 167.78125 L 47.0625 167.324219 L 48.035156 165.878906 C 47.371094 165.960938 47.222656 165.609375 47.386719 165.039062 C 47.613281 164.289062 47.851562 163.539062 48.136719 162.671875 L 47.449219 162.582031 C 47.449219 162.496094 47.394531 162.402344 47.449219 162.386719 C 48.296875 161.847656 48.152344 161.320312 47.644531 160.550781 C 47.257812 160.011719 47.207031 159.304688 47.515625 158.71875 C 47.882812 157.898438 48.0625 157.003906 48.046875 156.105469 C 48 155.078125 47.878906 154.054688 47.6875 153.046875 C 46.183594 153.046875 44.742188 153.183594 43.535156 154.269531 C 43.035156 154.566406 42.503906 154.820312 41.957031 155.019531 C 41.171875 155.519531 40.554688 156.238281 40.175781 157.085938 C 39.613281 158.050781 38.972656 158.96875 38.269531 159.835938 C 38.132812 159.996094 37.929688 160.082031 37.71875 160.070312 C 37.113281 159.988281 36.519531 159.828125 35.859375 159.6875 L 36.511719 158.414062 L 36.066406 158.128906 L 36.820312 157.242188 C 36.066406 157.191406 35.273438 157.339844 34.777344 157.042969 C 34.257812 156.589844 33.828125 156.042969 33.507812 155.4375 L 32.929688 155.878906 L 32.453125 154.582031 C 32.394531 154.582031 32.167969 154.582031 31.953125 154.582031 C 31.261719 154.546875 30.585938 154.539062 30.367188 153.632812 C 30.292969 153.324219 29.929688 153.078125 29.699219 152.800781 L 29.390625 153.03125 L 30.398438 154.785156 L 29.644531 155.046875 L 29.984375 155.234375 C 30.058594 155.863281 30.105469 156.503906 30.222656 157.132812 C 30.289062 157.953125 30.496094 158.757812 30.832031 159.507812 C 31.3125 160.523438 31.601562 161.613281 31.695312 162.730469 C 31.742188 163.019531 31.65625 163.3125 31.464844 163.53125 C 30.433594 164.449219 29.273438 165.207031 28.015625 165.78125 C 27.019531 166.300781 26.070312 166.914062 25.183594 167.609375 C 24.859375 167.828125 24.574219 168.089844 24.273438 168.359375 C 25.085938 169.160156 26.101562 169.109375 27.28125 168.855469 C 28.996094 168.546875 30.734375 168.390625 32.476562 168.390625 C 33.136719 168.390625 33.535156 168.945312 33.613281 169.6875 C 33.664062 170.269531 33.964844 170.824219 33.988281 171.402344 C 34.023438 172.375 33.910156 173.359375 33.890625 174.332031 C 33.847656 174.855469 33.878906 175.382812 33.980469 175.898438 C 34.183594 176.800781 34.507812 177.671875 34.949219 178.484375 C 35.265625 179.015625 35.96875 179.308594 36.449219 179.757812 C 36.816406 180.132812 37.15625 180.53125 37.472656 180.949219 C 37.652344 180.597656 37.757812 180.214844 37.789062 179.820312 C 37.601562 178.730469 38.652344 177.667969 37.832031 176.582031 C 37.78125 176.511719 37.894531 176.296875 37.96875 176.175781 C 39.152344 174.082031 39.964844 171.800781 40.371094 169.429688 C 41.296875 170.039062 42.25 170.699219 43.242188 171.296875 C 43.445312 171.417969 43.78125 171.296875 44.074219 171.296875 C 45.214844 172.367188 46.472656 173.238281 48.265625 172.855469 C 48.710938 172.789062 49.164062 172.851562 49.574219 173.027344 C 50.800781 173.632812 52.253906 173.574219 53.425781 172.871094 C 54.175781 172.429688 54.273438 172.0625 53.742188 171.371094 C 53.453125 171.046875 53.144531 170.746094 52.808594 170.464844 L 52.96875 170.238281 L 54.582031 170.988281 L 55.011719 170.292969 L 56.070312 171.523438 L 54.785156 171.6875 C 55.054688 171.992188 55.535156 172.285156 55.535156 172.554688 C 55.582031 173.132812 55.410156 173.707031 55.054688 174.167969 C 54.589844 174.535156 53.90625 175.292969 53.140625 174.429688 C 53.140625 174.429688 52.390625 174.03125 52.390625 174.765625 C 52.390625 174.851562 52.074219 174.933594 51.976562 174.976562 C 52.023438 175.179688 52.132812 175.496094 52.074219 175.523438 C 51.886719 175.648438 51.664062 175.699219 51.441406 175.667969 C 51.136719 175.585938 50.871094 175.359375 50.566406 175.253906 C 50.023438 174.96875 49.359375 175.039062 48.890625 175.433594 C 48.605469 175.6875 48.085938 175.667969 47.703125 175.765625 L 47.46875 174.183594 L 47.28125 174.183594 L 46.929688 175.515625 C 46.070312 175.476562 45.210938 175.371094 44.367188 175.203125 C 43.984375 175.105469 43.699219 174.609375 43.277344 174.203125 C 43.015625 174.066406 42.765625 173.910156 42.527344 173.734375 C 41.941406 173.246094 41.332031 173.449219 41.152344 174.265625 C 40.972656 175.082031 40.816406 176.035156 40.628906 176.910156 C 40.542969 177.285156 40.371094 177.660156 40.28125 178.003906 C 40.191406 178.351562 40.109375 178.890625 40.035156 179.339844 C 40.035156 179.390625 40.035156 179.480469 40.035156 179.511719 C 39.027344 180.53125 39.726562 181.976562 39.125 183.109375 C 38.976562 183.488281 38.878906 183.886719 38.839844 184.292969 C 38.277344 184.289062 37.714844 184.242188 37.15625 184.152344 C 36.671875 184.078125 36.21875 183.867188 35.851562 183.542969 C 34.347656 181.941406 32.9375 180.269531 31.433594 178.566406 L 31.855469 178.410156 C 31.515625 176.96875 31.101562 175.554688 30.886719 174.113281 C 30.871094 173.449219 30.949219 172.78125 31.125 172.136719 C 31.253906 171.167969 30.488281 171.167969 29.910156 171.109375 C 29.070312 171.042969 28.226562 171.03125 27.382812 171.070312 C 27.097656 171.070312 26.800781 171.257812 26.527344 171.222656 C 25.933594 171.132812 25.363281 170.953125 24.777344 170.808594 C 24.699219 170.773438 24.609375 170.757812 24.523438 170.765625 C 22.929688 171.335938 21.886719 170.121094 20.640625 169.589844 Z M 20.609375 168.304688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 164.527344 90.035156 C 164.234375 88.832031 162.949219 89.0625 162.0625 88.574219 C 160.988281 87.992188 160.109375 88.367188 159.140625 88.328125 C 161.0625 87.097656 162.730469 88.132812 164.503906 88.949219 L 164.796875 88.011719 C 165.269531 88.085938 165.734375 88.207031 166.1875 88.371094 C 166.382812 88.457031 166.433594 88.84375 166.546875 89.121094 L 165.5625 89.519531 C 165.710938 90.515625 165.878906 91.558594 166.042969 92.613281 C 166.625 92.363281 167.230469 92.160156 167.84375 92.007812 C 168.265625 91.917969 168.703125 92.011719 169.046875 92.261719 C 169.234375 92.644531 169.265625 93.085938 169.136719 93.492188 C 168.933594 94.628906 168.644531 95.746094 168.28125 96.84375 C 167.953125 97.539062 167.558594 98.199219 167.101562 98.820312 L 166.816406 98.820312 C 166.765625 98.363281 166.679688 97.914062 166.660156 97.457031 C 166.617188 96.84375 166.617188 96.226562 166.660156 95.613281 C 166.691406 95.328125 166.824219 95.0625 167.035156 94.863281 C 167.617188 94.332031 167.859375 93.527344 167.671875 92.765625 L 166.285156 94.585938 C 165.863281 93.863281 165.488281 93.109375 165.164062 92.335938 C 165.058594 92.054688 165.359375 91.640625 165.410156 91.273438 C 165.472656 90.96875 165.449219 90.652344 165.34375 90.359375 C 165.238281 90.210938 164.871094 90.179688 164.527344 90.035156 Z M 164.527344 90.035156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 128.253906 97.5 C 128.253906 96.902344 128.199219 96.386719 128.179688 95.835938 L 124.941406 96.476562 L 125 96.207031 C 124.777344 95.832031 124.527344 95.457031 124.339844 95.089844 C 124.222656 94.894531 124.183594 94.664062 124.234375 94.445312 C 124.390625 94.285156 124.617188 94.21875 124.835938 94.265625 C 125.375 94.414062 125.894531 94.644531 126.464844 94.863281 L 126.242188 95.523438 L 129.304688 94.773438 C 129.09375 95.257812 128.921875 95.757812 128.792969 96.273438 C 128.777344 96.683594 128.882812 97.089844 129.09375 97.441406 L 129.09375 100.320312 C 128.867188 100.269531 128.667969 100.125 128.554688 99.921875 C 128.4375 99.71875 128.414062 99.476562 128.488281 99.253906 C 128.589844 98.617188 128.742188 98.003906 127.675781 98.25 C 127.464844 98.304688 127.148438 97.890625 126.886719 97.6875 C 127.164062 97.554688 127.445312 97.4375 127.734375 97.335938 C 127.839844 97.351562 128.011719 97.433594 128.253906 97.5 Z M 128.253906 97.5 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 133.398438 98.714844 L 129.554688 103.046875 L 130.304688 103.117188 L 130.417969 103.308594 C 130.175781 103.429688 129.855469 103.714844 129.703125 103.648438 C 128.90625 103.25 128.613281 103.648438 128.492188 104.398438 L 127.515625 104.21875 C 128.402344 103.714844 128.269531 102.921875 128.15625 102.074219 L 128.90625 102.382812 L 129.171875 101.527344 L 129.28125 101.667969 C 129.859375 101.210938 130.453125 100.769531 131.023438 100.296875 C 131.597656 99.824219 132 99.421875 132.527344 99.03125 C 132.800781 98.882812 133.09375 98.777344 133.398438 98.714844 Z M 133.398438 98.714844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 206.136719 115.03125 L 207.195312 114.371094 L 206.625 116.859375 L 205.65625 117.273438 C 206.566406 118.242188 206.507812 118.570312 205.410156 119.257812 C 205.257812 118.660156 205.09375 118.082031 204.957031 117.5 C 204.945312 117.410156 204.984375 117.320312 205.054688 117.265625 C 206.101562 116.855469 205.84375 115.847656 206.09375 115.070312 Z M 206.136719 115.03125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 181.101562 177.898438 L 181.675781 178.28125 L 181.898438 177.105469 C 182.351562 178.148438 182.746094 178.964844 183.035156 179.8125 C 183.101562 180.027344 182.777344 180.375 182.636719 180.660156 C 182.410156 180.472656 182.085938 180.328125 181.972656 180.082031 C 181.667969 179.453125 181.441406 178.769531 181.101562 177.898438 Z M 181.101562 177.898438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 199.875 115.105469 C 200.503906 115.757812 200.496094 116.605469 200.714844 117.4375 L 200.503906 117.625 L 198.0625 116.007812 L 199.769531 115.414062 Z M 199.875 115.105469 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 153.132812 87.625 L 148.960938 87.804688 L 149.433594 87.128906 C 149.871094 87.113281 150.300781 87.042969 150.71875 86.925781 C 151.589844 86.648438 152.542969 86.925781 153.132812 87.625 Z M 153.132812 87.625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 164.238281 99.570312 C 163.886719 100.433594 163.601562 101.195312 162.664062 101.5625 C 162.625 100.289062 163.265625 99.441406 164.238281 99.570312 Z M 164.238281 99.570312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 163.578125 89.9375 C 162.78125 90.113281 162.078125 90.300781 161.410156 90.402344 C 160.738281 90.507812 160.65625 89.96875 160.558594 89.371094 Z M 163.578125 89.9375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 142.066406 95.5625 C 142.3125 95.210938 142.613281 94.902344 142.953125 94.644531 C 143.222656 94.496094 143.636719 94.644531 143.980469 94.601562 C 143.792969 94.886719 143.667969 95.269531 143.402344 95.441406 C 143.03125 95.605469 142.636719 95.71875 142.230469 95.777344 Z M 142.066406 95.5625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 140.445312 94.878906 L 140.347656 95.351562 L 141.097656 95.191406 L 141.203125 95.402344 L 139.109375 96.617188 C 139.109375 95.492188 139.8125 95.238281 140.445312 94.878906 Z M 140.445312 94.878906 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 159.296875 86.4375 C 159.875 85.449219 160.921875 85.375 162.039062 86.207031 Z M 159.296875 86.4375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 90.847656 209.035156 C 90.351562 207.976562 91.085938 207.84375 91.457031 207.535156 C 91.859375 207.152344 92.335938 206.847656 92.851562 206.644531 Z M 90.847656 209.035156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 147.175781 128.335938 C 148.210938 128.238281 149.191406 128.816406 149.609375 129.765625 C 148.6875 129.507812 147.847656 129.015625 147.175781 128.335938 Z M 147.175781 128.335938 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 151.589844 91.085938 L 150.027344 91.085938 L 149.910156 90.921875 L 151.769531 89.421875 L 151.988281 89.632812 C 151.765625 90.089844 150.824219 90.285156 151.589844 91.085938 Z M 151.589844 91.085938 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 158.695312 109.5 L 160.808594 106.277344 L 161.023438 106.414062 C 160.378906 107.53125 159.726562 108.644531 159.074219 109.75 Z M 158.695312 109.5 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 128.960938 111.898438 C 128.074219 111.792969 127.707031 110.476562 128.207031 109.570312 C 128.488281 110.378906 128.703125 111.082031 128.960938 111.898438 Z M 128.960938 111.898438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 153.867188 110.402344 C 154.332031 111.414062 153.964844 111.898438 153.234375 112.558594 C 153.019531 111.777344 153.265625 110.945312 153.867188 110.402344 Z M 153.867188 110.402344 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 148.054688 90.472656 C 148.066406 90.101562 148.109375 89.730469 148.1875 89.371094 C 148.261719 89.140625 148.425781 88.949219 148.640625 88.835938 C 148.8125 88.777344 149.066406 88.933594 149.285156 88.996094 C 149.238281 89.238281 149.152344 89.476562 149.03125 89.691406 C 148.726562 89.976562 148.398438 90.238281 148.054688 90.472656 Z M 148.054688 90.472656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 141.5625 93.777344 L 143.6875 91.4375 L 144.011719 91.761719 L 141.757812 93.925781 Z M 141.5625 93.777344 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 154.402344 88.214844 L 152.289062 89.273438 C 151.988281 88.582031 152.523438 88.289062 154.402344 88.214844 Z M 154.402344 88.214844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 114.320312 67.941406 C 113.984375 68.054688 113.632812 68.117188 113.277344 68.136719 C 113.058594 68.136719 112.847656 67.875 112.636719 67.722656 C 112.902344 67.582031 113.195312 67.28125 113.390625 67.328125 C 113.730469 67.464844 114.046875 67.664062 114.3125 67.917969 Z M 114.320312 67.941406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 149.75 126.898438 L 151.800781 127.910156 C 150.675781 128.164062 150.019531 127.8125 149.75 126.898438 Z M 149.75 126.898438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 129.890625 98.011719 L 131.023438 99.292969 L 130.339844 99.757812 L 129.785156 98.152344 Z M 129.890625 98.011719 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 127.578125 102.613281 C 127.007812 102.882812 127.128906 103.984375 126.152344 103.84375 C 126.21875 102.929688 126.78125 102.636719 127.578125 102.613281 Z M 127.578125 102.613281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 89.171875 116.589844 L 89.34375 116.140625 L 88.40625 115.910156 L 88.40625 115.617188 C 88.703125 115.59375 89.003906 115.621094 89.292969 115.699219 C 89.554688 115.820312 89.734375 116.113281 89.953125 116.328125 L 89.332031 116.742188 Z M 89.171875 116.589844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 131.65625 98.566406 L 133.160156 97.449219 L 133.40625 97.792969 L 131.898438 98.933594 Z M 131.65625 98.566406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 125.277344 111.757812 L 128.402344 112.800781 L 128.304688 113.078125 L 125.226562 111.972656 Z M 125.277344 111.757812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 142.113281 94.480469 L 143.742188 93.125 L 144.011719 93.460938 L 142.335938 94.734375 Z M 142.113281 94.480469 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 154.820312 88.84375 L 156.644531 88.371094 C 156.128906 88.980469 155.835938 89.84375 154.820312 88.84375 Z M 154.820312 88.84375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 126.128906 93.6875 L 126.074219 92.621094 C 126.226562 92.609375 126.382812 92.609375 126.535156 92.621094 C 126.535156 92.96875 126.535156 93.320312 126.535156 93.664062 Z M 126.128906 93.6875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 168.917969 89.070312 L 169.308594 90.320312 L 168.917969 90.449219 L 168.46875 89.226562 Z M 168.917969 89.070312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 159.953125 102.117188 L 158.9375 102.980469 L 158.792969 102.90625 L 159.5 101.40625 L 159.964844 102.15625 Z M 159.953125 102.117188 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 138.515625 97.644531 L 139.648438 96.722656 L 139.859375 96.925781 L 138.875 97.980469 Z M 138.515625 97.644531 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 206.09375 115.070312 L 204.996094 114.726562 L 206.378906 113.824219 C 206.273438 114.367188 206.207031 114.703125 206.136719 115.03125 Z M 206.09375 115.070312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 118.828125 176.417969 L 117.671875 177.0625 L 117.488281 176.753906 L 118.617188 176.054688 Z M 118.828125 176.417969 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 47.6875 167.78125 L 48.332031 168.390625 L 48.273438 168.636719 L 45.007812 167.773438 L 45.050781 167.519531 C 45.277344 167.578125 45.507812 167.625 45.726562 167.691406 C 45.96875 167.800781 46.21875 167.878906 46.476562 167.925781 C 46.863281 167.898438 47.246094 167.84375 47.621094 167.757812 Z M 47.6875 167.78125 "></path></g>',1),Zf=[Tf];function Af(i,t){return Y(),i1("svg",If,Zf)}const Df=x1(Rf,[["render",Af]]),$f={},Ff={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},jf=J5('<g id="surface1"><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 199.429688 61.023438 C 199.144531 62.394531 198.875 63.773438 198.582031 65.144531 C 196.261719 76.066406 186.644531 85.082031 175.597656 86.582031 C 171.371094 87.273438 167.035156 86.441406 163.367188 84.234375 C 161.28125 86.207031 159.183594 88.074219 157.21875 90.066406 C 152.027344 95.3125 146.882812 100.558594 141.730469 105.882812 C 141.585938 106.105469 141.351562 106.257812 141.085938 106.289062 C 140.820312 106.320312 140.554688 106.230469 140.363281 106.046875 C 138.597656 104.890625 136.765625 103.851562 134.855469 102.703125 L 158.585938 79.535156 C 157.097656 77.164062 156.199219 74.46875 155.960938 71.683594 C 155.535156 66.074219 157.113281 60.496094 160.425781 55.941406 C 164.464844 50.097656 169.851562 46.027344 176.859375 44.347656 C 178.699219 43.90625 180.613281 43.703125 182.476562 43.410156 C 183.320312 43.285156 183.703125 43.695312 183.566406 44.566406 C 183.320312 46.144531 183.039062 47.71875 182.753906 49.460938 L 187.433594 48.710938 C 188.710938 48.515625 188.988281 48.820312 188.773438 50.117188 C 188.53125 51.617188 188.304688 53.058594 188.019531 54.699219 C 189.582031 54.449219 191.023438 54.210938 192.527344 54.007812 C 194.03125 53.804688 194.277344 54.007812 194.03125 55.550781 C 193.796875 56.953125 193.59375 58.363281 193.347656 59.960938 C 194.683594 59.757812 195.953125 59.503906 197.230469 59.382812 C 197.96875 59.359375 198.707031 59.394531 199.4375 59.488281 Z M 199.429688 61.023438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 34.347656 211.972656 C 33.25 210.976562 32.09375 210.007812 31.066406 208.972656 C 30.382812 208.316406 30.585938 207.609375 30.921875 206.777344 C 32.621094 202.574219 35.570312 199.367188 38.816406 196.285156 C 44.074219 191.300781 49.257812 186.167969 54.457031 181.09375 L 85.109375 151.15625 C 87.046875 149.277344 88.992188 147.410156 91.117188 145.355469 C 91.117188 148.917969 91.027344 152.304688 93.296875 155.257812 C 92.191406 156.398438 91.125 157.507812 90.027344 158.636719 C 81.597656 167.246094 73.15625 175.855469 64.707031 184.457031 C 57.273438 192.050781 49.867188 199.671875 42.398438 207.234375 C 41.441406 208.144531 40.367188 208.929688 39.207031 209.566406 C 37.707031 210.441406 36.113281 211.175781 34.558594 211.972656 Z M 34.347656 211.972656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 122.003906 149.570312 C 121.71875 150.320312 121.441406 151.066406 121.148438 151.816406 C 120.894531 152.648438 120.089844 153.179688 119.226562 153.085938 C 116.445312 153.015625 113.660156 153 110.878906 153.085938 C 109.902344 153.207031 108.984375 152.585938 108.746094 151.628906 C 108.5 150.957031 108.234375 150.28125 107.996094 149.605469 L 107.671875 149.515625 C 107.304688 150.332031 106.875 151.136719 106.582031 151.984375 C 106.484375 152.53125 105.984375 152.914062 105.425781 152.867188 C 103.308594 152.867188 101.191406 152.957031 99.078125 152.867188 C 97.269531 152.785156 96.464844 152.117188 96.324219 150.242188 C 96.101562 148.109375 96.136719 145.953125 96.429688 143.828125 C 96.824219 142.148438 96.246094 140.390625 94.925781 139.277344 C 91.003906 135.335938 87.773438 130.871094 86.332031 125.375 C 84.761719 119.378906 86.5 114.523438 91.425781 110.789062 C 95.691406 107.558594 100.605469 105.695312 105.699219 104.246094 C 108.085938 103.574219 110.511719 103.039062 112.9375 102.492188 C 114.976562 102.042969 117.097656 102.183594 119.058594 102.890625 C 122.304688 103.992188 125.675781 104.710938 128.929688 105.792969 C 132.273438 106.875 135.417969 108.492188 138.242188 110.582031 C 143.757812 114.695312 145.425781 119.980469 143.292969 126.523438 C 141.789062 131.132812 139.003906 134.945312 135.824219 138.515625 C 135.609375 138.808594 135.359375 139.078125 135.074219 139.308594 C 133.257812 140.476562 133.25 142.089844 133.570312 144.023438 C 133.839844 145.863281 133.898438 147.722656 133.75 149.578125 C 133.640625 151.9375 132.878906 152.746094 130.574219 152.898438 C 128.460938 152.984375 126.34375 152.957031 124.234375 152.816406 C 123.964844 152.816406 123.621094 152.402344 123.484375 152.066406 C 123.0625 151.242188 122.734375 150.371094 122.355469 149.515625 Z M 134.773438 123.597656 C 134.582031 122.566406 134.332031 121.546875 134.023438 120.542969 C 133.1875 118.179688 131.804688 117.699219 129.824219 119.140625 C 127.050781 121.148438 124.308594 123.203125 121.652344 125.359375 C 120.148438 126.550781 120.148438 127.375 121.117188 128.980469 C 122.433594 131.058594 124.238281 132.78125 126.375 134.003906 C 127.054688 134.476562 127.96875 134.414062 128.578125 133.851562 C 130.417969 132.414062 131.964844 130.632812 133.128906 128.605469 C 134.074219 127.09375 134.648438 125.375 134.804688 123.597656 Z M 95.015625 123.441406 L 95.234375 123.523438 C 95.234375 123.703125 95.234375 123.882812 95.285156 124.0625 C 95.835938 128.464844 98.367188 131.605469 101.804688 134.105469 C 102.316406 134.339844 102.910156 134.300781 103.390625 134.007812 C 105.0625 132.800781 106.621094 131.441406 108.046875 129.949219 C 110.039062 127.699219 109.917969 126.632812 107.589844 124.769531 C 105.007812 122.699219 102.289062 120.78125 99.597656 118.839844 C 98.328125 117.925781 97.132812 118.089844 96.414062 119.484375 C 95.859375 120.769531 95.402344 122.089844 95.046875 123.441406 Z M 95.015625 123.441406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 94.789062 102.851562 L 87.714844 107.246094 C 85.921875 105.828125 85.921875 105.828125 84.175781 107.566406 L 80.046875 111.675781 C 78.964844 112.753906 78.710938 112.761719 77.664062 111.675781 C 71.609375 105.335938 65.550781 98.988281 59.488281 92.636719 C 55.589844 88.539062 51.585938 84.527344 47.839844 80.300781 C 39.273438 70.601562 34.699219 59.097656 32.851562 46.394531 C 32.824219 46.25 32.824219 46.101562 32.851562 45.960938 C 32.972656 45.464844 33.117188 44.976562 33.25 44.460938 C 33.742188 44.578125 34.207031 44.777344 34.632812 45.050781 C 39.800781 50.015625 44.953125 54.976562 50.121094 59.960938 C 59.511719 68.953125 68.898438 77.949219 78.289062 86.941406 C 83.617188 92.046875 88.929688 97.167969 94.226562 102.296875 C 94.425781 102.472656 94.613281 102.660156 94.789062 102.851562 Z M 94.789062 102.851562 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 135.894531 156.097656 C 138.730469 153.363281 138.898438 149.90625 138.898438 146.203125 C 139.566406 146.832031 140.128906 147.320312 140.65625 147.84375 L 168.304688 175.042969 C 176.355469 182.960938 184.414062 190.863281 192.476562 198.75 C 194.726562 200.945312 195.710938 203.832031 197.109375 206.492188 C 197.203125 206.835938 197.148438 207.203125 196.953125 207.496094 C 196.601562 208.09375 196.1875 208.648438 195.710938 209.152344 C 193.984375 210.976562 193.59375 210.863281 191.28125 209.972656 C 187.082031 208.34375 184.234375 205.113281 181.214844 202.054688 C 175.882812 196.675781 170.566406 191.28125 165.269531 185.875 C 155.644531 176.125 146.023438 166.382812 136.410156 156.644531 C 136.253906 156.503906 136.101562 156.335938 135.894531 156.097656 Z M 135.894531 156.097656 "></path></g>',1),Nf=[jf];function Bf(i,t){return Y(),i1("svg",Ff,Nf)}const Hf=x1($f,[["render",Bf]]),Vf={},qf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},Uf=J5('<g id="surface1"><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 107.476562 126.816406 C 106.132812 128.53125 104.75 130.695312 102.429688 132 C 101.820312 132.347656 101.453125 132.367188 100.964844 131.84375 C 99.832031 130.636719 98.351562 129.675781 98.050781 127.894531 C 97.980469 127.414062 98.101562 126.921875 98.390625 126.53125 C 99.371094 125.449219 100.453125 124.445312 101.519531 123.441406 C 101.917969 123 102.488281 122.757812 103.078125 122.777344 C 103.671875 122.792969 104.226562 123.074219 104.59375 123.539062 C 105.5625 124.574219 106.472656 125.667969 107.476562 126.816406 Z M 107.476562 126.816406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 81.269531 152.941406 L 76.109375 157.835938 C 75.546875 158.367188 75.117188 158.253906 74.5625 157.722656 C 73.355469 156.554688 72.039062 155.476562 71.609375 153.765625 C 71.519531 153.339844 71.613281 152.898438 71.867188 152.542969 C 72.886719 151.433594 73.992188 150.402344 75.097656 149.367188 C 75.480469 148.945312 76.027344 148.707031 76.597656 148.707031 C 77.171875 148.707031 77.714844 148.945312 78.101562 149.367188 C 79.152344 150.394531 80.0625 151.546875 81.269531 152.941406 Z M 81.269531 152.941406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 127.726562 153.128906 C 125.179688 152.671875 123.898438 150.796875 122.335938 149.203125 C 123.542969 146.546875 125.96875 145.101562 128.34375 143.125 C 129.5 144.621094 130.679688 146.121094 131.730469 147.621094 C 131.882812 148.082031 131.800781 148.585938 131.511719 148.976562 C 130.320312 150.421875 129.003906 151.765625 127.726562 153.128906 Z M 127.726562 153.128906 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 114.320312 120.496094 L 108.597656 126.15625 C 106.882812 124.582031 105.15625 123.410156 104.667969 121.269531 C 104.585938 120.835938 104.6875 120.390625 104.953125 120.039062 C 106.132812 118.855469 107.351562 117.699219 108.632812 116.628906 C 109.527344 115.878906 110.472656 116.351562 111.15625 116.996094 C 112.148438 117.96875 113.035156 119.101562 114.320312 120.496094 Z M 114.320312 120.496094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 121.222656 149.898438 C 122.53125 151.015625 123.722656 151.886719 124.738281 152.898438 C 125.753906 153.910156 125.570312 154.898438 124.574219 155.953125 C 123.355469 157.25 122.078125 158.488281 120.578125 159.996094 C 119.007812 158.625 117.496094 157.355469 116.070312 156.007812 C 115.878906 155.625 115.90625 155.167969 116.136719 154.808594 C 117.902344 153.054688 119.726562 151.332031 121.222656 149.898438 Z M 121.222656 149.898438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 100.996094 133.082031 C 99.675781 135.265625 97.878906 137.125 95.738281 138.523438 C 95.535156 138.648438 95.113281 138.777344 94.984375 138.671875 C 93.640625 137.464844 92.125 136.421875 91.449219 134.59375 C 91.101562 133.882812 91.34375 133.027344 92.011719 132.601562 C 93.003906 131.769531 93.964844 130.882812 94.910156 130 C 95.324219 129.53125 95.925781 129.269531 96.550781 129.289062 C 97.175781 129.308594 97.761719 129.609375 98.140625 130.105469 Z M 100.996094 133.082031 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 94.789062 139.707031 L 89.34375 144.832031 C 89.164062 145.082031 88.871094 145.21875 88.566406 145.195312 C 88.257812 145.175781 87.984375 144.996094 87.84375 144.726562 C 86.882812 143.527344 85.859375 142.382812 84.914062 141.167969 C 84.695312 140.914062 84.597656 140.582031 84.640625 140.25 C 84.683594 139.917969 84.871094 139.621094 85.144531 139.4375 C 86.265625 138.417969 87.324219 137.335938 88.429688 136.3125 C 89.199219 135.609375 90.367188 135.589844 91.164062 136.257812 C 92.328125 137.269531 93.410156 138.371094 94.789062 139.707031 Z M 94.789062 139.707031 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 148.121094 123.816406 L 151.058594 126.933594 C 151.890625 127.804688 151.890625 129.175781 151.058594 130.042969 C 149.960938 131.183594 148.804688 132.292969 147.679688 133.363281 C 147.4375 133.535156 147.136719 133.597656 146.851562 133.53125 C 144.855469 132.992188 143.605469 131.453125 142.34375 129.992188 C 142.1875 129.804688 142.449219 129.09375 142.699219 128.75 C 143.191406 128.046875 143.757812 127.402344 144.394531 126.828125 C 145.550781 125.796875 146.8125 124.835938 148.121094 123.816406 Z M 148.121094 123.816406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 134.433594 136.871094 C 135.765625 138.0625 136.855469 138.980469 137.875 139.96875 C 138.273438 140.355469 138.5 140.886719 138.5 141.445312 C 138.5 142 138.273438 142.53125 137.875 142.921875 C 136.613281 144.195312 135.3125 145.417969 134.121094 146.601562 C 131.714844 146.390625 130.621094 144.457031 129.230469 142.921875 C 129.078125 142.585938 129.117188 142.195312 129.328125 141.894531 C 131.039062 140.15625 132.828125 138.4375 134.433594 136.871094 Z M 134.433594 136.871094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 23.898438 257.175781 C 21.707031 256.746094 20.203125 255.480469 18.808594 254.019531 C 18.339844 253.53125 18.28125 253.121094 18.710938 252.640625 C 20.363281 250.820312 22.027344 249.003906 23.863281 246.996094 C 25.289062 248.585938 26.558594 249.875 27.675781 251.289062 C 28.472656 252.300781 27.746094 253.058594 26.867188 253.539062 C 26.347656 253.777344 25.957031 254.230469 25.800781 254.777344 C 25.445312 255.710938 24.53125 256.425781 23.898438 257.175781 Z M 23.898438 257.175781 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 134.234375 100.53125 C 132.324219 102.914062 130.730469 105.25 127.824219 106.601562 C 126.75 105.183594 125.65625 103.773438 124.59375 102.335938 C 124.351562 102.082031 124.230469 101.734375 124.269531 101.382812 C 124.308594 101.035156 124.5 100.71875 124.789062 100.523438 C 125.835938 99.609375 126.773438 98.582031 127.796875 97.644531 C 129.011719 96.527344 129.171875 96.617188 130.5 97.765625 C 131.648438 98.746094 132.917969 99.570312 134.234375 100.53125 Z M 134.234375 100.53125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 140.414062 94.527344 C 138.949219 96.75 137.015625 98.625 134.742188 100.019531 C 132.972656 98.792969 131.609375 97.074219 130.824219 95.074219 C 130.730469 94.824219 131.046875 94.324219 131.3125 94.097656 C 132.363281 93.078125 133.472656 92.121094 134.5625 91.101562 C 135.652344 90.082031 136.464844 90.050781 137.433594 91.027344 C 138.402344 92 139.347656 93.273438 140.414062 94.527344 Z M 140.414062 94.527344 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 112.328125 167.683594 C 112.207031 167.949219 112.054688 168.203125 111.878906 168.433594 C 110.765625 169.625 109.664062 170.839844 108.484375 171.949219 C 108.09375 172.230469 107.605469 172.34375 107.132812 172.257812 C 105.105469 171.890625 104.128906 170.105469 102.835938 168.816406 C 102.699219 168.46875 102.75 168.078125 102.964844 167.773438 C 104.617188 166.15625 106.304688 164.589844 108.027344 163.039062 C 108.289062 162.917969 108.597656 162.941406 108.835938 163.105469 C 109.933594 164.296875 110.984375 165.527344 112.023438 166.769531 C 112.175781 167.054688 112.277344 167.363281 112.328125 167.683594 Z M 112.328125 167.683594 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 206.785156 75.554688 C 204.582031 75.015625 203.390625 73.414062 201.992188 72.050781 C 201.765625 71.898438 201.628906 71.648438 201.617188 71.378906 C 201.609375 71.109375 201.730469 70.851562 201.945312 70.683594 C 203.320312 69.304688 204.710938 67.941406 206.121094 66.59375 C 206.550781 66.234375 206.996094 65.894531 207.460938 65.582031 C 208.542969 66.75 210 67.777344 210.59375 69.164062 C 210.960938 70.019531 210.214844 71.570312 209.585938 72.558594 C 208.75 73.644531 207.8125 74.648438 206.785156 75.554688 Z M 206.785156 75.554688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 201.074219 71.953125 C 201.910156 73.816406 203.945312 74.492188 204.425781 76.34375 L 203.929688 76.34375 C 203.765625 76.867188 203.613281 77.394531 203.425781 77.902344 C 203.265625 78.398438 203.058594 78.878906 202.804688 79.335938 C 202.523438 79.6875 202.210938 80.015625 201.871094 80.308594 C 200.097656 82.085938 199.015625 82.105469 197.148438 80.308594 C 196.394531 79.558594 195.683594 78.808594 194.945312 78.015625 C 196.125 75.273438 198.648438 73.855469 201.074219 71.953125 Z M 201.074219 71.953125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 153.949219 127.414062 C 150.488281 125.78125 148.503906 123.75 149.253906 122.46875 L 149.585938 123.507812 C 150.953125 122.910156 151.089844 122.429688 149.976562 121.140625 C 151.386719 119.980469 152.785156 118.808594 154.210938 117.671875 C 154.421875 117.570312 154.664062 117.589844 154.859375 117.714844 C 155.976562 118.945312 157.113281 120.179688 158.125 121.464844 C 158.613281 122.0625 158.5 122.664062 157.878906 123.269531 C 156.503906 124.597656 155.234375 126.027344 153.949219 127.414062 Z M 153.949219 127.414062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 114.199219 166.558594 C 112.523438 165.167969 111.089844 163.96875 109.640625 162.8125 C 109.113281 162.378906 109.191406 161.996094 109.496094 161.441406 C 110.804688 159.140625 113.097656 157.933594 115.140625 156.089844 C 116.039062 157.972656 118.21875 158.660156 118.59375 160.757812 C 118.652344 161.222656 118.527344 161.691406 118.242188 162.0625 C 117.925781 162.453125 117.308594 162.582031 116.941406 162.941406 C 116.367188 163.523438 115.832031 164.144531 115.339844 164.800781 C 115.003906 165.203125 114.742188 165.699219 114.199219 166.558594 Z M 114.199219 166.558594 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 194.359375 32.5 C 195.691406 33.878906 195.945312 33.890625 196.742188 32.746094 L 200.355469 36.117188 L 194.34375 42.113281 C 192.78125 40.390625 190.90625 39.332031 190.492188 37.152344 C 190.414062 36.714844 190.519531 36.265625 190.785156 35.910156 C 191.898438 34.714844 193.121094 33.644531 194.359375 32.5 Z M 194.359375 32.5 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 199.722656 30.167969 L 197.710938 29.417969 C 198.796875 28.179688 199.945312 27.003906 201.15625 25.886719 C 202.035156 25.136719 202.960938 25.976562 203.652344 26.496094 C 204.570312 27.230469 205.425781 28.042969 206.207031 28.921875 C 206.410156 29.132812 206.617188 29.671875 206.511719 29.785156 C 205.011719 31.507812 203.871094 33.59375 201.738281 34.769531 C 200.949219 35.203125 200.46875 35.269531 199.859375 34.574219 C 199.347656 33.996094 198.664062 33.585938 198.152344 33.007812 C 197.148438 31.882812 197.3125 31.304688 198.710938 30.667969 Z M 199.722656 30.167969 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 17.214844 264.40625 C 15.636719 263.207031 14.148438 262.089844 12.707031 260.953125 C 12.054688 260.441406 11.746094 259.945312 12.78125 259.453125 C 13.453125 259.070312 14.066406 258.601562 14.609375 258.050781 C 15.011719 257.652344 15.816406 257.339844 15.238281 256.484375 C 15.195312 256.425781 15.402344 256.140625 15.539062 256.011719 C 16.253906 255.34375 16.980469 254.707031 17.792969 253.988281 C 19.03125 255.335938 20.277344 256.597656 21.390625 257.960938 C 21.925781 258.605469 21.796875 259.296875 21.121094 259.992188 C 19.789062 261.296875 18.632812 262.765625 17.214844 264.40625 Z M 17.214844 264.40625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 67.847656 165.921875 C 67.097656 166.792969 66.253906 168.375 64.933594 169.152344 C 63.609375 169.835938 62.089844 170.042969 60.628906 169.738281 C 59.195312 169.421875 58.773438 167.707031 58.324219 166.359375 C 58.261719 166.171875 58.550781 165.804688 58.75 165.609375 C 59.820312 164.539062 60.898438 163.476562 61.988281 162.421875 C 62.929688 161.523438 63.867188 161.410156 64.761719 162.3125 C 65.8125 163.390625 66.714844 164.582031 67.847656 165.921875 Z M 67.847656 165.921875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 88.707031 181.933594 C 90.019531 183.582031 91.222656 184.976562 92.289062 186.429688 C 92.753906 187.082031 92.84375 187.824219 91.613281 187.929688 C 91.238281 188.054688 90.953125 188.367188 90.863281 188.753906 C 90.863281 189.863281 90.042969 190.011719 89.261719 190.574219 L 88.945312 189.21875 C 87.707031 189.785156 87.835938 190.894531 87.867188 191.96875 C 85.816406 191.390625 84.433594 189.988281 83.171875 188.476562 C 82.984375 188.042969 83.03125 187.546875 83.296875 187.15625 C 85.027344 185.433594 86.804688 183.753906 88.707031 181.933594 Z M 88.707031 181.933594 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 36.535156 234.1875 L 36.488281 235.144531 L 36.742188 234.898438 C 37.769531 235.65625 38.742188 236.480469 39.664062 237.359375 C 40.019531 237.730469 39.824219 238.570312 40.085938 239.082031 C 40.574219 240.019531 39.695312 240.234375 39.335938 240.648438 C 38.296875 241.847656 37.164062 242.957031 35.992188 244.179688 C 35.382812 243.429688 34.03125 243.773438 34.046875 242.679688 C 33.519531 242.515625 32.957031 242.5 32.648438 242.214844 C 30.398438 240.199219 30.398438 239.929688 32.433594 237.71875 C 33.730469 236.460938 35.097656 235.285156 36.535156 234.1875 Z M 32.851562 240.0625 L 33.3125 240.496094 L 35.226562 238.472656 L 34.753906 238.03125 C 34.121094 238.707031 33.484375 239.382812 32.851562 240.0625 Z M 32.851562 240.0625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 154.03125 81.46875 C 152.371094 83.125 150.773438 84.738281 149.171875 86.339844 C 148.421875 87.089844 147.8125 87.007812 146.917969 86.265625 C 145.582031 85.191406 144.601562 83.734375 144.109375 82.09375 C 145.410156 80.707031 146.605469 79.371094 147.867188 78.105469 C 148.257812 77.695312 148.800781 77.464844 149.367188 77.464844 C 149.933594 77.464844 150.476562 77.695312 150.871094 78.105469 C 151.875 79.117188 152.800781 80.195312 154.03125 81.46875 Z M 150.96875 78.839844 L 150.457031 78.78125 C 149.902344 79.363281 149.308594 79.917969 148.804688 80.546875 C 148.488281 80.945312 148.332031 81.671875 149.050781 81.597656 C 149.785156 81.464844 150.445312 81.074219 150.914062 80.496094 C 151.191406 80.195312 150.96875 79.402344 150.96875 78.839844 Z M 150.96875 78.839844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 194.007812 78.636719 C 195.222656 79.746094 196.367188 80.683594 197.371094 81.730469 C 198.378906 82.78125 198.085938 83.839844 196.890625 84.617188 C 196.660156 84.769531 196.605469 85.15625 196.402344 85.367188 C 195.503906 86.339844 194.585938 87.316406 193.632812 88.238281 C 193.496094 88.367188 193.082031 88.304688 192.878906 88.238281 C 190.957031 87.488281 189.660156 85.988281 188.066406 84.222656 L 192.097656 83.269531 L 192.191406 82.835938 L 190.257812 81.695312 Z M 194.007812 78.636719 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 127.328125 107.746094 C 125.976562 109.035156 124.394531 110.589844 122.753906 112.09375 C 122.003906 112.777344 121.253906 112.933594 120.503906 111.980469 C 120.105469 111.472656 119.539062 111.105469 119.097656 110.625 C 117.59375 109.027344 117.804688 107.109375 119.53125 105.761719 C 120.285156 105.183594 120.886719 104.457031 121.605469 103.859375 C 121.949219 103.644531 122.320312 103.480469 122.710938 103.363281 L 122.644531 104.59375 C 123.722656 105.769531 123.722656 105.769531 125.046875 104.652344 Z M 127.328125 107.746094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 156.625 117.761719 C 156.953125 117.402344 157.53125 117.011719 157.554688 116.667969 C 157.492188 116.039062 157.328125 115.425781 157.066406 114.851562 L 156.542969 114.710938 L 161.378906 110.878906 C 162.601562 112.433594 163.765625 113.796875 164.78125 115.273438 C 164.957031 115.78125 164.863281 116.34375 164.53125 116.769531 C 163.234375 118.269531 161.820312 119.679688 160.34375 121.269531 L 156.152344 118.023438 Z M 156.625 117.761719 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 74.59375 158.894531 C 73.375 161.203125 71.558594 163.144531 69.335938 164.515625 C 69.09375 164.648438 68.585938 164.738281 68.472656 164.605469 C 67.132812 163.316406 65.46875 162.226562 65.070312 160.257812 C 65.003906 159.804688 65.136719 159.34375 65.429688 158.992188 C 66.332031 158 67.328125 157.085938 68.296875 156.148438 C 68.769531 155.609375 69.464844 155.316406 70.179688 155.355469 C 70.894531 155.398438 71.550781 155.769531 71.957031 156.359375 C 72.761719 157.277344 73.644531 158.125 74.59375 158.894531 Z M 72.585938 161.382812 L 71.550781 160.105469 L 69.644531 161.890625 L 70.828125 162.984375 Z M 72.585938 161.382812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 64.445312 209.339844 L 66.796875 207.476562 L 66.535156 207.101562 L 63.996094 208.660156 L 63.035156 207.65625 C 64.476562 205.234375 66.527344 203.59375 68.585938 201.972656 C 68.765625 201.832031 69.335938 201.972656 69.582031 202.191406 C 70.445312 202.984375 71.234375 203.863281 72.0625 204.695312 C 72.777344 205.550781 72.828125 206.777344 72.191406 207.691406 C 70.835938 209.699219 68.660156 209.941406 66.609375 210.324219 C 65.976562 210.457031 65.195312 209.714844 64.445312 209.339844 Z M 64.445312 209.339844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 139.316406 135.53125 C 138.777344 135.207031 137.816406 134.925781 137.816406 134.5625 C 137.804688 133.839844 138.074219 133.140625 138.566406 132.609375 C 139.410156 131.820312 140.308594 131.09375 141.253906 130.433594 C 142.433594 131.519531 143.578125 132.496094 144.613281 133.566406 C 145.296875 134.402344 145.230469 135.621094 144.464844 136.378906 C 143.222656 137.71875 141.96875 139.054688 140.519531 140.605469 L 135.261719 136.363281 L 136.3125 135.042969 C 136.839844 135.90625 136.628906 137.457031 138.027344 137.171875 C 138.71875 137.03125 139.257812 136.128906 139.867188 135.574219 Z M 139.316406 135.53125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 94.429688 185.941406 L 89.324219 181.894531 C 90.59375 178.851562 93.125 177.449219 95.332031 175.726562 C 96.457031 176.820312 97.539062 177.800781 98.53125 178.867188 C 99.171875 179.757812 99.101562 180.972656 98.367188 181.78125 C 97.140625 183.0625 95.941406 184.375 94.429688 185.941406 Z M 93.183594 179.480469 C 94.136719 179.675781 94.941406 179.871094 95.761719 180 C 96.210938 180.066406 96.847656 180.1875 97.089844 180 C 97.328125 179.8125 97.335938 179.097656 97.40625 178.785156 C 96.40625 178.582031 95.617188 178.476562 94.859375 178.261719 C 93.339844 177.796875 93.039062 178.019531 93.183594 179.480469 Z M 93.183594 179.480469 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 16.5 246.988281 L 19.332031 249.453125 C 18.394531 250.332031 17.484375 251.066406 16.710938 251.921875 C 16.214844 252.476562 15.960938 253.261719 15.488281 253.832031 C 15.171875 254.09375 14.769531 254.230469 14.359375 254.207031 C 13.421875 254.292969 12.613281 254.898438 12.273438 255.773438 C 12.089844 256.679688 11.519531 256.71875 10.230469 255.773438 L 8.90625 257.894531 L 7.050781 255.855469 C 7.972656 255.214844 8.929688 254.621094 9.914062 254.078125 C 10.207031 253.929688 10.761719 254.28125 11.414062 254.46875 C 10.042969 253.554688 10.703125 252.699219 11.183594 251.753906 C 11.917969 250.160156 13.203125 248.882812 14.804688 248.15625 C 15.402344 247.820312 15.972656 247.429688 16.5 246.988281 Z M 16.5 246.988281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 158.636719 77.054688 C 157.726562 75.871094 156.667969 75.554688 155.738281 76.089844 C 154.984375 76.515625 155.0625 77.09375 155.503906 77.4375 C 156.007812 77.535156 156.667969 77.4375 157.007812 77.761719 C 157.710938 78.457031 157.007812 78.890625 156.488281 79.257812 C 154.746094 80.59375 154.746094 80.59375 153.09375 79.117188 C 152.71875 78.804688 152.363281 78.472656 152.027344 78.121094 C 150.523438 76.449219 150.765625 74.925781 152.671875 73.292969 L 154.558594 73.765625 L 154.699219 73.433594 L 153.523438 72.558594 C 155.082031 70.308594 156.292969 70.460938 158.074219 72.386719 C 158.464844 72.847656 158.894531 73.28125 159.351562 73.683594 C 160.28125 74.433594 160.320312 75.183594 159.515625 76.007812 C 159.191406 76.320312 158.960938 76.652344 158.636719 77.054688 Z M 158.636719 77.054688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 207.398438 20.160156 C 207.941406 19.933594 208.507812 19.753906 209.082031 19.628906 C 209.492188 19.574219 209.90625 19.683594 210.238281 19.929688 C 210.828125 20.496094 211.378906 21.097656 211.890625 21.734375 C 211.410156 22.746094 210.53125 23.773438 210.496094 24.839844 C 210.410156 27.019531 208.84375 27.753906 207.195312 28.929688 C 206.039062 27.492188 204.855469 26.074219 203.75 24.589844 C 203.515625 24.328125 203.410156 23.976562 203.460938 23.625 C 203.511719 23.277344 203.710938 22.96875 204.011719 22.785156 C 205.132812 21.847656 206.183594 20.820312 207.265625 19.785156 Z M 207.398438 20.160156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 237.851562 44.765625 C 237.007812 45.710938 236.707031 46.714844 235.46875 46.460938 C 235.195312 46.484375 234.953125 46.640625 234.816406 46.882812 C 234.75 47.039062 234.988281 47.332031 235.160156 47.71875 C 235.007812 47.816406 234.863281 47.929688 234.726562 48.050781 C 232.929688 49.820312 232.644531 49.894531 230.609375 48.363281 C 229.710938 47.65625 228.910156 46.835938 228.222656 45.921875 C 228.085938 45.496094 228.171875 45.03125 228.453125 44.683594 C 230.167969 42.945312 231.9375 41.28125 233.785156 39.507812 C 234.953125 40.796875 235.972656 41.933594 237.203125 43.253906 L 232.609375 43.253906 L 232.855469 41.753906 L 230.84375 43.109375 C 232.996094 44.253906 235.410156 44.824219 237.851562 44.765625 Z M 237.851562 44.765625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 46.785156 224.390625 C 46.898438 222.613281 48.152344 221.933594 49.835938 221.589844 C 50.167969 222.179688 51.15625 222.457031 50.941406 223.582031 C 50.902344 223.800781 51.652344 224.152344 52.023438 224.457031 C 52.390625 224.765625 52.71875 225.097656 53.066406 225.417969 L 52.097656 226.347656 C 52.015625 226.421875 51.910156 226.480469 51.632812 226.675781 L 53.132812 226.675781 C 51.984375 227.765625 51.496094 229.308594 49.542969 229.046875 C 48.792969 228.941406 47.914062 229.496094 47.070312 229.628906 C 46.632812 229.667969 46.191406 229.570312 45.808594 229.351562 C 45.472656 229.121094 45.183594 228.824219 44.960938 228.484375 C 44.546875 227.964844 43.722656 227.253906 43.847656 226.917969 C 44.261719 225.992188 44.84375 225.152344 45.570312 224.445312 C 45.726562 224.210938 46.335938 224.390625 46.785156 224.390625 Z M 46.785156 224.390625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 33.519531 244.410156 C 34.324219 246.113281 34.273438 246.132812 32.703125 246.425781 C 31.796875 246.90625 31.152344 247.761719 30.945312 248.765625 C 31.035156 250.015625 30.277344 250.359375 29.066406 250.082031 C 26.988281 249.613281 26.0625 247.835938 24.664062 246.679688 C 25.785156 244.042969 28.039062 242.589844 30.253906 240.683594 C 31.003906 241.480469 31.757812 242.28125 32.613281 243.128906 C 32.246094 243.484375 31.917969 243.871094 31.628906 244.289062 C 31.503906 244.636719 31.429688 245 31.410156 245.371094 C 31.792969 245.390625 32.175781 245.351562 32.546875 245.257812 C 32.910156 245.023438 33.238281 244.738281 33.519531 244.410156 Z M 33.519531 244.410156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 221.296875 52.128906 C 222.777344 49.683594 224.859375 47.660156 227.34375 46.242188 L 230.886719 50.082031 L 229.386719 50.980469 L 229.511719 51.339844 L 230.949219 51.136719 L 231.195312 51.339844 C 230.703125 51.828125 230.15625 52.253906 229.566406 52.613281 C 227.996094 53.363281 226.375 53.972656 224.734375 54.5625 C 224.316406 54.683594 223.863281 54.617188 223.496094 54.375 C 222.691406 53.6875 222.007812 52.875 221.296875 52.128906 Z M 221.296875 52.128906 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 74.121094 196.472656 C 74.675781 196.652344 75.222656 196.855469 75.789062 196.996094 C 76.351562 197.140625 77.289062 197.078125 77.753906 197.46875 C 79.257812 198.699219 79.183594 198.765625 79.257812 200.699219 C 77.433594 200.460938 75.59375 200.296875 73.835938 201.578125 C 74.171875 202.015625 74.5625 202.410156 74.992188 202.761719 C 75.363281 202.96875 75.792969 203.054688 76.214844 203.007812 C 76.328125 203.007812 76.386719 202.417969 76.5 202.109375 C 76.613281 201.800781 76.765625 201.496094 76.898438 201.1875 C 77.0625 201.261719 77.363281 201.308594 77.386719 201.417969 C 77.476562 201.777344 77.636719 202.304688 77.460938 202.507812 C 76.746094 203.34375 75.972656 204.132812 75.140625 204.859375 C 74.992188 204.996094 74.554688 204.859375 74.269531 204.792969 C 72.398438 204.253906 71.265625 202.769531 70.019531 201.417969 C 69.875 201.035156 69.925781 200.609375 70.160156 200.273438 C 71.363281 198.863281 72.648438 197.523438 73.917969 196.148438 Z M 74.121094 196.472656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 220.347656 52.703125 C 221.597656 53.851562 222.671875 54.789062 223.683594 55.777344 C 224.519531 56.585938 224 59.097656 222.933594 59.523438 C 222.636719 59.613281 222.316406 59.597656 222.03125 59.480469 C 220.199219 58.730469 219.441406 59.046875 218.644531 60.820312 C 218.089844 62.035156 217.71875 62.050781 216.871094 60.957031 C 216.367188 60.285156 215.8125 59.648438 215.21875 59.050781 C 214.996094 58.898438 214.863281 58.644531 214.863281 58.375 C 214.863281 58.105469 214.996094 57.851562 215.21875 57.695312 C 216.9375 55.972656 218.726562 54.269531 220.347656 52.703125 Z M 220.347656 52.703125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 84.351562 196 L 82.15625 196.976562 L 80.234375 197.867188 L 80.089844 198.285156 C 78.875 197.117188 77.648438 195.960938 76.449219 194.785156 C 76.335938 194.617188 76.320312 194.40625 76.402344 194.222656 C 77.253906 193.292969 78.109375 192.367188 79.003906 191.480469 C 79.753906 190.730469 80.675781 190.070312 81.40625 189.269531 C 81.9375 188.683594 82.238281 188.664062 82.734375 189.269531 C 83.6875 190.460938 84.753906 191.578125 85.679688 192.800781 C 85.914062 193.105469 85.761719 193.699219 85.792969 194.164062 L 84.53125 194.007812 C 83.820312 193.878906 83.097656 193.804688 82.375 193.789062 C 81.339844 193.789062 80.828125 194.402344 81.066406 195.542969 L 84.175781 195.542969 Z M 84.351562 196 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 174.253906 58.867188 L 177.640625 58.199219 L 177.875 58.648438 C 176.800781 59.449219 175.734375 60.257812 174.636719 61.03125 C 174.515625 61.113281 174.140625 61.03125 173.996094 60.875 C 172.644531 59.59375 171.113281 58.429688 170.59375 56.511719 C 170.535156 56.148438 170.632812 55.777344 170.863281 55.492188 C 171.96875 54.347656 173.117188 53.242188 174.28125 52.148438 C 175.042969 51.421875 176.230469 51.386719 177.03125 52.066406 C 177.988281 52.820312 178.570312 53.949219 178.625 55.164062 C 178.625 55.605469 177.972656 56.195312 177.476562 56.480469 C 176.820312 56.863281 175.972656 56.902344 175.3125 57.277344 C 174.792969 57.664062 174.332031 58.121094 173.9375 58.632812 Z M 174.253906 58.867188 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 115.4375 135.328125 C 115.214844 135.097656 115.175781 135.074219 115.167969 135.035156 C 114.800781 134.03125 113.847656 132.71875 114.183594 132.039062 C 115.183594 130.113281 116.039062 127.910156 118.277344 126.917969 C 118.417969 126.839844 118.574219 126.792969 118.738281 126.792969 C 119.53125 126.867188 121.378906 129.394531 121.222656 130.1875 C 120.984375 131.410156 120.789062 132.644531 120.472656 133.851562 C 120.382812 134.761719 119.582031 135.429688 118.667969 135.351562 C 117.519531 135.285156 116.378906 135.328125 115.4375 135.328125 Z M 115.4375 135.328125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 211.539062 36.132812 C 212.011719 36.671875 212.597656 37.40625 213.25 38.066406 C 213.90625 38.726562 213.679688 39.566406 213.535156 40.351562 C 213.363281 41.265625 213.132812 42.167969 212.964844 43.082031 C 212.769531 44.089844 211.847656 44.796875 210.816406 44.730469 C 210.578125 44.730469 210.328125 44.730469 210.066406 44.730469 C 207.8125 44.730469 207.097656 44.199219 206.484375 42.039062 C 206.402344 41.820312 206.402344 41.582031 206.484375 41.363281 C 207.820312 39.421875 208.609375 37.046875 211.539062 36.132812 Z M 211.539062 36.132812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 112.5625 133.183594 L 114.46875 135.433594 C 114.554688 135.53125 114.710938 135.644531 114.695312 135.71875 C 114.320312 137.511719 114.003906 139.332031 113.464844 141.078125 C 113.351562 141.445312 112.398438 141.59375 111.8125 141.765625 C 111.492188 141.820312 111.164062 141.820312 110.84375 141.765625 C 108.417969 141.660156 108.296875 141.585938 107.566406 139.25 C 107.484375 138.945312 107.515625 138.621094 107.65625 138.339844 C 108.753906 136.339844 109.707031 134.195312 112.5625 133.183594 Z M 112.5625 133.183594 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 130.558594 122.339844 L 130.402344 122.339844 C 128.492188 122.339844 127.449219 121.367188 127.230469 119.476562 C 127.230469 119.355469 127.195312 119.199219 127.230469 119.125 C 128.5625 117.386719 129.101562 115.011719 131.378906 114.050781 C 131.519531 113.976562 131.675781 113.9375 131.835938 113.929688 C 132.738281 114.027344 134.554688 116.652344 134.367188 117.535156 C 134.136719 118.628906 133.925781 119.730469 133.707031 120.832031 C 133.488281 121.933594 132.617188 122.476562 130.558594 122.339844 Z M 130.558594 122.339844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 88.5625 161.890625 L 87.609375 162.691406 C 88.128906 163.691406 87.707031 166.589844 86.902344 167.316406 C 86.640625 167.546875 86.3125 167.691406 85.964844 167.730469 C 85.410156 167.78125 84.832031 167.632812 84.273438 167.730469 C 82.726562 167.9375 81.78125 167.414062 81.382812 165.824219 C 81.097656 165.160156 81.140625 164.398438 81.503906 163.773438 C 82.523438 162.21875 83.261719 160.445312 85.0625 159.582031 C 85.355469 159.441406 85.867188 159.28125 86.023438 159.425781 C 86.898438 160.175781 87.691406 161.027344 88.5625 161.890625 Z M 88.5625 161.890625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 137.191406 115.871094 L 136.945312 115.871094 C 135.050781 115.753906 134.171875 114.980469 133.855469 113.144531 C 133.820312 112.984375 133.835938 112.820312 133.902344 112.671875 C 135.019531 110.769531 135.945312 108.699219 138.054688 107.613281 C 138.230469 107.523438 138.523438 107.394531 138.597656 107.46875 C 139.4375 108.15625 140.226562 108.910156 140.957031 109.71875 C 141.179688 109.988281 141.015625 110.632812 140.957031 111.089844 C 140.773438 112.207031 140.601562 113.339844 140.332031 114.425781 C 140.199219 115.355469 139.355469 116.019531 138.417969 115.925781 Z M 137.191406 115.871094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 105.308594 148.347656 C 104.945312 148.347656 104.554688 148.273438 104.226562 148.265625 C 101.925781 148.199219 101.460938 147.832031 100.957031 145.605469 C 100.914062 145.410156 100.824219 145.148438 100.914062 145.019531 C 102.136719 143.257812 102.722656 140.980469 104.929688 140 C 105.070312 139.910156 105.222656 139.851562 105.382812 139.824219 C 106.132812 139.824219 108.207031 142.375 108.0625 143.109375 C 107.832031 144.335938 107.597656 145.566406 107.3125 146.78125 C 107.257812 147.253906 107.015625 147.6875 106.636719 147.984375 C 106.261719 148.277344 105.78125 148.410156 105.308594 148.347656 Z M 105.308594 148.347656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 216.542969 38.222656 C 216.414062 38.25 216.285156 38.25 216.15625 38.222656 C 215.355469 38.042969 214.339844 38.488281 213.90625 37.324219 C 213.46875 36.164062 212.679688 35.078125 213.835938 33.773438 C 214.992188 32.46875 215.292969 30.773438 217.03125 30.101562 C 217.441406 30.019531 217.863281 30.046875 218.261719 30.175781 C 218.425781 30.175781 218.539062 30.472656 218.703125 30.585938 C 220.453125 31.761719 220.679688 33.285156 219.761719 35.082031 C 219.671875 35.308594 219.617188 35.546875 219.605469 35.789062 C 219.269531 38.140625 219.085938 38.292969 216.542969 38.222656 Z M 216.542969 38.222656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 97.839844 154.808594 C 96.023438 155.117188 94.964844 154.269531 94.558594 152.558594 C 94.40625 152.050781 94.441406 151.503906 94.65625 151.015625 C 95.367188 149.722656 96.214844 148.503906 97.179688 147.386719 C 97.734375 146.835938 98.519531 146.574219 99.296875 146.683594 C 100.597656 147.257812 101.410156 148.570312 101.339844 149.988281 C 101.1875 151.1875 100.9375 152.375 100.589844 153.535156 C 100.410156 154.058594 99.703125 154.472656 99.148438 154.753906 C 98.71875 154.859375 98.273438 154.878906 97.839844 154.808594 Z M 97.839844 154.808594 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 125.40625 120.1875 C 126.121094 120.871094 126.800781 121.589844 127.433594 122.347656 C 127.730469 122.761719 127.859375 123.269531 127.796875 123.773438 C 127.578125 125.089844 127.265625 126.394531 126.855469 127.667969 C 126.789062 128.082031 126.550781 128.445312 126.203125 128.675781 C 125.851562 128.90625 125.421875 128.984375 125.015625 128.882812 C 124.492188 128.816406 123.964844 128.78125 123.4375 128.777344 C 121.976562 128.671875 120.804688 127.523438 120.667969 126.066406 C 120.667969 125.839844 120.929688 125.539062 121.15625 125.390625 C 121.4375 125.25 121.738281 125.144531 122.050781 125.082031 C 121.652344 123.90625 122.039062 122.609375 123.019531 121.84375 C 123.738281 121.261719 124.542969 120.78125 125.40625 120.1875 Z M 125.40625 120.1875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 62.378906 208.097656 L 64.484375 210.441406 L 63.542969 213.539062 L 63.90625 213.6875 L 65.789062 212.0625 C 66.429688 213.253906 65.285156 215.488281 63.4375 216.46875 C 62.5 216.964844 61.085938 217.488281 60.277344 217.128906 C 58.855469 216.507812 57.738281 215.210938 56.363281 214.085938 L 59.414062 210.390625 L 59.75 210.636719 C 59.625 212.234375 58.480469 213.253906 57.300781 214.386719 C 61.109375 213.636719 62.078125 212.773438 60.691406 209.625 Z M 62.378906 208.097656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 146.199219 101.96875 L 145.867188 102.972656 C 145.964844 103.039062 145.996094 103.085938 146.023438 103.085938 L 147.632812 103.265625 C 147.386719 103.847656 147.191406 104.445312 147.039062 105.058594 C 146.917969 105.753906 147 106.472656 146.917969 107.179688 C 146.679688 109.132812 146.296875 109.472656 144.386719 109.425781 C 143.492188 109.425781 142.609375 109.328125 141.652344 109.277344 C 141.25 108.496094 140.898438 107.691406 140.609375 106.863281 C 140.519531 106.414062 140.664062 105.945312 140.992188 105.625 C 141.699219 105.242188 142.148438 105.019531 141.976562 104.015625 C 141.894531 103.496094 142.523438 102.808594 142.921875 102.269531 C 143.15625 101.960938 143.605469 101.828125 143.898438 101.519531 C 144.816406 100.722656 145.582031 100.730469 146.199219 101.96875 Z M 146.199219 101.96875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 55.582031 189.234375 C 56.4375 187.5 57.480469 185.828125 60.027344 185.695312 C 60.5625 186.542969 62.28125 186.945312 61.953125 188.691406 C 61.785156 189.515625 61.808594 190.582031 60.496094 190.714844 L 61.394531 190.851562 C 61.335938 191.386719 61.246094 191.914062 61.132812 192.441406 C 61.050781 192.746094 60.898438 193.027344 60.691406 193.265625 C 59.855469 194.222656 58.789062 193.609375 57.8125 193.660156 C 56.835938 193.714844 55.835938 193.8125 55.507812 192.507812 C 55.367188 192.167969 55.191406 191.847656 54.980469 191.546875 C 54.621094 190.867188 54.589844 190.378906 55.605469 190.363281 C 55.90625 190.363281 56.199219 190.101562 56.5 189.96875 Z M 55.582031 189.234375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 34.445312 196.15625 L 35.894531 195.242188 C 35.089844 194.066406 34.558594 192.949219 34.972656 191.546875 C 35.503906 189.703125 37.027344 190.671875 38.179688 190.445312 C 37.359375 189.300781 36.105469 188.949219 35.316406 189.5625 C 33.558594 190.902344 33.257812 192.328125 34.40625 193.722656 L 33.125 195.3125 C 32.671875 194.253906 32.28125 193.460938 32.003906 192.628906 C 31.972656 192.320312 32.085938 192.015625 32.304688 191.796875 C 33.570312 190.523438 34.859375 189.273438 36.171875 188.046875 C 36.691406 187.570312 38.101562 187.859375 38.765625 188.566406 C 39.011719 188.828125 39.214844 189.136719 39.457031 189.441406 C 38.921875 190.535156 38.15625 191.617188 39.207031 192.800781 C 40.28125 192.746094 40.011719 190.296875 42.144531 191.519531 C 40.355469 193.347656 38.785156 195.085938 37.058594 196.660156 C 36.15625 197.460938 35.308594 197.199219 34.445312 196.15625 Z M 34.445312 196.15625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 180.796875 68.953125 C 181.191406 68.507812 181.515625 68 181.757812 67.453125 C 181.816406 67.257812 181.171875 66.855469 180.742188 66.441406 C 181.378906 64.835938 182.46875 63.445312 183.882812 62.449219 C 184.082031 62.238281 184.371094 62.132812 184.660156 62.167969 C 184.949219 62.203125 185.203125 62.375 185.347656 62.628906 C 185.609375 62.941406 185.898438 63.234375 186.203125 63.503906 C 187.136719 64.261719 187.445312 65.550781 186.953125 66.644531 C 186.714844 67.410156 186.570312 68.203125 186.527344 69.007812 C 186.332031 69.953125 185.511719 70.640625 184.542969 70.664062 C 183.691406 70.714844 182.835938 70.644531 182.003906 70.445312 C 181.382812 70.242188 180.90625 69.589844 180.367188 69.140625 Z M 180.796875 68.953125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 79.25 165.707031 L 81.765625 168.546875 L 78.820312 170.886719 C 79.574219 170.886719 80.324219 170.742188 80.390625 170.886719 C 80.714844 171.496094 80.839844 172.191406 80.753906 172.878906 C 80.566406 173.472656 80.101562 173.941406 79.503906 174.128906 C 78.332031 174.242188 77.152344 174.195312 75.988281 173.996094 C 75.683594 173.949219 75.480469 173.246094 75.195312 172.929688 C 74.234375 171.761719 74.652344 170.75 75.308594 169.558594 C 76.148438 167.867188 77.539062 166.511719 79.25 165.707031 Z M 79.25 165.707031 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 141.023438 93.230469 L 141.976562 92.480469 L 141.8125 92.074219 L 140.242188 92.488281 C 138.945312 91.671875 138.007812 90.386719 137.628906 88.90625 C 137.59375 88.414062 137.769531 87.929688 138.109375 87.570312 C 138.410156 87.285156 138.835938 87.171875 139.242188 87.261719 C 140.84375 88.082031 142.246094 87.429688 143.6875 86.925781 L 143.6875 84.296875 L 147.371094 87.691406 C 145.515625 89.871094 143.960938 92.316406 141.277344 93.484375 Z M 139.785156 91.09375 L 140.332031 91.574219 L 142.066406 89.496094 L 141.59375 89.101562 Z M 139.785156 91.09375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 190.183594 64.097656 C 190.222656 64.097656 190.019531 64.097656 189.816406 64.097656 C 188.9375 64.042969 187.96875 64.171875 187.464844 63.203125 C 186.871094 62.074219 186.277344 60.910156 187.292969 59.710938 C 188.304688 58.511719 188.863281 56.714844 190.523438 55.964844 C 190.738281 55.867188 190.925781 55.640625 191.152344 55.613281 C 191.769531 55.539062 193.984375 58.09375 193.863281 58.730469 C 193.601562 60.078125 193.332031 61.4375 193.023438 62.785156 C 192.796875 63.894531 192.097656 64.222656 190.183594 64.097656 Z M 192.332031 57.105469 C 191.3125 57.15625 190.214844 59.585938 190.597656 61.113281 L 191.640625 60.617188 Z M 192.332031 57.105469 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 200.339844 64.398438 C 201.375 61.511719 203.71875 60.058594 206.117188 58.679688 C 206.359375 58.597656 206.621094 58.597656 206.867188 58.679688 C 207.007812 58.679688 207.121094 58.878906 207.25 58.984375 C 209.433594 60.671875 209.503906 60.777344 207.648438 62.734375 C 206.394531 64.058594 205.003906 65.25 203.6875 66.523438 C 203 67.183594 202.523438 66.980469 202.007812 66.269531 C 201.488281 65.558594 200.835938 64.953125 200.339844 64.398438 Z M 200.339844 64.398438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 143.199219 125.652344 C 142.140625 126.949219 141.269531 128.195312 140.195312 129.257812 C 139.101562 130.25 137.953125 131.183594 136.757812 132.054688 C 136.003906 131.183594 135.253906 130.390625 134.625 129.496094 C 134.425781 129.105469 134.425781 128.644531 134.625 128.253906 C 135.75 126.574219 136.875 124.902344 138.941406 124.132812 C 139.492188 123.859375 140.019531 123.546875 140.519531 123.1875 Z M 143.199219 125.652344 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 134.121094 129.699219 L 136.6875 132.449219 C 134.765625 134.25 132.820312 136.0625 130.867188 137.863281 C 130.710938 138.003906 130.320312 138.132812 130.230469 138.050781 C 129.359375 137.261719 128.511719 136.445312 127.691406 135.605469 C 127.613281 135.53125 127.691406 135.222656 127.808594 135.058594 C 127.929688 134.894531 128.179688 134.707031 128.269531 134.496094 C 129.34375 131.910156 131.6875 130.9375 134.121094 129.699219 Z M 134.121094 129.699219 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 123.621094 145.175781 C 121.472656 147.304688 119.433594 149.308594 117.300781 151.414062 L 114.554688 148.398438 C 115.640625 145.878906 117.722656 143.917969 120.308594 142.980469 C 120.628906 142.863281 120.984375 142.894531 121.28125 143.0625 C 122.035156 143.648438 122.71875 144.34375 123.621094 145.175781 Z M 123.621094 145.175781 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 16.671875 246.394531 C 17.734375 243.9375 19.152344 242.492188 22.683594 240.308594 C 23.101562 240.648438 23.578125 241.015625 24.027344 241.398438 C 24.476562 241.78125 24.859375 242.148438 25.46875 242.730469 C 24.273438 244.179688 23.089844 245.648438 21.863281 247.085938 C 21.558594 247.355469 21.234375 247.605469 20.894531 247.835938 C 19.46875 249.078125 19.476562 249.078125 18.09375 247.707031 C 17.613281 247.25 17.140625 246.816406 16.671875 246.394531 Z M 16.671875 246.394531 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 55.65625 214.65625 C 56.957031 215.832031 58.03125 216.769531 59.050781 217.757812 C 59.265625 218 59.359375 218.324219 59.316406 218.644531 C 58.910156 220.015625 58.828125 221.527344 57.511719 222.511719 C 56.859375 222.996094 56.378906 223.695312 55.746094 224.203125 C 55.421875 224.367188 55.042969 224.386719 54.703125 224.265625 C 56.910156 221.371094 57.085938 220.882812 56.207031 219.347656 C 55.769531 219.960938 55.289062 220.546875 54.777344 221.101562 C 54.257812 221.589844 53.691406 222.027344 53.082031 222.398438 C 52.8125 222.59375 52.476562 222.664062 52.152344 222.597656 C 51.828125 222.527344 51.546875 222.324219 51.382812 222.039062 C 50.957031 221.609375 50.492188 221.222656 49.992188 220.882812 C 51.261719 218.066406 54.140625 219.015625 55.867188 217.886719 L 53.921875 216.792969 Z M 55.65625 214.65625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 81.847656 160.039062 C 80.617188 162.738281 78.90625 165.054688 75.839844 166.214844 C 75.210938 165.464844 74.441406 164.714844 73.820312 163.808594 C 73.6875 163.433594 73.75 163.011719 73.992188 162.691406 C 75.246094 161.320312 76.570312 160.007812 77.875 158.691406 C 78.332031 158.234375 78.828125 157.8125 79.296875 157.394531 Z M 81.847656 160.039062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 193.339844 71.390625 L 196.027344 73.914062 C 194.246094 76.066406 192.566406 78.1875 190.230469 79.679688 C 190.160156 79.722656 190.050781 79.804688 190.019531 79.785156 C 189.089844 79.125 188.203125 78.40625 187.367188 77.632812 C 187.171875 77.429688 187.324219 76.621094 187.570312 76.292969 C 188.726562 74.792969 189.679688 73.007812 191.777344 72.46875 C 192.351562 72.191406 192.875 71.828125 193.339844 71.390625 Z M 193.339844 71.390625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 53.90625 193.011719 L 53.269531 194.117188 L 55.355469 195.0625 C 55.144531 196.066406 54.875 197.386719 54.605469 198.730469 C 54.253906 199.109375 52.5625 198.503906 53.808594 200.300781 C 52.222656 200.203125 50.804688 200.175781 49.453125 199.996094 C 48.972656 199.925781 48.234375 197.09375 48.484375 196.621094 C 48.730469 196.148438 48.917969 195.871094 49.113281 195.5 L 50.707031 195.664062 L 50.804688 195.371094 L 49.535156 194.433594 C 50.4375 193.492188 51.417969 192.636719 52.472656 191.871094 C 52.773438 191.675781 53.667969 192.433594 54.289062 192.753906 Z M 53.90625 193.011719 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 207.023438 57.554688 C 208.03125 55.402344 209.789062 53.6875 211.96875 52.734375 C 212.898438 52.316406 213.6875 52.140625 214.414062 53.09375 C 214.839844 53.550781 215.296875 53.972656 215.78125 54.359375 C 214.820312 55.550781 213.996094 56.738281 213.003906 57.761719 C 212.011719 58.789062 210.824219 59.71875 209.570312 60.820312 Z M 207.023438 57.554688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 23.058594 239.574219 C 23.953125 236.898438 26.0625 235.257812 28.617188 233.992188 C 28.90625 233.910156 29.21875 233.957031 29.472656 234.121094 C 31.808594 235.617188 31.914062 236.160156 30.066406 238.226562 C 28.894531 239.511719 27.652344 240.734375 26.347656 241.882812 C 25.964844 242.074219 25.507812 242.050781 25.144531 241.824219 C 24.410156 241.113281 23.710938 240.363281 23.058594 239.574219 Z M 23.058594 239.574219 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 92.484375 144.195312 L 95.195312 146.902344 C 94.734375 147.933594 94.15625 148.910156 93.476562 149.816406 C 92.332031 150.941406 91.105469 151.980469 89.804688 152.917969 C 89.53125 153.03125 89.21875 153 88.976562 152.828125 C 88.1875 152.019531 87.476562 151.152344 86.519531 150.0625 C 88.5625 148.0625 90.507812 146.152344 92.484375 144.195312 Z M 92.484375 144.195312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 201.992188 66.789062 L 201.179688 67.746094 L 202.238281 68.355469 C 200.355469 70.0625 198.613281 71.683594 196.816406 73.25 C 196.511719 73.363281 196.167969 73.316406 195.898438 73.128906 C 195.21875 72.542969 194.59375 71.898438 194.03125 71.203125 C 193.871094 70.871094 193.871094 70.484375 194.03125 70.152344 C 195.132812 67.710938 197.296875 66.40625 199.542969 65.222656 C 199.832031 65.125 200.148438 65.164062 200.398438 65.332031 C 200.941406 65.746094 201.449219 66.253906 201.992188 66.789062 Z M 201.992188 66.789062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 153.90625 109.671875 C 155.40625 107.46875 155.40625 107.46875 157.414062 106.617188 L 156.179688 106.203125 L 160.484375 103.804688 C 161.28125 104.613281 162.09375 105.453125 163.152344 106.546875 C 161.160156 108.390625 159.207031 110.21875 157.21875 111.988281 C 156.894531 112.140625 156.515625 112.121094 156.210938 111.929688 C 155.414062 111.246094 154.691406 110.460938 153.90625 109.671875 Z M 153.90625 109.671875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 149.824219 119.507812 L 143.695312 125.503906 C 142.660156 124.304688 141.835938 123.359375 140.976562 122.386719 C 141.953125 119.828125 144.140625 118.1875 146.769531 117.035156 C 147.019531 116.945312 147.296875 116.976562 147.519531 117.125 C 148.257812 117.820312 148.945312 118.578125 149.824219 119.507812 Z M 149.824219 119.507812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 126.738281 140.476562 L 127.976562 141.382812 C 126.5625 142.546875 125.300781 143.632812 124.011719 144.621094 C 123.828125 144.691406 123.621094 144.667969 123.460938 144.554688 C 122.710938 143.804688 121.960938 143.054688 121.207031 142.304688 C 121.097656 142.066406 121.113281 141.785156 121.253906 141.558594 C 122.320312 140.15625 123.070312 138.558594 124.796875 137.628906 C 127.710938 136.128906 127.660156 136.011719 129.757812 138.527344 C 129.789062 138.609375 129.816406 138.691406 129.839844 138.777344 C 129.484375 139.210938 129.183594 139.894531 128.660156 140.164062 C 128.132812 140.433594 127.472656 140.214844 126.863281 140.214844 Z M 126.738281 140.476562 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 7.726562 224.632812 L 9.15625 224.886719 C 8.402344 225.589844 7.847656 226.101562 7.277344 226.542969 C 6.984375 226.722656 6.667969 226.871094 6.339844 226.976562 L 6.902344 227.953125 C 5.902344 228.789062 4.875 229.699219 3.785156 230.535156 C 3.492188 230.703125 3.132812 230.703125 2.835938 230.535156 C 1.679688 229.546875 0.621094 228.441406 -0.324219 227.246094 C -1.171875 226.039062 -1.015625 225.933594 0.15625 224.601562 C 1.328125 225.351562 2.507812 226.183594 3.714844 226.941406 C 4.0625 227.097656 4.429688 227.207031 4.804688 227.269531 C 4.933594 226.828125 4.996094 226.367188 4.984375 225.90625 C 4.917969 225.5 4.496094 225.15625 4.371094 224.742188 C 4.242188 224.332031 3.90625 223.347656 4.128906 223.167969 C 4.699219 222.6875 5.414062 222.40625 6.15625 222.359375 C 6.910156 222.34375 7.796875 223.761719 7.726562 224.632812 Z M 7.726562 224.632812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 132.65625 104.757812 L 138.710938 98.910156 C 139.589844 99.878906 140.324219 100.632812 140.960938 101.453125 C 141.117188 101.707031 141.132812 102.019531 141.007812 102.292969 C 139.769531 104.292969 138.632812 106.359375 136.289062 107.378906 C 135.539062 107.695312 135.15625 107.777344 134.652344 107.101562 C 134.148438 106.429688 133.464844 105.679688 132.65625 104.757812 Z M 132.65625 104.757812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 211.375 68.757812 L 208.472656 64.679688 L 208.144531 64.914062 L 209.277344 63.292969 L 211.230469 63.070312 L 211.230469 62.636719 L 210.117188 62.253906 L 214.191406 59.046875 L 215.820312 61.511719 C 216.847656 61.59375 217.472656 62.582031 217.78125 63.84375 C 217.839844 64.105469 217.652344 64.425781 217.578125 64.726562 C 217.292969 64.679688 217.015625 64.59375 216.75 64.472656 C 216.066406 64.050781 215.460938 63.324219 214.746094 63.210938 C 214.003906 63.191406 213.28125 63.460938 212.734375 63.960938 C 212.566406 64.105469 213.085938 65.117188 213.378906 65.6875 C 213.515625 65.957031 214.015625 66.113281 214.039062 66.359375 C 214.089844 66.746094 213.957031 67.136719 213.6875 67.417969 C 213.085938 67.730469 212.453125 67.980469 211.800781 68.167969 Z M 211.375 68.757812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 211.449219 27.589844 C 212.050781 28.261719 212.386719 28.675781 212.753906 29.085938 C 213.988281 30.363281 214.003906 30.585938 213.039062 32.003906 C 212.734375 32.433594 212.484375 32.898438 212.289062 33.390625 C 211.613281 35.179688 209.726562 35.429688 208.445312 36.433594 C 208.324219 36.53125 207.933594 36.433594 207.796875 36.3125 C 207.085938 35.636719 206.421875 34.914062 205.808594 34.148438 C 205.695312 33.804688 205.757812 33.429688 205.980469 33.144531 C 207.699219 31.300781 209.503906 29.539062 211.449219 27.589844 Z M 211.449219 27.589844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 112.320312 124.746094 C 113.359375 125.816406 114.492188 126.484375 114.703125 127.367188 C 114.875 128.117188 113.847656 129.039062 113.53125 129.949219 C 112.847656 131.917969 111.066406 132.714844 109.460938 133.394531 C 108.117188 133.972656 107.839844 132.070312 106.972656 131.394531 C 106.746094 131.085938 106.695312 130.679688 106.839844 130.320312 C 108.589844 128.472656 110.40625 126.664062 112.320312 124.746094 Z M 112.320312 124.746094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 108.117188 134.28125 C 106.9375 136.878906 105.253906 139.0625 102.300781 140.164062 C 101.671875 139.457031 100.90625 138.664062 100.230469 137.824219 C 100.070312 137.539062 100.070312 137.191406 100.230469 136.902344 C 101.910156 135.042969 103.640625 133.222656 105.40625 131.332031 Z M 108.117188 134.28125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 52.929688 183.5 C 53.855469 184.421875 54.6875 185.253906 55.5 186.046875 C 54.511719 188.773438 52.441406 190.96875 49.777344 192.117188 L 47.273438 189.300781 C 48.617188 186.847656 50.730469 185.125 52.929688 183.5 Z M 52.929688 183.5 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 75.15625 166.792969 C 74.082031 169.429688 72.011719 171.542969 69.394531 172.675781 L 67 169.949219 C 68.285156 167.332031 70.445312 165.691406 72.773438 164.078125 Z M 75.15625 166.792969 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 132.136719 105.515625 C 132.496094 105.859375 132.796875 106.128906 133.082031 106.414062 C 134.886719 108.203125 134.722656 108.113281 133.464844 110.363281 C 132.460938 112.167969 130.792969 113 129.253906 114.074219 C 128.988281 114.195312 128.675781 114.167969 128.433594 114.003906 C 127.773438 113.339844 127.1875 112.613281 126.585938 111.890625 C 126.476562 111.773438 126.40625 111.625 126.382812 111.464844 C 126.339844 110.871094 128.261719 108.835938 128.898438 108.828125 C 129.539062 108.820312 129.957031 108.699219 129.652344 107.914062 C 129.644531 107.726562 129.710938 107.542969 129.832031 107.402344 C 129.996094 107.222656 130.179688 107.0625 130.378906 106.921875 Z M 132.136719 105.515625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 114.5 152.703125 L 116.003906 152.980469 C 114.289062 154.476562 112.773438 155.878906 111.226562 157.238281 C 111.039062 157.394531 110.601562 157.566406 110.472656 157.484375 C 109.589844 156.734375 108.71875 155.902344 107.914062 155.046875 C 107.816406 154.941406 108.035156 154.441406 108.199219 154.195312 C 108.789062 153.308594 109.40625 152.445312 110.046875 151.609375 C 110.203125 151.363281 110.445312 151.191406 110.730469 151.128906 C 111.613281 151.109375 112.425781 150.648438 112.894531 149.898438 C 113.644531 148.992188 114.449219 149.058594 115.199219 149.996094 C 115.5 150.378906 115.949219 150.664062 116.226562 151.046875 C 116.371094 151.300781 116.472656 151.570312 116.535156 151.855469 L 115.785156 151.96875 L 114.484375 152.230469 Z M 114.5 152.703125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 147.984375 95.230469 C 147.617188 95.722656 147.292969 96.246094 147.015625 96.796875 C 146.199219 98.878906 144.34375 99.894531 142.652344 101.070312 C 142.277344 101.179688 141.867188 101.097656 141.5625 100.851562 C 140.8125 100.15625 140.195312 99.351562 139.429688 98.5 C 140.667969 97.179688 141.234375 95.253906 143.304688 94.847656 C 143.425781 94.820312 143.535156 94.753906 143.613281 94.660156 C 143.96875 94.25 143.613281 93.335938 144.664062 93.378906 C 146.035156 93.3125 147.324219 94.03125 147.984375 95.230469 Z M 147.984375 95.230469 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 125.625 111.757812 C 126.511719 112.859375 127.222656 113.707031 127.878906 114.605469 C 128 114.769531 127.878906 115.21875 127.710938 115.453125 C 126.5625 117.242188 125.683594 119.289062 123.429688 120.0625 C 122.964844 120.21875 122.3125 120.652344 122.070312 120.488281 C 121.53125 120.113281 120.839844 119.597656 121.199219 118.691406 C 121.238281 118.59375 121.199219 118.457031 121.199219 118.324219 L 119.699219 118.179688 L 119.464844 117.746094 Z M 125.625 111.757812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 92.539062 156.890625 C 91.644531 156.320312 90.890625 155.878906 90.171875 155.394531 C 89.59375 154.988281 89.421875 154.589844 90.171875 154.125 C 90.902344 153.640625 91.605469 153.113281 92.273438 152.542969 C 93.09375 153.363281 93.949219 154.15625 94.722656 155.027344 C 94.890625 155.335938 94.929688 155.699219 94.835938 156.039062 C 94.625 157.230469 94.355469 158.421875 94.085938 159.605469 C 94.019531 160.132812 93.742188 160.609375 93.320312 160.929688 C 92.894531 161.253906 92.359375 161.386719 91.832031 161.304688 C 91.390625 161.226562 90.941406 161.199219 90.496094 161.214844 C 89.226562 161.402344 88.714844 160.789062 88.164062 159.71875 C 87.617188 158.644531 87.625 157.6875 88.453125 156.953125 C 89.402344 157.40625 90.394531 157.777344 91.410156 158.0625 C 91.695312 158.082031 92.148438 157.304688 92.539062 156.890625 Z M 92.539062 156.890625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 46.523438 187.464844 L 43.835938 185.800781 C 44.089844 187.359375 43.550781 187.890625 42.460938 187.988281 C 42.136719 188.042969 41.828125 188.15625 41.542969 188.316406 C 39.957031 189.015625 39.847656 188.96875 39.289062 187.285156 L 40.394531 187 L 40.4375 186.730469 L 38.457031 185.875 L 41.640625 183.328125 L 41.332031 182.890625 L 41.664062 184.023438 C 42.496094 183.402344 43.292969 182.765625 44.148438 182.203125 C 44.386719 182.003906 44.695312 181.917969 45 181.972656 C 45.304688 182.027344 45.566406 182.210938 45.71875 182.480469 C 46.554688 183.351562 47.441406 184.175781 48.378906 184.9375 Z M 46.523438 187.464844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 159.09375 70.347656 C 158.890625 70.070312 158.808594 69.933594 158.703125 69.808594 C 157.613281 68.464844 157.613281 68.457031 158.855469 67.238281 C 159.179688 66.820312 159.566406 66.457031 160.003906 66.15625 C 160.417969 65.941406 160.910156 65.921875 161.339844 66.105469 C 162.738281 67.167969 162.84375 67.175781 163.195312 65.5 C 163.234375 65.339844 163.285156 65.191406 163.660156 64.875 C 164.015625 65.625 164.75 66.457031 164.628906 67.125 C 164.480469 67.980469 163.640625 68.722656 163.128906 69.433594 C 164.546875 69.433594 163.675781 70.984375 164.246094 71.773438 C 163.390625 72.476562 162.601562 73.179688 161.753906 73.796875 C 161.472656 73.976562 161.121094 74.003906 160.816406 73.878906 C 160.535156 73.628906 160.382812 73.269531 160.402344 72.894531 C 160.621094 71.832031 160.320312 71.398438 159.199219 71.636719 C 158.882812 71.695312 158.5 71.40625 157.9375 71.195312 Z M 159.09375 70.347656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 95.691406 146.691406 L 93.054688 143.691406 L 99.011719 137.882812 C 99.761719 138.695312 100.949219 138.949219 100.28125 140.378906 L 101.671875 140.558594 C 100.546875 143.296875 98.40625 145.496094 95.691406 146.691406 Z M 95.691406 146.691406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 69.742188 193.40625 C 69.863281 194.027344 70.058594 194.628906 70.328125 195.199219 C 70.652344 195.589844 71.035156 195.933594 71.460938 196.21875 C 70.515625 197.296875 69.46875 198.578125 68.320312 199.753906 C 67.171875 200.933594 66.066406 201.855469 64.917969 202.894531 C 64.804688 202.992188 64.535156 203.121094 64.503906 203.082031 C 63.640625 202.132812 62.800781 201.164062 61.953125 200.199219 C 63.035156 198.765625 63.453125 196.800781 65.363281 196.046875 C 65.523438 196.011719 65.6875 196 65.851562 196.007812 L 63.6875 198.367188 L 64.007812 198.75 C 64.761719 197.53125 65.910156 197.320312 67.164062 197.253906 C 67.703125 197.152344 68.222656 196.976562 68.710938 196.726562 C 68.035156 194.945312 68.195312 194.382812 69.742188 193.40625 Z M 69.742188 193.40625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 7.417969 230.035156 L 9.671875 232.179688 L 7.585938 233.789062 L 8.660156 234.320312 C 8.230469 236.519531 6.316406 237.238281 4.828125 238.375 C 4.65625 238.503906 4.257812 238.625 4.167969 238.542969 C 3.320312 237.730469 2.492188 236.894531 1.71875 236.007812 C 1.636719 235.910156 1.90625 235.445312 2.078125 235.191406 C 3.40625 233.058594 5.238281 231.285156 7.417969 230.035156 Z M 7.417969 230.035156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 186.324219 86.050781 L 187.789062 85 C 188.277344 85.75 188.683594 86.425781 189.140625 87.0625 C 189.332031 87.273438 189.550781 87.464844 189.785156 87.632812 C 190.238281 87.992188 190.648438 88.410156 191.003906 88.867188 C 191.632812 89.871094 191.324219 90.695312 190.445312 91.492188 C 189.378906 92.457031 188.441406 93.566406 187.441406 94.652344 C 187.226562 94.355469 187.132812 94.285156 187.140625 94.234375 C 187.570312 92.136719 187.570312 92.148438 185.4375 92.546875 C 184.648438 92.699219 183.761719 93.230469 183.085938 92.21875 C 184.210938 90.269531 187.179688 89.28125 186.324219 86.050781 Z M 186.324219 86.050781 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 175.246094 76.921875 C 176.265625 74.988281 177.195312 73.210938 178.136719 71.441406 L 177.59375 71.113281 C 177.292969 71.496094 177.019531 71.90625 176.785156 72.332031 C 176.070312 73.878906 175.035156 74.5 173.382812 74.171875 C 174.464844 72.003906 175.476562 69.875 177.738281 68.699219 C 177.871094 68.609375 178.027344 68.5625 178.1875 68.554688 C 178.941406 68.640625 180.789062 71.222656 180.636719 71.972656 C 180.398438 73.164062 180.164062 74.363281 179.886719 75.554688 C 179.84375 76.03125 179.605469 76.46875 179.230469 76.761719 C 178.855469 77.054688 178.375 77.179688 177.902344 77.109375 C 177.078125 77.039062 176.234375 76.988281 175.246094 76.921875 Z M 175.246094 76.921875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 160.140625 86.746094 L 161.890625 86.363281 C 162.21875 85.21875 162.503906 84.117188 162.878906 82.976562 C 162.964844 82.730469 163.460938 82.355469 163.558594 82.414062 C 164.757812 83.097656 166.652344 82.113281 167.355469 84.019531 L 164.757812 87.082031 L 166.125 87.195312 C 166.113281 86.816406 166.148438 86.441406 166.238281 86.070312 C 166.3125 85.878906 166.644531 85.78125 166.855469 85.636719 C 166.9375 85.839844 167.109375 86.058594 167.078125 86.246094 C 166.980469 87.535156 166.523438 88.769531 165.757812 89.8125 C 165.757812 89.8125 165.71875 89.886719 165.691406 89.910156 C 164.992188 90.554688 161.347656 89.773438 160.980469 88.898438 C 160.71875 88.230469 160.46875 87.546875 160.140625 86.746094 Z M 160.140625 86.746094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M -5.441406 234.179688 L -4.28125 236.144531 L -3.96875 235.976562 C -4.246094 233.234375 -1.632812 233.316406 -0.210938 232.058594 C -1.707031 231.089844 -3.476562 230.636719 -5.25 230.761719 C -4.273438 227.921875 -2.058594 227.367188 0.0429688 229.359375 C 0.863281 230.109375 1.757812 230.859375 2.769531 231.734375 C 2.117188 232.34375 1.507812 232.898438 0.929688 233.488281 C 0.855469 233.566406 0.988281 233.8125 0.929688 233.960938 C 0.691406 234.871094 -2.285156 237.441406 -3.117188 237.171875 C -4.089844 236.730469 -4.96875 236.109375 -5.710938 235.339844 C -5.914062 235.167969 -5.777344 234.59375 -5.800781 234.222656 Z M -5.441406 234.179688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 160.53125 103.136719 C 161.964844 101.570312 162.503906 99.242188 164.910156 98.640625 C 164.984375 98.613281 165.050781 98.566406 165.113281 98.511719 C 167.214844 97.1875 167.265625 97.195312 168.941406 99.359375 C 168.535156 99.660156 168.132812 99.953125 167.742188 100.265625 C 167.484375 100.460938 167.035156 100.679688 167.035156 100.882812 C 167.148438 101.351562 167.339844 101.796875 167.597656 102.199219 C 166.929688 103.40625 165.300781 104.53125 163.699219 105.671875 C 163.535156 105.785156 163.007812 105.582031 162.777344 105.378906 C 162.054688 104.726562 161.386719 104 160.53125 103.136719 Z M 160.53125 103.136719 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 46.238281 181.761719 L 47.980469 180.875 C 47.332031 180.550781 46.65625 180.273438 45.96875 180.042969 C 45.089844 179.839844 44.8125 179.398438 45.417969 178.769531 C 46.6875 177.441406 48.011719 176.171875 49.398438 174.96875 C 49.625 174.773438 50.234375 175.023438 50.664062 175.066406 C 50.472656 175.410156 50.375 175.90625 50.089844 176.0625 C 49.363281 176.4375 48.613281 176.757812 47.839844 177.023438 C 47.085938 177.324219 46.621094 177.855469 46.996094 178.621094 C 47.371094 179.382812 48.054688 179.917969 48.898438 179.414062 C 49.8125 178.828125 50.675781 178.164062 51.480469 177.433594 C 51.742188 177.226562 51.894531 176.878906 52.292969 176.511719 C 51.894531 178.351562 53.292969 178.46875 54.546875 178.898438 C 54.027344 179.550781 53.636719 180.042969 53.253906 180.546875 C 53.035156 180.894531 52.785156 181.226562 52.503906 181.527344 C 52.050781 181.910156 51.511719 182.195312 51 182.539062 C 50.65625 182.777344 50.167969 182.964844 50.015625 183.289062 C 49.519531 184.347656 49.078125 184.488281 48.242188 183.695312 Z M 46.238281 181.761719 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 45.847656 206.574219 L 47.53125 205.078125 C 46.703125 204.183594 44.886719 204.539062 42.503906 206.007812 C 42.332031 205.5625 42.1875 205.109375 42.070312 204.648438 C 41.996094 204.265625 42.820312 203.539062 41.402344 203.796875 C 42.761719 202.160156 43.144531 200.109375 45.019531 199.207031 C 45.554688 198.953125 46.34375 198.457031 46.628906 198.617188 C 47.460938 199.15625 48.460938 199.890625 48.710938 200.746094 C 48.957031 201.597656 48.535156 202.859375 48.28125 203.90625 C 48.113281 204.742188 47.804688 205.542969 47.371094 206.277344 C 47.125 206.652344 46.417969 206.726562 45.921875 206.941406 Z M 45.847656 206.574219 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 93.753906 172.921875 C 94.84375 173.628906 94.59375 174.160156 93.949219 174.699219 C 93.445312 175.121094 92.996094 175.589844 92.484375 175.988281 C 91.972656 176.386719 91.417969 176.738281 90.898438 177.066406 C 89.488281 176.542969 89.519531 175.464844 89.976562 174.03125 L 88.242188 174.59375 C 89.121094 172.902344 89.804688 171.109375 91.574219 170.144531 C 92.109375 169.851562 92.648438 169.558594 93.199219 169.304688 C 93.746094 169.046875 94.332031 168.628906 94.558594 168.785156 C 95.375 169.433594 96.132812 170.160156 96.8125 170.953125 C 96.703125 171.207031 96.546875 171.441406 96.351562 171.640625 C 94.941406 170.886719 94.789062 172.488281 93.753906 172.921875 Z M 93.753906 172.921875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 8.492188 246.761719 C 7.742188 245.113281 5.773438 245.175781 4.542969 246.867188 L 2.832031 243.726562 C 3.800781 243.292969 5.300781 243.992188 5.414062 242.425781 C 5.414062 241.980469 4.910156 241.503906 4.664062 241.046875 L 4.167969 240.933594 C 5.039062 240.085938 5.894531 239.222656 6.773438 238.390625 C 6.921875 238.25 7.109375 238.160156 7.316406 238.136719 C 8.195312 238.097656 10.25 240.519531 10.109375 241.414062 C 9.921875 242.613281 9.769531 243.824219 9.484375 244.996094 C 9.226562 245.621094 8.894531 246.214844 8.492188 246.761719 Z M 6.683594 245.445312 C 7.035156 245.03125 7.335938 244.570312 7.570312 244.082031 C 7.570312 243.9375 6.984375 243.40625 6.863281 243.457031 C 6.453125 243.699219 6.078125 243.992188 5.746094 244.335938 Z M 6.683594 245.445312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 53.628906 182.875 C 54.574219 181.820312 55.257812 180.703125 56.792969 180.457031 C 57.242188 180.410156 57.652344 180.183594 57.933594 179.832031 C 58.21875 179.480469 58.347656 179.03125 58.292969 178.582031 C 58.292969 177.832031 60.132812 177.390625 60.808594 177.945312 L 62.3125 179.1875 C 61.484375 180.644531 60.996094 182 60.058594 182.9375 C 58.953125 183.949219 57.734375 184.828125 56.421875 185.558594 C 56.289062 185.648438 55.828125 185.425781 55.671875 185.230469 C 55.035156 184.496094 54.386719 183.714844 53.628906 182.875 Z M 53.628906 182.875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 204.457031 34.238281 L 207.234375 36.980469 C 206.230469 39.730469 204.105469 41.929688 201.382812 43.027344 C 200.722656 42.277344 199.972656 41.53125 199.28125 40.652344 C 199.128906 40.402344 199.113281 40.09375 199.234375 39.828125 C 200.949219 37.945312 202.699219 36.109375 204.457031 34.238281 Z M 205.207031 38.417969 L 205.371094 38.113281 C 205.046875 37.617188 204.679688 37.15625 204.273438 36.726562 C 203.984375 36.472656 203.609375 36.34375 203.222656 36.367188 C 203.042969 36.367188 202.773438 36.949219 202.816406 37.210938 C 202.875 37.628906 203.105469 38 203.449219 38.238281 C 204.023438 38.378906 204.617188 38.441406 205.207031 38.417969 Z M 205.207031 38.417969 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 182.785156 56.886719 L 182.140625 55.957031 C 182.6875 55.867188 183.152344 55.640625 183.523438 55.753906 C 185.023438 56.195312 185.160156 56.152344 186.015625 54.257812 C 186.195312 54.65625 186.417969 55.035156 186.675781 55.386719 C 186.957031 55.652344 187.269531 55.882812 187.609375 56.070312 C 186.179688 58.984375 184.601562 61.316406 181.523438 62.460938 L 179.171875 59.503906 C 180.214844 58.527344 180.417969 56.316406 182.785156 56.886719 Z M 182.785156 56.886719 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 158.214844 87.929688 C 159.074219 88.726562 159.898438 89.488281 160.710938 90.269531 C 160.832031 90.378906 160.902344 90.53125 160.90625 90.695312 C 160.613281 92.363281 160.226562 94.011719 159.75 95.636719 C 159.5 96.386719 158.6875 96.863281 157.421875 96.386719 L 159.246094 95.140625 C 159.078125 94.269531 158.90625 93.34375 158.675781 92.144531 L 156.925781 95.523438 L 156.625 95.46875 L 156.421875 92.96875 L 156.128906 92.921875 L 154.941406 95.785156 C 153.582031 94.660156 153.4375 93.410156 154.347656 92.121094 C 154.796875 91.5 155.097656 90.75 155.578125 90.164062 C 156.121094 89.609375 156.714844 89.105469 157.351562 88.664062 C 157.40625 88.664062 157.699219 88.90625 157.960938 89.09375 Z M 158.214844 87.929688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 89.105469 161.6875 C 90.148438 161.75 91.320312 161.761719 92.484375 161.898438 C 92.824219 162.003906 93.101562 162.253906 93.234375 162.582031 C 93.722656 163.757812 94.191406 164.703125 93.492188 166.246094 C 92.84375 167.667969 91.839844 168.285156 90.832031 169.109375 C 90.308594 169.542969 89.910156 169.363281 89.390625 168.867188 C 87.761719 167.300781 88.160156 165.5625 88.699219 163.75 C 88.871094 163.15625 88.941406 162.542969 89.105469 161.6875 Z M 89.105469 161.6875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 220.933594 32.378906 C 222.097656 32.378906 223.382812 32.378906 224.691406 32.378906 C 224.878906 32.378906 225.097656 32.714844 225.210938 32.941406 C 225.386719 33.433594 225.59375 33.921875 225.824219 34.394531 C 226.230469 35.03125 225.921875 35.527344 225.824219 36.15625 C 225.496094 37.933594 224.226562 38.71875 222.878906 39.535156 C 222.316406 39.878906 222 39.78125 221.535156 39.320312 C 220.183594 38.136719 219.816406 36.179688 220.648438 34.589844 C 220.835938 33.867188 220.933594 33.125 220.933594 32.378906 Z M 220.933594 32.378906 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 207.851562 45.121094 C 208.941406 45.195312 210.148438 45.195312 211.335938 45.375 C 212.199219 45.5 213.054688 48.148438 212.636719 48.925781 C 212.4375 49.414062 212.269531 49.917969 212.132812 50.425781 C 212.046875 50.683594 211.90625 50.921875 211.71875 51.117188 C 211.476562 51.335938 211.203125 51.515625 210.90625 51.65625 C 210.15625 52.039062 209.53125 53.222656 208.519531 52.597656 C 207.320312 51.726562 206.773438 50.21875 207.128906 48.785156 C 207.398438 47.644531 207.585938 46.46875 207.851562 45.121094 Z M 207.851562 45.121094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 121.964844 129.4375 C 123.085938 129.4375 124.21875 129.386719 125.347656 129.4375 C 126.046875 129.484375 127.269531 131.917969 127.007812 132.675781 C 126.414062 134.375 125.566406 135.867188 123.792969 136.65625 C 123.566406 136.816406 123.28125 136.875 123.007812 136.820312 C 122.738281 136.769531 122.5 136.605469 122.351562 136.371094 C 121.207031 135.074219 120.765625 133.746094 121.464844 132.0625 C 121.722656 131.207031 121.890625 130.328125 121.964844 129.4375 Z M 121.964844 129.4375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 181.464844 71.03125 C 182.539062 71.082031 183.71875 71.121094 184.867188 71.222656 C 185.121094 71.292969 185.332031 71.46875 185.445312 71.703125 C 186.089844 72.925781 186.699219 73.90625 185.863281 75.570312 C 185.269531 76.804688 184.285156 77.8125 183.0625 78.433594 C 182.652344 78.542969 182.214844 78.453125 181.882812 78.1875 C 180.625 77.148438 180.207031 75.402344 180.855469 73.90625 C 181.128906 72.964844 181.332031 72.003906 181.464844 71.03125 Z M 181.464844 71.03125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 59.902344 172.585938 C 58.464844 174.378906 56.898438 175.824219 54.90625 176.5 C 54.484375 175.625 54.117188 174.726562 53.808594 173.808594 C 53.628906 172.929688 53.515625 172.042969 53.472656 171.148438 L 52.847656 171.238281 C 53.832031 170.167969 54.914062 169.195312 56.078125 168.328125 C 56.574219 168.023438 57.578125 168.5 58.503906 168.652344 C 57.316406 170.691406 58.96875 171.445312 59.902344 172.585938 Z M 59.902344 172.585938 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 108.753906 142.402344 C 109.941406 142.402344 111.1875 142.402344 112.441406 142.402344 C 112.613281 142.402344 112.824219 142.75 112.9375 142.980469 C 113.230469 143.566406 113.492188 144.164062 113.726562 144.773438 C 113.835938 145.027344 113.871094 145.308594 113.824219 145.582031 C 113.195312 147.769531 112.554688 148.480469 110.453125 149.675781 C 109.851562 150.011719 109.566406 149.875 109.136719 149.375 C 107.839844 147.875 107.769531 146.285156 108.386719 144.511719 C 108.570312 143.820312 108.695312 143.117188 108.753906 142.402344 Z M 108.753906 142.402344 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 214.378906 38.660156 C 215.414062 38.710938 216.542969 38.734375 217.660156 38.847656 C 218.457031 38.929688 219.703125 41.148438 219.402344 41.941406 C 218.839844 43.441406 218.277344 44.941406 216.660156 45.816406 C 215.835938 46.25 215.40625 46.386719 214.65625 45.539062 C 213.410156 44.136719 213.453125 42.773438 213.988281 41.183594 C 214.183594 40.355469 214.316406 39.511719 214.378906 38.660156 Z M 214.378906 38.660156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 188.003906 64.613281 C 188.574219 64.652344 189.144531 64.652344 189.710938 64.613281 C 191.550781 64.375 192.398438 65.421875 192.925781 66.953125 C 193.007812 67.136719 193.058594 67.335938 193.074219 67.535156 C 193.074219 68.945312 190.753906 71.824219 189.320312 72.160156 C 189.085938 72.183594 188.855469 72.105469 188.683594 71.953125 C 187.328125 70.847656 186.828125 69.003906 187.441406 67.371094 C 187.699219 66.554688 187.796875 65.679688 188.003906 64.613281 Z M 188.003906 64.613281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 115.445312 135.769531 C 116.460938 135.824219 117.632812 135.875 118.804688 135.949219 C 119.003906 135.972656 119.191406 136.054688 119.335938 136.191406 C 120 136.78125 120.089844 138.984375 120.015625 139.863281 C 119.8125 141.511719 118.511719 142.113281 117.488281 142.980469 C 116.859375 143.519531 116.4375 143.484375 115.761719 142.859375 C 114.328125 141.542969 114.402344 140.074219 114.875 138.433594 C 115.070312 137.636719 115.230469 136.8125 115.445312 135.769531 Z M 115.445312 135.769531 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 178.316406 60.265625 C 178.410156 60.289062 178.503906 60.320312 178.59375 60.355469 C 181.34375 62.605469 181.199219 62.53125 179.398438 65.527344 C 178.453125 67.101562 176.902344 67.65625 175.640625 68.644531 C 174.972656 69.164062 174.554688 68.730469 174.574219 67.980469 C 174.613281 66.726562 174.710938 65.476562 174.785156 64.082031 L 173.855469 64.777344 C 174.761719 62.695312 176.828125 61.773438 178.316406 60.265625 Z M 178.316406 60.265625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 102.257812 148.691406 C 103.308594 148.765625 104.707031 148.542969 105.726562 149.058594 C 106.476562 149.457031 107.433594 151.046875 107.183594 151.660156 C 106.742188 152.777344 106.945312 154.402344 105.441406 155.003906 C 105.40625 155.019531 105.375 155.042969 105.34375 155.070312 C 103.089844 156.6875 103.089844 156.703125 101.632812 154.382812 C 101.398438 153.886719 101.328125 153.328125 101.429688 152.792969 C 101.617188 151.53125 101.925781 150.289062 102.257812 148.691406 Z M 102.257812 148.691406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 127.757812 128.164062 L 128.417969 127.414062 C 126.976562 125.914062 129.328125 124.417969 128 122.773438 C 129.628906 122.871094 131.078125 122.609375 132.144531 123.132812 C 132.894531 123.507812 133.765625 125.074219 133.554688 125.816406 C 133.25 126.917969 133.136719 128.304688 131.875 129.121094 C 129.46875 130.667969 129.523438 130.734375 127.757812 128.164062 Z M 127.757812 128.164062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 17.140625 233.671875 C 18.183594 233.671875 19.355469 233.671875 20.527344 233.671875 C 20.726562 233.667969 20.917969 233.753906 21.050781 233.902344 C 21.320312 234.535156 21.632812 235.148438 21.984375 235.738281 C 22.554688 236.488281 21.820312 237.019531 21.8125 237.621094 C 21.8125 239.296875 20.429688 239.867188 19.460938 240.746094 C 18.769531 241.382812 18.332031 241.171875 17.726562 240.609375 C 16.617188 239.636719 16.1875 238.105469 16.621094 236.699219 C 16.832031 235.785156 16.945312 234.839844 17.140625 233.671875 Z M 17.140625 233.671875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 36.375 203.503906 L 34.558594 203.203125 L 34.496094 202.835938 L 35.25 202.363281 C 34.40625 200.578125 35.878906 199.957031 36.683594 199.132812 C 37.652344 198.230469 38.671875 197.378906 39.734375 196.585938 L 42.445312 199.1875 C 41.78125 200.460938 41.007812 201.675781 40.140625 202.820312 C 39.253906 203.695312 38.242188 204.433594 37.132812 205.007812 C 36.503906 205.363281 36.203125 204.851562 36.375 203.503906 Z M 36.742188 201.945312 C 37.863281 200.933594 39.566406 201.050781 39.75 198.945312 C 38.605469 199.941406 36.953125 199.816406 36.742188 201.945312 Z M 36.742188 201.945312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 202.113281 51.199219 C 203.320312 50.066406 202.773438 46.304688 201.511719 45.585938 C 201.742188 44.03125 203.097656 43.539062 204.171875 42.789062 C 204.269531 42.71875 204.386719 42.679688 204.507812 42.675781 C 205.152344 42.675781 207.191406 45.089844 207.078125 45.765625 C 206.828125 47.152344 206.589844 48.539062 206.226562 49.894531 C 206.171875 50.304688 205.953125 50.675781 205.621094 50.921875 C 205.285156 51.171875 204.867188 51.273438 204.457031 51.207031 C 203.78125 51.136719 203.089844 51.199219 202.113281 51.199219 Z M 202.113281 51.199219 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 218.988281 23.128906 L 220.816406 23.78125 C 219.261719 25.683594 218.75 27.882812 216.585938 29.027344 C 215.015625 29.84375 213.582031 29.84375 212.761719 27.957031 L 215.242188 27.5 L 213.738281 25.019531 L 218.074219 21.269531 L 218.9375 23.40625 Z M 218.988281 23.128906 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 135.1875 116.34375 C 136.296875 116.398438 137.515625 116.425781 138.71875 116.53125 C 138.941406 116.53125 139.21875 116.867188 139.339844 117.109375 C 139.652344 117.6875 139.902344 118.292969 140.089844 118.921875 C 140.160156 119.320312 140.136719 119.726562 140.023438 120.113281 C 139.910156 120.617188 139.707031 121.097656 139.550781 121.613281 C 139.339844 122.296875 139.113281 122.8125 138.222656 122.273438 C 137.957031 122.121094 137.46875 122.40625 137.042969 122.488281 L 137.492188 123.238281 C 136.417969 124.25 136.410156 124.109375 135.398438 123.097656 C 134.105469 121.808594 134.246094 120.480469 134.707031 118.980469 C 134.910156 118.1875 135 117.347656 135.1875 116.34375 Z M 135.1875 116.34375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 154.535156 112.613281 L 153.035156 110.886719 C 153.875 110.078125 154.746094 110.609375 156.261719 112.84375 C 155.683594 113.457031 155.460938 114.246094 154.25 114.457031 C 153.453125 114.597656 152.914062 116.089844 152.191406 116.914062 C 151.613281 117.570312 150.96875 118.167969 150.277344 118.703125 C 150.214844 118.75 149.332031 118.074219 149.375 117.867188 C 149.652344 116.660156 149.113281 116.507812 148.128906 116.597656 C 147.976562 116.597656 147.574219 115.925781 147.640625 115.847656 C 148.601562 114.574219 149.601562 113.316406 150.683594 112.140625 C 150.855469 111.953125 151.539062 112.078125 151.90625 112.238281 C 152.6875 112.566406 153.417969 113.292969 154.535156 112.613281 Z M 154.535156 112.613281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 95.640625 155.316406 C 96.390625 155.316406 97.308594 155.316406 98.199219 155.316406 C 99.441406 155.316406 101.019531 157.238281 100.628906 158.421875 C 100.046875 160.175781 99.402344 161.980469 97.164062 162.503906 L 96.871094 161.472656 L 95.859375 161.875 C 94.152344 160.640625 94.886719 159.101562 95.1875 157.625 Z M 95.640625 155.316406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 22.960938 226.667969 C 22.601562 228.65625 22.375 230.214844 22.023438 231.742188 C 21.804688 232.707031 20.875 233.335938 19.894531 233.183594 C 19.40625 233.183594 18.917969 233.109375 18.339844 233.054688 C 18.558594 232.117188 17.90625 231.910156 17.207031 231.886719 C 16.835938 231.925781 16.46875 231.804688 16.195312 231.550781 C 15.917969 231.300781 15.765625 230.945312 15.773438 230.574219 C 15.839844 229.976562 16.15625 229.429688 16.644531 229.074219 C 17.765625 228.285156 18.96875 227.609375 20.226562 227.058594 C 21.117188 226.816406 22.035156 226.6875 22.960938 226.667969 Z M 22.960938 226.667969 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 108.835938 156.457031 C 107.824219 157.085938 107.070312 157.484375 106.410156 157.992188 C 106.132812 158.210938 106.050781 158.683594 105.886719 159.035156 C 106.34375 159.175781 106.882812 159.558594 107.238281 159.425781 C 108.042969 159.058594 108.820312 158.625 109.558594 158.136719 C 109.800781 158.046875 110.054688 157.988281 110.308594 157.957031 C 108.675781 160.167969 106.726562 162.132812 104.527344 163.785156 C 104.175781 163.933594 103.773438 163.890625 103.457031 163.675781 C 102.707031 163.023438 102 162.257812 101.332031 161.582031 C 102.355469 158.644531 104.625 157.085938 107.214844 155.886719 C 107.558594 155.722656 108.214844 156.226562 108.835938 156.457031 Z M 108.835938 156.457031 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 173.953125 61.863281 C 172.78125 62.988281 171.789062 63.933594 170.8125 64.859375 C 170.457031 65.152344 170.152344 65.496094 169.902344 65.878906 C 169.476562 66.628906 168.980469 66.96875 168.109375 66.246094 C 167.964844 66.75 167.851562 67.148438 167.695312 67.6875 C 166.125 66.242188 164.503906 65.027344 163.941406 62.933594 C 163.738281 62.1875 163.757812 62.125 165.335938 60.890625 C 166.898438 61.871094 167.746094 63.828125 169.902344 64.457031 C 168.527344 61.457031 171.5625 61.960938 172.449219 60.648438 Z M 173.953125 61.863281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 24.125 233.773438 L 25.144531 233.535156 L 25.242188 233.167969 C 24.769531 232.996094 24.265625 232.628906 23.839844 232.703125 C 22.816406 232.875 22.675781 232.402344 22.804688 231.617188 C 22.960938 230.574219 23.179688 229.539062 23.328125 228.5 C 23.359375 227.960938 23.359375 227.417969 23.328125 226.878906 C 24.671875 227.058594 26.136719 227 27.347656 227.515625 C 28 227.792969 28.453125 229.015625 28.570312 229.90625 C 28.78125 231.40625 26.492188 234.230469 25.046875 234.488281 C 24.734375 234.546875 24.34375 234.210938 23.988281 234.058594 Z M 24.125 233.773438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 154.820312 96.96875 C 156.105469 97.035156 157.414062 97.007812 158.683594 97.1875 C 159.433594 97.292969 160.230469 99.914062 159.777344 100.523438 C 158.847656 101.789062 157.894531 103.039062 156.878906 104.230469 C 156.390625 104.800781 155.828125 104.726562 155.375 104.023438 C 155.011719 103.589844 154.683594 103.125 154.402344 102.636719 C 154.199219 102.109375 153.972656 101.203125 154.234375 100.964844 C 155.503906 99.773438 154.640625 98.394531 154.820312 96.96875 Z M 154.820312 96.96875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 198.445312 58.226562 C 198.859375 59.097656 199.273438 59.882812 199.601562 60.710938 C 199.679688 61.007812 199.667969 61.320312 199.566406 61.609375 C 199.4375 62.238281 199.230469 62.851562 198.949219 63.429688 C 198.652344 63.839844 198.277344 64.1875 197.84375 64.457031 C 195.59375 66.21875 194.839844 66.179688 193.949219 63.503906 C 193.542969 62.304688 194.292969 60.695312 194.644531 59.308594 C 194.691406 59.121094 195.464844 59.144531 195.886719 59.015625 C 196.734375 58.789062 197.582031 58.503906 198.445312 58.226562 Z M 198.445312 58.226562 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 79.972656 156.644531 L 84.847656 151.601562 C 85.753906 152.941406 86.835938 153.984375 87.097656 155.207031 C 87.273438 155.917969 86.296875 157.054688 85.597656 157.785156 C 84.902344 158.417969 84.101562 158.925781 83.230469 159.28125 C 82.867188 159.421875 82.453125 159.378906 82.125 159.164062 C 81.421875 158.414062 80.773438 157.582031 79.972656 156.644531 Z M 79.972656 156.644531 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 149.367188 109.492188 C 149.226562 109.394531 149.066406 109.320312 148.902344 109.269531 C 147.476562 109.050781 147.28125 108.757812 147.609375 107.289062 C 147.878906 106.074219 148.144531 104.871094 148.457031 103.421875 C 149.511719 103.476562 150.796875 103.421875 152.058594 103.640625 C 152.335938 103.683594 152.558594 104.390625 152.726562 104.808594 C 153.597656 106.992188 153.476562 107.359375 151.71875 108.992188 C 151.230469 109.457031 150.921875 110.125 150.410156 110.542969 C 150.105469 110.796875 149.546875 110.761719 149.105469 110.859375 C 149.179688 110.460938 149.253906 110.070312 149.367188 109.492188 Z M 149.367188 109.492188 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 152.523438 85.34375 L 158.214844 79.617188 L 161.019531 82.324219 C 160.042969 84.773438 158.15625 86.402344 156.179688 87.953125 C 155.429688 88.53125 154.957031 88.507812 154.453125 87.59375 C 153.878906 86.789062 153.230469 86.035156 152.523438 85.34375 Z M 159.566406 83.808594 C 157.546875 82.519531 156.644531 82.390625 155.496094 83.195312 C 157.554688 85.9375 157.824219 85.980469 159.566406 83.808594 Z M 159.566406 83.808594 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 201.308594 51.625 C 202.441406 51.691406 203.613281 51.714844 204.769531 51.859375 C 205.035156 51.859375 205.296875 52.300781 205.453125 52.605469 C 205.695312 53.027344 205.863281 53.488281 205.957031 53.964844 C 206.023438 54.4375 206.007812 54.917969 205.914062 55.386719 C 205.84375 55.734375 205.453125 56.085938 205.515625 56.378906 C 205.671875 57.230469 205.140625 57.539062 204.574219 57.875 C 204.414062 58.003906 204.242188 58.117188 204.066406 58.222656 C 203.375 58.527344 202.5625 59.226562 202.007812 59.039062 C 200.820312 58.601562 200.175781 56.789062 200.4375 55.582031 C 200.699219 54.375 201.007812 53.050781 201.308594 51.625 Z M 204.921875 53.070312 L 204.664062 53.117188 C 204.492188 53.859375 204.367188 54.609375 204.28125 55.363281 C 204.28125 55.71875 204.554688 56.113281 204.703125 56.445312 C 204.875 56.144531 205.191406 55.835938 205.191406 55.539062 C 205.207031 54.714844 205.019531 53.886719 204.921875 53.070312 Z M 204.921875 53.070312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 213.71875 51.84375 L 220.214844 45.847656 L 222.46875 48.378906 C 220.523438 50.179688 218.578125 52.007812 216.59375 53.785156 C 216.292969 53.910156 215.945312 53.882812 215.667969 53.707031 C 214.972656 53.132812 214.386719 52.464844 213.71875 51.84375 Z M 213.71875 51.84375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 187.878906 50.359375 L 191.421875 47.398438 L 192.316406 48.148438 L 190.371094 49.25 L 190.851562 49.699219 L 193.941406 49.699219 L 194.140625 50.035156 L 192.265625 52.464844 C 192.4375 53.582031 192.121094 53.828125 189.816406 53.820312 L 190.183594 54.714844 L 188.207031 56.152344 L 186.269531 54.015625 C 186.835938 52.785156 189.644531 52.464844 187.878906 50.359375 Z M 187.878906 50.359375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 119.269531 118.675781 C 118.855469 120.414062 117.769531 122.25 119.894531 123.546875 C 119.382812 125.398438 117.84375 126.09375 116.304688 126.542969 C 114.589844 127.054688 114.117188 125.292969 112.796875 124.296875 L 118.722656 118.421875 Z M 119.269531 118.675781 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 102.789062 177.472656 L 100.988281 179.085938 C 98.988281 178.574219 97.683594 176.933594 96.277344 175.433594 C 96.117188 175.21875 96.070312 174.9375 96.15625 174.683594 C 96.890625 173.214844 98.03125 171.988281 99.449219 171.15625 C 100.582031 173.3125 101.679688 175.382812 102.789062 177.472656 Z M 102.789062 177.472656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M -1.835938 244.988281 L -1.546875 240.101562 C -2.179688 240.484375 -2.691406 240.804688 -3.207031 241.128906 L -3.523438 240.761719 L 0.984375 236.441406 C 1.394531 236.824219 1.785156 237.050781 1.960938 237.378906 C 2.402344 238.203125 4.144531 238.339844 3.265625 239.839844 C 2.746094 240.683594 2.09375 241.449219 1.515625 242.257812 C 1.203125 242.820312 0.835938 243.351562 0.417969 243.839844 C -0.175781 244.304688 -0.804688 244.722656 -1.464844 245.085938 Z M -1.835938 244.988281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 153.0625 97.734375 L 154.152344 97.335938 C 154.363281 98.625 153.859375 99.292969 152.742188 99.847656 C 151.546875 100.53125 150.402344 101.292969 149.316406 102.132812 C 149.007812 102.34375 148.675781 102.523438 148.355469 102.71875 C 148.160156 102.296875 148 101.859375 147.875 101.414062 C 147.875 101.105469 147.925781 100.800781 148.023438 100.507812 C 146.851562 100.613281 146.867188 100.058594 147.273438 99.316406 C 147.910156 98.234375 148.527344 97.132812 149.226562 96.09375 C 150.082031 94.824219 152.058594 95.214844 152.746094 96.761719 C 152.875 97.078125 152.980469 97.402344 153.0625 97.734375 Z M 153.0625 97.734375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 31.34375 229.945312 L 33.199219 231.632812 C 33.714844 229.921875 33.671875 228.019531 35.863281 227.007812 C 36.082031 227.714844 36.207031 228.449219 36.234375 229.1875 C 36.050781 230.941406 36.082031 232.824219 34.347656 233.976562 C 33.6875 234.417969 32.628906 234.375 32.53125 235.476562 C 32.207031 235.417969 31.777344 235.476562 31.589844 235.28125 C 30.925781 234.742188 30.316406 234.140625 29.765625 233.484375 C 29.566406 233.175781 29.53125 232.789062 29.667969 232.449219 C 30.105469 231.59375 30.703125 230.84375 31.34375 229.945312 Z M 31.34375 229.945312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 60.125 194.304688 C 60.507812 195.410156 61.320312 196.511719 61.125 197.410156 C 60.703125 199.359375 59.675781 201.113281 57.371094 201.613281 C 54.761719 199.539062 55.046875 199.320312 55.730469 196.824219 C 55.898438 195.996094 56.003906 195.152344 56.046875 194.304688 Z M 56.988281 196.03125 L 56.402344 196.03125 C 57.308594 197.125 55.402344 198.421875 56.648438 199.492188 L 57.210938 199.492188 Z M 58.925781 197.296875 C 59.339844 196.988281 59.710938 196.625 60.027344 196.21875 C 60.109375 195.921875 60.027344 195.609375 59.820312 195.386719 C 59.429688 195.253906 59.019531 195.1875 58.609375 195.199219 C 58.738281 195.902344 58.78125 196.367188 58.925781 197.296875 Z M 58.925781 197.296875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 5.609375 254.875 L 5.828125 251.34375 L 4.46875 253.105469 L 4.105469 253.140625 C 3.996094 252.597656 3.945312 252.046875 3.949219 251.492188 C 4.101562 250.097656 4.347656 248.71875 4.574219 247.222656 C 5.511719 247.222656 6.683594 247.222656 7.855469 247.222656 C 8.101562 247.222656 8.546875 247.527344 8.539062 247.671875 C 8.503906 247.988281 8.332031 248.277344 8.074219 248.464844 C 7.464844 248.839844 6.878906 249.160156 7.015625 250.167969 L 9.265625 249.15625 C 9.425781 249.507812 9.742188 249.902344 9.703125 250.179688 C 9.492188 252.355469 8.335938 253.667969 5.609375 254.875 Z M 5.609375 254.875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 167.566406 82.625 L 168.777344 80.824219 L 166.523438 80.824219 C 166.867188 80.214844 167.277344 79.652344 167.753906 79.140625 C 168.761719 78.300781 169.851562 77.566406 170.917969 76.800781 C 171.316406 76.515625 171.730469 76.261719 171.902344 76.140625 C 172.449219 77.550781 172.90625 78.800781 173.402344 80.03125 C 173.675781 80.9375 173.320312 81.914062 172.523438 82.429688 C 172.398438 82.503906 172.335938 82.691406 172.238281 82.8125 C 171.445312 83.785156 170.820312 83.867188 169.917969 82.925781 C 169.234375 82.175781 168.648438 82.175781 167.957031 82.925781 Z M 167.566406 82.625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 141.8125 109.875 L 145.515625 110.046875 C 144.761719 111.496094 144.101562 112.867188 143.417969 114.230469 L 143.78125 114.449219 L 146.550781 112.140625 C 146.695312 112.550781 146.867188 112.804688 146.800781 112.890625 C 146.101562 113.9375 146.453125 115.585938 144.953125 116.1875 C 144.875 116.1875 144.824219 116.300781 144.757812 116.328125 C 144.003906 116.695312 142.742188 117.519531 142.585938 117.339844 C 141.757812 116.441406 140.566406 115.609375 141 114.011719 C 141.359375 112.722656 141.527344 111.367188 141.8125 109.875 Z M 141.8125 109.875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 176.664062 86.363281 C 177.683594 87.75 178.804688 87.203125 179.96875 86.582031 C 180.9375 86.070312 181.972656 85.382812 182.761719 87.0625 C 181.546875 87.8125 179.59375 87.910156 179.464844 89.925781 C 179.507812 90.148438 179.582031 90.363281 179.691406 90.5625 C 179.398438 90.808594 179.007812 91.152344 178.585938 91.476562 C 176.941406 92.726562 175.078125 92.308594 174.078125 90.441406 C 173.980469 90.234375 173.980469 89.996094 174.078125 89.789062 C 174.859375 88.65625 175.726562 87.554688 176.664062 86.363281 Z M 176.664062 86.363281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 163.1875 110.011719 L 165.308594 110.226562 C 166.058594 110.304688 166.863281 110.175781 167.441406 110.503906 C 169.242188 111.53125 169.167969 113.097656 167.371094 114.164062 C 167.265625 114.222656 167.125 114.328125 167.042969 114.296875 C 166.058594 113.894531 165.082031 113.457031 164.039062 113.023438 C 164.554688 112.625 164.902344 112.363281 165.238281 112.085938 C 165.238281 112.085938 165.105469 111.808594 165.066406 111.816406 C 164.585938 111.90625 164.105469 112.027344 163.375 112.191406 C 163.59375 112.273438 163.496094 112.265625 163.453125 112.191406 C 162.941406 111.53125 161.890625 110.648438 162.046875 110.242188 C 162.5 109.164062 163.230469 108.222656 164.164062 107.515625 C 165.105469 106.808594 166.320312 106.609375 166.808594 105.265625 C 167.148438 104.300781 168.035156 104.515625 168.964844 105.792969 C 167.019531 106.992188 165.703125 109.082031 163.234375 109.539062 Z M 163.1875 110.011719 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 221.851562 25.191406 C 223.277344 26.621094 224.675781 27.925781 225.953125 29.335938 C 226.703125 30.175781 225.839844 31.703125 224.554688 31.769531 C 223.496094 31.792969 222.441406 31.757812 221.386719 31.667969 C 221.148438 31.644531 220.925781 31.546875 220.753906 31.382812 C 219.875 30.246094 219.726562 28.707031 220.363281 27.425781 C 220.792969 26.695312 221.296875 26.015625 221.851562 25.191406 Z M 221.851562 25.191406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 163.894531 77.503906 L 160.199219 78.605469 L 160.808594 80.457031 C 159.085938 79.542969 158.960938 79.085938 160.160156 77.859375 C 161.738281 76.230469 163.382812 74.679688 165.035156 73.066406 L 166.882812 75.015625 L 165.117188 76.082031 C 165.195312 76.207031 165.238281 76.3125 165.308594 76.402344 C 165.667969 76.914062 166.433594 77.585938 166.304688 77.902344 C 165.910156 78.757812 165.339844 79.523438 164.628906 80.152344 C 163.984375 80.714844 163.257812 81.179688 162.476562 81.53125 C 162.136719 81.695312 161.648438 81.53125 161.21875 81.53125 L 161.21875 81.199219 C 161.929688 80.777344 162.574219 80.253906 163.136719 79.648438 C 163.492188 78.972656 163.746094 78.253906 163.894531 77.503906 Z M 163.894531 77.503906 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 51.519531 200.65625 C 52.222656 200.84375 53.382812 200.828125 53.5625 201.238281 C 54.042969 202.347656 54.90625 203.277344 54.3125 204.933594 C 53.5625 206.90625 52.058594 207.460938 50.632812 208.496094 C 50.023438 207.683594 49.429688 206.996094 48.964844 206.246094 C 48.28125 205.121094 49.03125 203.382812 50.152344 202.796875 C 50.765625 202.484375 51.152344 201.726562 51.652344 201.171875 Z M 52.414062 205.21875 C 52.804688 204.621094 53.164062 204.28125 53.164062 203.953125 C 53.164062 203.621094 52.570312 203.203125 52.414062 203.261719 C 51.992188 203.488281 51.609375 203.777344 51.277344 204.117188 Z M 52.414062 205.21875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 172.113281 71.472656 C 172.179688 72.050781 172.367188 72.492188 172.226562 72.664062 C 171.886719 73.066406 171.164062 73.71875 170.992188 73.617188 C 169.566406 72.769531 168.535156 73.277344 167.648438 74.582031 L 165.667969 72.445312 L 170.519531 67.664062 L 173.382812 70.121094 Z M 172.113281 71.472656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 220.734375 45.246094 C 222.859375 43.523438 225.050781 41.738281 227.359375 39.878906 L 228.785156 41.710938 C 227.238281 44.140625 225.160156 46.1875 222.707031 47.707031 Z M 220.734375 45.246094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 19.902344 211.035156 C 20.605469 212.589844 20.109375 214.421875 18.714844 215.414062 C 15.710938 217.914062 16.375 217.660156 13.910156 215.335938 C 13.25 214.542969 12.679688 213.679688 12.210938 212.757812 C 15.089844 212.8125 17.582031 212.585938 19.902344 211.035156 Z M 19.902344 211.035156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 61.800781 183.25 C 62.441406 182.179688 62.929688 181.234375 63.535156 180.382812 C 64.019531 179.78125 64.742188 179.421875 65.511719 179.402344 C 66.28125 179.378906 67.023438 179.695312 67.539062 180.269531 C 67.78125 180.5625 67.710938 181.101562 67.796875 181.519531 C 68.285156 184.054688 65.773438 185.042969 64.980469 186.925781 C 64.746094 187.492188 62.613281 187.253906 62.273438 186.648438 C 62.03125 186.160156 61.824219 185.660156 61.652344 185.148438 L 61.953125 184.96875 C 62.148438 185.261719 62.367188 185.539062 62.605469 185.800781 C 62.828125 186.050781 63.125 186.21875 63.453125 186.285156 C 63.640625 186.285156 63.851562 185.84375 64.003906 185.574219 C 64.371094 184.914062 64.714844 184.242188 65.089844 183.535156 C 64.242188 182.496094 63.730469 182.425781 61.800781 183.25 Z M 61.800781 183.25 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 150.871094 93.625 C 150.722656 93.332031 150.589844 93.023438 150.480469 92.710938 C 150.449219 92.410156 150.332031 92.121094 150.132812 91.886719 C 149.917969 92.554688 149.714844 93.230469 149.472656 93.890625 C 149.367188 94.160156 149.238281 94.527344 149.023438 94.640625 C 148.734375 94.691406 148.433594 94.613281 148.210938 94.421875 C 147.734375 93.976562 147.28125 93.503906 146.851562 93.011719 L 148.976562 91.648438 L 147.152344 90.636719 L 148.128906 89.40625 C 148.527344 89.453125 148.929688 89.453125 149.332031 89.40625 C 150.539062 89.0625 151.726562 88.613281 152.949219 88.304688 C 153.390625 88.285156 153.828125 88.339844 154.25 88.46875 C 154.246094 88.867188 154.179688 89.261719 154.046875 89.640625 C 153.59375 90.503906 153.074219 91.328125 152.492188 92.113281 C 151.996094 92.660156 151.453125 93.167969 150.871094 93.625 Z M 150.871094 93.625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 76.132812 174.8125 C 77.207031 174.640625 77.582031 175.140625 77.90625 177.351562 L 80.113281 176.355469 C 80.113281 176.355469 80.1875 176.355469 80.324219 176.355469 C 81.011719 176.90625 81.140625 177.902344 80.609375 178.605469 C 80.414062 178.949219 80.28125 179.328125 80.21875 179.722656 C 80.039062 180.6875 79.421875 180.957031 78.429688 180.875 C 77.777344 180.824219 77.085938 181.25 76.230469 181.519531 C 74.886719 180.566406 74.292969 178.703125 76.09375 176.511719 C 76.359375 176.183594 76.132812 175.464844 76.132812 174.8125 Z M 76.132812 174.8125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 64.152344 203.472656 C 61.964844 206.433594 59.316406 206.898438 57.925781 204.3125 C 57.59375 205.871094 57.324219 207.121094 57.054688 208.40625 C 55.550781 207.59375 55.515625 205.691406 56.910156 204.5 C 57.148438 204.328125 57.335938 204.097656 57.453125 203.832031 C 57.664062 203.082031 57.8125 202.640625 58.730469 203.226562 C 59.15625 203.496094 59.863281 203.464844 59.9375 202.476562 C 59.9375 202.035156 60.691406 201.570312 61.179688 201.246094 C 61.335938 201.140625 61.832031 201.367188 62.070312 201.570312 C 62.777344 202.144531 63.4375 202.804688 64.152344 203.472656 Z M 64.152344 203.472656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 186.324219 80.996094 L 183.5 85.398438 C 183.070312 84.648438 182.746094 84.0625 182.476562 83.492188 C 181.464844 81.320312 181.945312 80.816406 183.941406 79.453125 C 184.914062 78.894531 185.917969 78.394531 186.945312 77.953125 L 189.289062 80.398438 C 188.214844 82.152344 188.066406 82.191406 186.324219 80.996094 Z M 186.324219 80.996094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 186.691406 45.652344 C 188.074219 47.054688 189.386719 45.964844 190.6875 45.652344 L 190.835938 45.921875 C 189.816406 46.671875 188.800781 47.421875 187.757812 48.09375 C 187.535156 48.15625 187.300781 48.101562 187.128906 47.953125 C 186 46.746094 184.875 45.507812 183.527344 43.980469 C 187.066406 43.65625 188.328125 41.289062 189.449219 38.839844 C 191.519531 39.820312 190.183594 43.132812 186.691406 45.652344 Z M 186.691406 45.652344 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 200.308594 42.984375 C 200.207031 43.582031 200.0625 44.175781 199.875 44.753906 C 199.585938 45.355469 199.265625 45.945312 198.914062 46.511719 L 197.792969 45.457031 C 197.574219 46.386719 197.589844 47.429688 197.101562 48.101562 C 196.613281 48.777344 195.601562 49.136719 194.847656 49.601562 C 194.847656 48.941406 195.058594 48.214844 194.796875 47.953125 C 194.53125 47.691406 193.757812 47.675781 193.007812 47.519531 C 194.511719 46.632812 195.3125 45.140625 197.15625 44.863281 C 197.980469 44.738281 198.550781 43.777344 198.753906 42.617188 C 197.507812 43.367188 196.5 44.21875 194.863281 43.703125 L 198.273438 40.800781 Z M 200.308594 42.984375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 98.621094 168.492188 C 99.5625 167.136719 99.5 167.039062 98.222656 166.183594 C 97.78125 165.886719 97.171875 165.324219 97.21875 164.957031 C 97.277344 164.476562 97.871094 164.003906 98.320312 163.644531 C 98.773438 163.285156 99.476562 163.039062 99.949219 162.609375 C 100.703125 161.957031 101.183594 162.136719 101.785156 162.773438 C 103.804688 164.890625 103.902344 164.125 102.03125 166.425781 C 101.5 167.09375 100.941406 167.738281 100.378906 168.375 C 100.1875 168.65625 99.871094 168.835938 99.53125 168.859375 C 99.1875 168.882812 98.851562 168.75 98.621094 168.492188 Z M 98.621094 168.492188 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 1.476562 244.492188 C 2.167969 245.339844 2.875 246.179688 3.542969 247.039062 C 3.707031 247.253906 3.789062 247.519531 3.777344 247.789062 C 3.582031 249.289062 3.339844 250.789062 3.117188 252.289062 C 2.996094 252.289062 2.867188 252.339844 2.84375 252.289062 C 2.09375 251.097656 0.667969 250.652344 -0.285156 249.679688 C -1.542969 248.390625 -1.472656 248.113281 0.300781 247.609375 L -0.992188 246.417969 C -0.859375 246.210938 -0.835938 246.117188 -0.773438 246.074219 L 1.101562 244.746094 Z M 1.476562 244.492188 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 46.394531 189.832031 L 48.363281 191.675781 L 46.476562 193.789062 L 46.863281 194.171875 L 48.917969 192.269531 L 49.144531 192.394531 C 48.710938 193.144531 48.324219 193.894531 47.839844 194.570312 C 46.574219 196.367188 46.628906 196.253906 44.765625 195.132812 C 43.910156 194.613281 42.753906 194.597656 41.507812 194.300781 Z M 46.394531 189.832031 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 66.675781 193.488281 L 63.996094 195.421875 C 61.824219 193.757812 61.5625 193.003906 62.167969 190.574219 C 62.394531 189.667969 62.546875 188.746094 62.753906 187.664062 C 62.566406 187.75 62.644531 187.664062 62.753906 187.664062 L 64.496094 187.664062 C 64.5625 188.734375 64.738281 189.792969 65.015625 190.828125 C 65.476562 191.769531 66.03125 192.664062 66.675781 193.488281 Z M 66.675781 193.488281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 216.585938 20.429688 C 214.949219 22.140625 212.832031 21.855469 210.996094 19.441406 L 212.164062 19.105469 C 211.871094 18.789062 211.703125 18.503906 211.464844 18.355469 C 209.652344 17.472656 209.636719 17.359375 211.101562 15.882812 C 211.261719 15.695312 211.394531 15.488281 211.5 15.265625 Z M 216.585938 20.429688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 86.402344 174.121094 L 86.273438 173.140625 C 84.019531 173.890625 83.652344 174.175781 83.269531 175.605469 L 81.765625 173.726562 C 82.699219 173.394531 83.570312 173.132812 84.410156 172.796875 C 85.65625 172.300781 85.914062 171.722656 85.328125 170.292969 L 82.320312 172.144531 L 82.320312 168.335938 L 86.175781 168.335938 C 87.707031 170.210938 87.414062 172.039062 86.402344 174.121094 Z M 86.402344 174.121094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 82.992188 182.285156 C 84.085938 181.136719 84.445312 179.46875 83.914062 177.976562 C 85.859375 177.847656 88.277344 179.902344 89.34375 176.476562 L 90.464844 177.523438 C 88.730469 179.640625 87.144531 181.730469 84.589844 182.824219 C 83.785156 183.160156 83.390625 183.027344 82.992188 182.285156 Z M 82.992188 182.285156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 179.382812 47.351562 C 179.457031 48.574219 179.53125 49.796875 179.617188 51.039062 L 181.171875 49.960938 L 181.921875 52.375 L 185.675781 50.214844 L 185.804688 50.410156 C 185.34375 51.054688 184.824219 51.652344 184.25 52.195312 C 183.664062 52.597656 183.015625 52.898438 182.328125 53.078125 C 181.964844 53.140625 181.597656 53.140625 181.238281 53.078125 C 178.609375 53.035156 178.144531 52.734375 177.226562 50.222656 C 177.113281 49.820312 177.171875 49.390625 177.390625 49.03125 C 177.886719 48.394531 178.417969 47.789062 178.984375 47.21875 Z M 179.382812 47.351562 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 120.960938 113.984375 L 116.769531 117.175781 L 116.460938 116.949219 C 116.890625 115.675781 117.308594 114.410156 117.722656 113.203125 C 117.105469 113.152344 116.378906 113.308594 116.152344 113.039062 C 115.402344 112.117188 115.613281 111 115.882812 109.929688 C 117.203125 110.046875 119.765625 112.0625 120.960938 113.984375 Z M 120.960938 113.984375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 12.167969 225.351562 L 10.535156 225.664062 L 13.667969 223.066406 L 16.351562 225.539062 C 15.652344 228.214844 13.445312 228.0625 11.21875 228.339844 Z M 12.167969 225.351562 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 10.027344 245.773438 L 10.835938 240.339844 C 11.484375 240.460938 12.683594 240.339844 12.941406 240.8125 C 13.503906 241.800781 15.195312 242.625 14 244.164062 C 13.722656 244.535156 13.347656 244.824219 12.917969 245.003906 C 12.089844 245.300781 11.214844 245.46875 10.027344 245.773438 Z M 10.027344 245.773438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 26.023438 198.0625 C 26.511719 199.019531 27.097656 198.632812 27.609375 198.210938 C 28.578125 197.460938 29.511719 196.59375 30.75 195.535156 C 30.6875 196.1875 30.566406 196.832031 30.390625 197.460938 C 30.035156 198.277344 29.628906 199.070312 29.164062 199.832031 C 28.554688 200.878906 28.136719 201.945312 28.707031 203.21875 C 25.925781 201.539062 24.839844 199.5 26.023438 198.0625 Z M 26.023438 198.0625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 35.949219 212.292969 C 35.195312 211.265625 34.957031 210.351562 36.15625 209.394531 C 36.585938 209.050781 37.464844 208.5 36.722656 207.535156 C 36.632812 207.414062 37.425781 206.425781 37.96875 206.082031 C 38.285156 205.878906 38.929688 206.082031 39.378906 206.253906 C 39.6875 206.367188 39.914062 206.726562 40.222656 207.003906 L 41.296875 206.449219 L 41.511719 206.710938 Z M 35.949219 212.292969 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 87.84375 146.046875 L 86.003906 148.476562 L 82.164062 142.769531 C 82.472656 142.421875 82.914062 142.21875 83.382812 142.21875 C 83.847656 142.21875 84.292969 142.421875 84.597656 142.769531 C 85.71875 143.769531 86.714844 144.898438 87.84375 146.046875 Z M 87.84375 146.046875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 40.054688 236.179688 C 41.800781 234.683594 43.519531 233.136719 45.3125 231.683594 C 45.570312 231.472656 46.066406 231.550781 46.472656 231.488281 C 46.539062 232.027344 46.875 232.808594 46.636719 233.054688 C 45.664062 234.066406 44.601562 234.988281 43.457031 235.804688 C 42.84375 236.1875 42.167969 236.460938 41.460938 236.621094 C 41.066406 236.679688 40.667969 236.679688 40.273438 236.621094 Z M 40.054688 236.179688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 49.84375 212.683594 C 50.746094 212.617188 51.652344 212.617188 52.554688 212.683594 C 53.613281 212.855469 54.148438 212.625 53.890625 211.148438 C 54.453125 211.28125 54.988281 211.507812 55.476562 211.816406 C 55.605469 211.933594 55.339844 212.707031 55.0625 212.992188 C 54.347656 213.691406 53.59375 214.355469 52.808594 214.976562 C 52.058594 215.605469 51.261719 216.214844 50.414062 216.890625 Z M 49.84375 212.683594 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 169.414062 98.785156 C 166.882812 96.789062 166.90625 95.890625 169.519531 93.535156 C 170.765625 94.4375 172.269531 95.097656 172.886719 97.023438 C 170.878906 96.199219 170.292969 97.6875 169.414062 98.785156 Z M 169.414062 98.785156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 68.328125 178.539062 L 74.511719 177.441406 C 74.316406 179.855469 73.847656 180.703125 72.664062 180.800781 C 70.753906 180.964844 68.710938 179.96875 68.328125 178.539062 Z M 68.328125 178.539062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 39.546875 236.03125 C 38.683594 235.152344 38.042969 234.53125 37.464844 233.871094 C 37.300781 233.613281 37.277344 233.289062 37.40625 233.011719 C 38.246094 231.902344 39.164062 230.835938 39.90625 229.921875 C 40.65625 230.746094 41.207031 231.421875 41.835938 232.082031 C 42.347656 232.582031 42.390625 232.996094 41.707031 233.257812 C 40.535156 233.722656 39.484375 234.261719 39.546875 236.03125 Z M 39.546875 236.03125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 78.964844 145.859375 C 79.167969 146.300781 79.316406 146.714844 79.527344 147.097656 C 79.949219 147.84375 80.382812 148.59375 81.421875 148.550781 C 81.832031 148.527344 82.234375 148.640625 82.578125 148.863281 C 83.054688 149.308594 83.488281 149.792969 83.878906 150.320312 C 83.261719 150.804688 82.644531 151.308594 82.007812 151.773438 C 81.9375 151.824219 81.683594 151.71875 81.585938 151.617188 C 80.347656 150.355469 78.84375 149.367188 78.28125 147.5 C 78.046875 146.734375 78.070312 146.277344 78.964844 145.859375 Z M 78.964844 145.859375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 160.941406 95.703125 C 160.550781 93.648438 161.078125 92.578125 162.722656 91.777344 C 162.867188 91.699219 162.992188 91.597656 163.136719 91.519531 C 165.503906 90.195312 165.71875 90.261719 166.546875 92.9375 C 166.589844 93.507812 166.535156 94.082031 166.382812 94.632812 C 165.648438 94.296875 164.933594 93.914062 164.246094 93.492188 C 163.195312 92.742188 162.542969 93.253906 161.996094 94.097656 C 161.640625 94.5625 161.355469 95.050781 160.941406 95.703125 Z M 160.941406 95.703125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 41.136719 214.96875 L 36.046875 218.492188 L 35.714844 218.351562 C 35.976562 217.007812 36.195312 215.652344 36.539062 214.332031 C 36.609375 214.085938 37.203125 213.875 37.570312 213.847656 C 38.296875 213.75 39.035156 213.777344 39.753906 213.921875 C 40.238281 214.039062 40.613281 214.550781 41.136719 214.96875 Z M 41.136719 214.96875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 43.144531 220.882812 C 43.234375 220.949219 43.097656 220.882812 42.976562 220.757812 C 42.03125 219.871094 42.0625 219.730469 43.292969 219.339844 C 44.527344 218.949219 44.570312 218.417969 43.75 217.59375 C 44.78125 215.652344 45.164062 215.507812 47.15625 216.304688 C 46.808594 216.863281 46.566406 217.480469 46.441406 218.125 C 46.441406 218.6875 46.929688 219.25 47.191406 219.746094 Z M 43.144531 220.882812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 35.632812 214.910156 C 35.40625 216.207031 35.210938 217.351562 35.015625 218.5 C 35.015625 218.613281 34.972656 218.800781 34.894531 218.828125 C 34.007812 219.191406 33.46875 220.328125 32.222656 219.910156 C 31.730469 219.800781 31.222656 219.753906 30.71875 219.773438 C 31.695312 218.273438 32.566406 216.777344 33.648438 215.488281 C 33.949219 215.105469 34.875 215.105469 35.632812 214.910156 Z M 35.632812 214.910156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 40.035156 227.285156 C 38.773438 225.851562 39.328125 224.488281 40.222656 223.109375 C 40.605469 222.511719 40.824219 221.796875 41.214844 221.199219 C 42.03125 219.910156 42.378906 221.234375 43 221.503906 C 42.503906 222.253906 42.015625 222.890625 41.609375 223.582031 C 41.207031 224.269531 40.859375 225.019531 40.46875 225.832031 L 42.183594 226.210938 C 40.933594 227.230469 39.929688 228.125 38.816406 228.941406 C 38.652344 229.066406 38.253906 228.878906 37.96875 228.84375 C 38.050781 228.589844 38.058594 228.222656 38.222656 228.09375 C 38.8125 227.789062 39.414062 227.519531 40.035156 227.285156 Z M 40.035156 227.285156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 33.28125 211.539062 L 34.949219 213.035156 L 28.75 217.144531 C 28.511719 215.695312 31.125 212.398438 33.28125 211.539062 Z M 33.28125 211.539062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 227.53125 39.84375 L 231.171875 37.878906 C 231.070312 37.726562 230.992188 37.5625 230.941406 37.386719 C 230.902344 36.84375 230.894531 36.296875 230.871094 35.757812 C 231.386719 35.84375 231.886719 35.976562 232.375 36.15625 C 232.976562 36.511719 233.554688 36.902344 234.101562 37.332031 C 232.71875 38.574219 231.261719 39.730469 229.738281 40.796875 C 229.402344 41.003906 228.492188 40.277344 227.53125 39.84375 Z M 227.53125 39.84375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 115.011719 119.386719 C 113.882812 118.554688 112.59375 117.8125 112.007812 116.507812 C 110.625 113.601562 110.667969 114.613281 112.757812 112.355469 C 113.058594 111.980469 113.390625 111.632812 113.75 111.316406 C 112.40625 113.210938 112.457031 113.179688 113.75 115.382812 C 114.398438 116.589844 114.988281 117.824219 115.515625 119.085938 Z M 115.011719 119.386719 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 197.222656 49.691406 C 196.3125 52.335938 195.457031 54.855469 194.527344 57.582031 C 194.050781 56.59375 193.65625 55.777344 193.277344 54.945312 C 193.214844 54.796875 193.214844 54.628906 193.277344 54.480469 C 194.480469 52.882812 194.886719 50.621094 197.222656 49.691406 Z M 197.222656 49.691406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 167.296875 88.875 L 172.425781 88.207031 C 172.753906 88.976562 172.421875 89.863281 171.675781 90.230469 C 170.96875 90.628906 170.324219 91.445312 169.625 91.476562 C 168.199219 91.542969 168.199219 89.820312 167.167969 89.226562 Z M 167.296875 88.875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 61.554688 177.40625 C 62.394531 177.308594 63.417969 177.457031 64.015625 177.03125 C 64.496094 176.679688 64.46875 175.621094 64.769531 174.609375 L 67.261719 175.359375 C 66.601562 177.53125 64.609375 178.027344 63.078125 178.964844 C 62.84375 179.105469 61.964844 178.214844 61.386719 177.808594 Z M 61.554688 177.40625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 13.023438 215.695312 L 15.578125 217.902344 C 14.707031 219.0625 13.902344 220.222656 12.984375 221.289062 C 12.773438 221.527344 12.167969 221.421875 11.738281 221.476562 C 11.738281 221.09375 11.605469 220.652344 11.738281 220.359375 C 12.085938 219.8125 12.460938 219.289062 12.867188 218.785156 C 13.542969 217.8125 13.835938 216.8125 13.023438 215.695312 Z M 13.023438 215.695312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 176.371094 95.1875 C 177.875 93.980469 179.308594 92.808594 180.800781 91.730469 C 180.914062 91.640625 181.554688 92.164062 181.847656 92.480469 C 181.929688 92.585938 181.621094 93.230469 181.386719 93.296875 C 180.835938 93.429688 180.265625 93.480469 179.699219 93.453125 C 178.382812 93.453125 178.195312 93.671875 178.347656 95.074219 L 181.058594 94.472656 C 180.417969 96.101562 178.167969 96.355469 176.371094 95.1875 Z M 176.371094 95.1875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 101.941406 169.191406 C 103.191406 170.476562 104.34375 171.847656 105.398438 173.296875 C 106.074219 174.371094 105.839844 174.511719 104.441406 175.597656 L 101.550781 169.476562 Z M 101.941406 169.191406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 171.488281 106.714844 L 172.367188 106.21875 L 168.402344 104.320312 C 169.429688 103.214844 170.1875 103.0625 171.195312 103.683594 C 171.867188 103.988281 172.574219 104.214844 173.296875 104.351562 C 173.117188 105.058594 172.839844 106.113281 172.546875 107.351562 Z M 171.488281 106.714844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 23.507812 208.695312 C 23.292969 207.535156 23.75 206.355469 24.6875 205.640625 C 25.398438 205.023438 26.148438 204.464844 26.941406 203.960938 C 27.21875 203.867188 27.523438 203.882812 27.789062 203.996094 C 27.882812 204.195312 27.882812 204.425781 27.789062 204.628906 C 26.507812 206.109375 25.53125 207.894531 23.507812 208.695312 Z M 23.507812 208.695312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 29.683594 223.050781 L 29.960938 220.34375 C 31.117188 220.394531 32.328125 220.425781 33.527344 220.523438 C 33.730469 220.523438 34.070312 220.839844 34.078125 221.011719 C 34.082031 221.308594 33.941406 221.585938 33.703125 221.761719 C 32.449219 222.195312 31.140625 222.601562 29.683594 223.050781 Z M 29.683594 223.050781 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 42.8125 209.984375 C 43.234375 210.421875 43.675781 210.734375 43.863281 211.117188 C 44.257812 211.949219 44.5625 212.824219 44.773438 213.71875 C 44.839844 214.039062 44.519531 214.46875 44.375 214.820312 C 44.066406 214.714844 43.777344 214.558594 43.519531 214.363281 C 42.46875 213.214844 41.65625 211.988281 42.8125 209.984375 Z M 42.8125 209.984375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 162.730469 94.789062 L 164.707031 94.789062 C 164.902344 96.984375 164.917969 97.035156 163.257812 97.785156 C 162.976562 97.921875 162.378906 97.898438 162.25 97.71875 C 161.953125 97.335938 161.8125 96.851562 161.851562 96.371094 C 162.066406 95.800781 162.359375 95.269531 162.730469 94.789062 Z M 162.730469 94.789062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 10.4375 235.222656 L 12.585938 239.839844 C 11.570312 240.011719 10.546875 239.570312 9.972656 238.714844 C 9.164062 237.589844 8.980469 236.480469 10.4375 235.222656 Z M 10.4375 235.222656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 31.695312 194.777344 L 34.699219 197.597656 C 34.144531 197.910156 33.640625 198.226562 33.125 198.496094 C 32.214844 198.960938 31.394531 198.59375 31.367188 197.589844 C 31.398438 196.644531 31.507812 195.703125 31.695312 194.777344 Z M 31.695312 194.777344 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 41.5 216.085938 C 41.484375 216.507812 41.445312 216.925781 41.378906 217.339844 C 41.320312 217.917969 41.144531 218.480469 40.859375 218.988281 C 40.417969 219.449219 39.910156 219.84375 39.359375 220.164062 C 39.117188 219.617188 38.523438 218.875 38.695312 218.566406 C 39.351562 217.609375 40.082031 216.699219 40.882812 215.855469 Z M 41.5 216.085938 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 68.75 173.335938 L 63.679688 172.765625 C 65.558594 170.421875 67.5625 170.667969 68.75 173.335938 Z M 68.75 173.335938 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 15.71875 243.457031 C 15.628906 244.171875 15.503906 244.878906 15.335938 245.578125 C 15.269531 245.847656 14.96875 246.066406 14.734375 246.269531 C 14.503906 246.472656 13.984375 246.800781 13.675781 247.085938 C 12.175781 248.40625 11.949219 248.367188 10.882812 246.488281 C 13.414062 246.867188 14.226562 244.589844 15.71875 243.457031 Z M 15.71875 243.457031 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 45.359375 230.355469 C 44.667969 230.613281 44.1875 230.835938 43.683594 230.964844 C 42.453125 231.277344 41.753906 230.703125 41.980469 229.464844 C 42.183594 228.882812 42.480469 228.335938 42.859375 227.847656 C 43.257812 228.136719 43.636719 228.449219 44 228.785156 C 44.464844 229.226562 44.824219 229.734375 45.359375 230.355469 Z M 45.359375 230.355469 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 72.195312 187.035156 C 71.296875 187.035156 70.515625 187.15625 69.726562 187.140625 C 69.410156 187.15625 69.105469 187.007812 68.921875 186.746094 C 68.742188 186.488281 68.703125 186.152344 68.824219 185.859375 C 69.144531 185.261719 69.652344 184.789062 70.265625 184.503906 C 70.460938 184.398438 71.109375 184.871094 71.363281 185.253906 C 71.703125 185.816406 71.980469 186.414062 72.195312 187.035156 Z M 72.195312 187.035156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 15.800781 220.839844 C 16.441406 222.066406 17.101562 223.28125 17.679688 224.542969 C 17.734375 224.652344 17.304688 225 17.042969 225.289062 C 16.214844 224.507812 15.476562 223.632812 14.839844 222.691406 C 14.609375 222.253906 15.097656 221.429688 15.253906 220.785156 Z M 15.800781 220.839844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 20.960938 221.101562 L 21.796875 220.515625 L 21.976562 220.742188 C 21.390625 221.265625 20.804688 221.796875 20.078125 222.441406 C 19.484375 220.792969 19.714844 219.558594 20.707031 218.5 C 21.007812 218.179688 21.601562 217.789062 21.902344 217.894531 C 22.34375 218.035156 22.652344 218.597656 22.976562 219.136719 C 21.4375 218.949219 21.269531 220.097656 20.960938 221.101562 Z M 20.960938 221.101562 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 28.765625 210.414062 C 28.957031 210.144531 29.171875 209.894531 29.40625 209.664062 C 29.667969 209.472656 29.949219 209.308594 30.246094 209.175781 C 31.90625 208.292969 31.929688 208.203125 30.898438 206.652344 C 32.042969 206.320312 32.3125 206.464844 33.429688 208.082031 L 29.148438 210.824219 Z M 28.765625 210.414062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 41.511719 210.464844 C 41.910156 212.714844 40.761719 213.679688 38.140625 213.214844 C 38.457031 212.105469 40.019531 210.78125 41.511719 210.464844 Z M 41.511719 210.464844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 95.429688 166.816406 L 98.433594 169.679688 C 97.765625 170.621094 97.195312 170.78125 96.488281 170.023438 C 96.09375 169.558594 95.664062 169.125 95.203125 168.726562 C 94.421875 168.074219 94.625 167.527344 95.429688 166.816406 Z M 95.429688 166.816406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 47.46875 208.914062 C 46.636719 209.132812 45.785156 209.273438 44.921875 209.332031 C 44.476562 209.203125 44.132812 208.847656 44.015625 208.398438 C 44.015625 207.886719 44.164062 207.160156 45.082031 207.308594 C 45.996094 207.460938 47.246094 207.054688 47.46875 208.914062 Z M 47.46875 208.914062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 177.878906 81.859375 C 177.074219 82.929688 175.726562 83.449219 174.410156 83.195312 C 174.15625 83.027344 174 82.746094 173.988281 82.445312 C 174.007812 81.941406 174.070312 81.441406 174.171875 80.945312 Z M 177.878906 81.859375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 9.164062 218.808594 C 8.660156 215.710938 9.164062 213.832031 10.941406 214.386719 C 10.679688 215.554688 10.460938 216.714844 10.140625 217.839844 C 10.054688 218.15625 9.636719 218.367188 9.164062 218.808594 Z M 9.164062 218.808594 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 186.738281 48.925781 C 185.089844 47.9375 183.4375 46.964844 181.816406 45.929688 C 181.679688 45.839844 181.742188 45.425781 181.695312 45.039062 C 184.273438 45.351562 185.136719 47.621094 186.738281 48.925781 Z M 186.738281 48.925781 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 70.84375 190.425781 C 72.699219 188.691406 73.941406 188.707031 75.351562 189.882812 C 74.863281 190.941406 74.03125 190.933594 73.054688 190.722656 C 72.332031 190.566406 71.558594 190.515625 70.84375 190.425781 Z M 70.84375 190.425781 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 200.054688 51.09375 L 199.046875 52.277344 C 199.992188 52.972656 200.550781 53.777344 199.796875 54.945312 C 198.296875 54.945312 198.09375 53.820312 199.046875 50.207031 Z M 200.054688 51.09375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 83.195312 183.378906 C 81.292969 184.929688 79.144531 184.9375 79.183594 183.085938 C 80.242188 182.988281 81.292969 182.855469 82.34375 182.832031 C 82.613281 182.824219 82.894531 183.175781 83.195312 183.378906 Z M 83.195312 183.378906 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 76.765625 191.398438 L 72.585938 195.761719 C 72.796875 194.117188 74.625 192.15625 76.765625 191.398438 Z M 76.765625 191.398438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 30.441406 226.976562 L 32.125 225.351562 L 33.417969 226.4375 C 31.988281 228.011719 31.375 228.140625 30.441406 226.976562 Z M 30.441406 226.976562 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 43.015625 198.5625 C 42.347656 197.8125 41.648438 197.066406 41.03125 196.316406 C 40.875 196.113281 40.980469 195.699219 40.957031 195.394531 C 41.28125 195.394531 41.707031 195.296875 41.910156 195.453125 C 42.964844 196.164062 43.097656 197.296875 43.015625 198.5625 Z M 43.015625 198.5625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 18.925781 217.351562 C 19.398438 217.921875 20.257812 218.335938 19.527344 219.09375 C 18.800781 219.847656 17.949219 220.027344 16.914062 219.09375 Z M 18.925781 217.351562 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 14.15625 210.789062 C 14.570312 210.292969 15.167969 209.988281 15.8125 209.945312 C 16.457031 209.90625 17.089844 210.132812 17.558594 210.570312 C 16.433594 211.621094 15.457031 211.6875 14.15625 210.789062 Z M 14.15625 210.789062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 57.640625 207.429688 L 61.199219 206.53125 C 60.328125 208.570312 59.023438 208.953125 57.640625 207.429688 Z M 57.640625 207.429688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 33.402344 202.933594 L 34.226562 203.929688 L 30.253906 206.066406 L 30.058594 205.773438 Z M 33.402344 202.933594 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 25.003906 201.15625 L 26.605469 203.578125 C 24.9375 204.261719 24.507812 203.863281 25.003906 201.15625 Z M 25.003906 201.15625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 226.855469 30.4375 C 228.71875 31.597656 229.25 32.445312 228.625 33.734375 L 226.5 30.730469 Z M 226.855469 30.4375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 28.953125 221.101562 C 29.023438 222 29.261719 222.890625 28.074219 223.191406 C 27.761719 223.273438 27.640625 224.078125 27.324219 224.691406 L 26.121094 224.464844 C 27.226562 223.160156 28.089844 222.121094 28.953125 221.101562 Z M 28.953125 221.101562 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 149.734375 102.605469 L 153.492188 101.371094 C 152.785156 103.152344 151.800781 103.46875 149.734375 102.605469 Z M 149.734375 102.605469 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 23.878906 226.398438 C 23.988281 225.964844 24.027344 225.648438 24.125 225.433594 C 24.296875 225 24.515625 224.578125 24.710938 224.152344 C 24.988281 224.5625 25.296875 224.960938 25.535156 225.394531 C 25.699219 225.75 25.839844 226.117188 25.949219 226.488281 Z M 23.878906 226.398438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 170.078125 87.089844 L 167.304688 88.441406 C 167.539062 87.554688 167.703125 86.941406 167.90625 86.191406 L 170.0625 86.746094 Z M 170.078125 87.089844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 165.300781 70.0625 C 165.40625 69.132812 165.507812 68.195312 165.644531 67.066406 L 167.109375 68.1875 L 165.652344 70.242188 Z M 165.300781 70.0625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 86.28125 176.132812 L 88.089844 174.730469 C 88.148438 175.34375 88.148438 175.964844 88.089844 176.582031 C 88.03125 176.867188 87.648438 177.089844 87.414062 177.332031 Z M 86.28125 176.132812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 34.121094 208.488281 C 33.234375 206.402344 33.5 206.058594 35.699219 206.074219 Z M 34.121094 208.488281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 174.15625 102.035156 C 174.222656 100.957031 175.222656 99.898438 176.046875 99.953125 C 176.269531 99.996094 176.460938 100.136719 176.566406 100.335938 C 176.574219 100.558594 176.464844 100.769531 176.28125 100.898438 C 175.636719 101.285156 174.953125 101.617188 174.15625 102.035156 Z M 174.15625 102.035156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 185.078125 96.632812 C 184.640625 96.910156 184.324219 97.1875 184.265625 97.132812 C 183.785156 96.773438 183.328125 96.390625 182.890625 95.980469 L 183.722656 95.230469 Z M 185.078125 96.632812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 175.054688 92.5625 L 172.226562 91.949219 C 173.375 90.6875 173.53125 90.492188 175.054688 92.5625 Z M 175.054688 92.5625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 53.960938 208.695312 L 50.570312 211.191406 C 50.765625 210.164062 50.765625 210.164062 53.6875 208.34375 Z M 53.960938 208.695312 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 77.246094 189.667969 L 78.230469 187.839844 C 78.476562 187.980469 78.933594 188.109375 78.980469 188.265625 C 79.058594 189.078125 78.503906 189.816406 77.703125 189.96875 Z M 77.246094 189.667969 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 30.523438 201.015625 C 31.027344 199.132812 32.777344 199.964844 33.777344 199.125 L 33.925781 199.441406 Z M 30.523438 201.015625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 48.144531 209.859375 C 47.6875 211.613281 47.453125 211.671875 45.605469 210.5625 Z M 48.144531 209.859375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 41.460938 189.878906 L 44.210938 189.351562 C 42.917969 190.964844 42.550781 191.054688 41.460938 189.878906 Z M 41.460938 189.878906 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 60.988281 175.644531 L 62.582031 173.394531 C 62.84375 174.855469 62.117188 175.839844 60.988281 175.644531 Z M 60.988281 175.644531 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 2.648438 221.777344 L 4.820312 221.027344 L 5.015625 221.558594 L 2.890625 222.425781 Z M 2.648438 221.777344 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 177.414062 78.839844 L 177.648438 77.476562 L 179.148438 78.335938 L 179.039062 78.683594 Z M 177.414062 78.839844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 16.464844 233.753906 L 16.042969 236.488281 C 15.171875 234.988281 15.246094 234.433594 16.464844 233.753906 Z M 16.464844 233.753906 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 150.652344 87.347656 C 151.9375 86.011719 152.003906 86.011719 152.949219 87.347656 Z M 150.652344 87.347656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 7.902344 229.023438 L 8.808594 228.054688 L 9.558594 230.402344 L 9.359375 230.53125 Z M 7.902344 229.023438 "></path></g>',1),Wf=[Uf];function Gf(i,t){return Y(),i1("svg",qf,Wf)}const Kf=x1(Vf,[["render",Gf]]),Yf={},Xf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},Jf=J5('<g id="surface1"><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 147.527344 142.671875 C 148.398438 143.136719 149.253906 143.339844 149.742188 143.886719 C 152.703125 147.179688 155.585938 150.550781 158.492188 153.894531 C 159.671875 155.257812 160.882812 156.59375 162.03125 157.984375 C 162.265625 158.378906 162.4375 158.808594 162.542969 159.253906 L 162.09375 159.484375 C 160.589844 157.8125 159.125 156.148438 157.667969 154.464844 C 156.644531 153.277344 155.753906 151.976562 154.664062 150.867188 C 153.109375 149.292969 151.367188 147.914062 149.820312 146.367188 C 145.367188 141.828125 140.945312 137.253906 136.554688 132.652344 C 134.699219 130.71875 132.917969 128.726562 131.167969 126.820312 C 128.464844 127.023438 127.230469 128.882812 126.382812 131.09375 C 126.261719 131.554688 126.292969 132.039062 126.464844 132.480469 C 126.734375 133.277344 127.046875 134.054688 127.398438 134.820312 C 127.519531 135.082031 127.6875 135.324219 127.894531 135.53125 C 128.644531 136.324219 129.441406 137.089844 130.214844 137.871094 L 129.777344 138.28125 L 128.589844 137.21875 L 139.28125 162.859375 L 138.820312 163.121094 C 138.300781 162.4375 137.84375 161.707031 137.453125 160.9375 C 135.253906 155.550781 133.128906 150.132812 130.925781 144.742188 C 130.214844 142.792969 129.320312 140.910156 128.261719 139.121094 C 127.21875 137.515625 126.871094 137.621094 125.152344 138.902344 L 126.886719 143.746094 C 125.257812 143.25 123.257812 138.304688 123.820312 136.421875 L 124.730469 137.585938 C 125.453125 137.324219 126.144531 136.984375 126.789062 136.574219 C 127.007812 136.40625 126.902344 135.644531 126.742188 135.222656 C 126.226562 133.835938 125.617188 132.480469 125.078125 131.207031 L 123.445312 131.207031 C 122.972656 131.574219 122.449219 131.992188 121.945312 132.382812 C 120.910156 132.964844 120.394531 134.167969 120.691406 135.3125 C 121.953125 140.148438 123.25 144.980469 124.519531 149.816406 C 124.867188 151.136719 125.167969 152.460938 125.488281 153.789062 L 124.964844 153.960938 C 124.46875 152.722656 124.0625 151.449219 123.753906 150.152344 C 123.429688 148.296875 122.957031 146.765625 120.710938 146.585938 C 120.515625 146.585938 120.359375 146.046875 120.1875 145.753906 L 120.605469 145.605469 L 119.519531 145.253906 C 119.894531 145.050781 120.042969 144.898438 120.203125 144.890625 C 121.574219 144.808594 122.207031 144.367188 121.703125 142.800781 C 120.871094 140.359375 120.203125 137.847656 119.527344 135.359375 C 119.398438 134.902344 119.527344 134.371094 119.335938 133.933594 C 118.8125 132.519531 118.203125 131.132812 117.640625 129.730469 C 117.414062 129.175781 117.175781 128.621094 117 128.042969 C 116.414062 126.035156 116.421875 126.035156 114.085938 126.542969 C 113.578125 130.703125 113.058594 134.953125 112.546875 139.195312 L 112.269531 139.261719 C 112.035156 136.46875 111.640625 133.671875 111.652344 130.882812 C 111.652344 129.746094 112.628906 128.636719 113.011719 127.472656 C 113.238281 126.675781 113.339844 125.84375 113.3125 125.015625 C 113.3125 124.828125 112.789062 124.632812 112.808594 124.648438 C 112.691406 122.796875 112.585938 121.089844 112.441406 118.960938 C 111.835938 119.835938 111.445312 120.363281 111.097656 120.910156 C 108.535156 124.984375 105.921875 128.996094 105.140625 133.925781 C 104.871094 135.6875 103.789062 137.328125 103.066406 139.023438 L 102.691406 138.890625 C 103.390625 136.175781 104.082031 133.460938 104.734375 130.914062 L 104.164062 131.304688 L 103.960938 131.152344 L 112.066406 118.023438 L 110.566406 115.96875 L 108.3125 120.894531 L 108.3125 119.214844 L 100.558594 126.320312 L 100.386719 126.140625 C 101.84375 124.492188 103.195312 122.746094 104.796875 121.246094 C 105.996094 120.113281 106.757812 119.066406 105.742188 117.070312 C 103.863281 118.765625 102.144531 120.691406 100.054688 122.0625 C 98.628906 123 98.109375 124.386719 97.125 125.496094 C 95.167969 127.699219 92.621094 129.421875 90.660156 131.605469 C 88.550781 133.917969 86.769531 136.535156 84.703125 139.203125 C 87 140.246094 88.855469 141.101562 90.710938 141.917969 C 91.042969 141.996094 91.382812 142.011719 91.71875 141.960938 C 91.90625 141.960938 92.273438 141.917969 92.273438 141.917969 C 92.46875 143.753906 95.277344 142.375 95.382812 144.390625 C 95.382812 144.628906 96.640625 145.140625 96.757812 144.976562 C 97.894531 143.722656 98.914062 144.863281 100.003906 144.976562 L 102 140.027344 L 102.519531 140.222656 C 101.917969 141.984375 101.316406 143.753906 100.628906 145.769531 C 102.933594 146.0625 104.625 148.765625 107.34375 146.992188 L 106.441406 147.066406 L 106.328125 146.683594 L 113.675781 144.03125 L 113.878906 144.496094 L 109.550781 146.503906 L 109.601562 146.714844 L 112.644531 146.167969 L 112.765625 146.632812 L 107.160156 147.972656 L 107.214844 148.167969 L 113.898438 147.011719 L 114.011719 147.539062 C 112.878906 147.824219 111.757812 148.128906 110.601562 148.363281 C 109.445312 148.59375 108.234375 148.886719 107.597656 150.132812 C 107.488281 150.359375 107.300781 150.546875 107.070312 150.65625 C 104.332031 151.621094 104.367188 154.207031 103.722656 156.375 C 103.292969 157.796875 102.96875 159.269531 102.65625 160.714844 L 102.265625 160.632812 C 102.722656 158.382812 103.179688 156.132812 103.652344 153.945312 C 103.828125 153.121094 104.441406 152.125 104.15625 151.53125 C 103.570312 150.425781 102.757812 149.457031 101.769531 148.683594 C 100.742188 147.875 99.628906 147.179688 98.449219 146.609375 C 94.761719 144.675781 91.058594 142.765625 87.308594 140.941406 C 86.378906 140.648438 85.414062 140.476562 84.441406 140.425781 C 81.089844 151.503906 77.746094 162.542969 74.414062 173.546875 L 74.203125 173.5 C 74.609375 171.746094 74.953125 169.976562 75.441406 168.253906 C 77.050781 162.257812 78.671875 156.335938 80.363281 150.394531 C 80.710938 149.40625 81.171875 148.464844 81.734375 147.582031 C 82.929688 145.402344 82.570312 142.980469 82.886719 140.664062 C 82.890625 140.433594 82.777344 140.214844 82.585938 140.082031 C 82.3125 139.996094 82.011719 140.035156 81.773438 140.191406 C 80.136719 142.085938 78.515625 144.003906 76.914062 145.949219 C 75.695312 147.449219 74.519531 148.945312 73.324219 150.445312 L 72.804688 150.101562 L 75.507812 144.757812 C 72.890625 142.746094 69.777344 141.480469 66.496094 141.09375 C 66.195312 139.816406 67.007812 139.382812 68 138.785156 C 71.6875 136.632812 75.253906 134.285156 78.910156 132.082031 C 80.203125 131.332031 81.617188 130.742188 82.960938 130.066406 C 83.78125 129.65625 84.464844 129.191406 83.199219 128.195312 C 84.457031 129.226562 85.265625 128.5 86.207031 127.953125 C 90.710938 125.375 93.71875 121.328125 96.902344 117.136719 L 94.589844 117.5 L 104.554688 112.851562 C 103.96875 110.960938 102.511719 111.300781 101.265625 111.097656 L 103.316406 108.773438 C 102.625 108.394531 101.90625 108.0625 101.167969 107.785156 C 100.570312 107.59375 99.929688 107.554688 99.3125 107.671875 C 97.132812 108.210938 94.980469 108.863281 92.816406 109.457031 C 92.570312 109.511719 92.316406 109.53125 92.0625 109.523438 C 92.0625 109.824219 92.167969 110.273438 92.0625 110.355469 C 91.164062 110.902344 90.292969 110.789062 89.105469 109.832031 C 90.019531 109.480469 90.605469 109.164062 91.28125 108.992188 C 94.492188 108.152344 97.710938 107.351562 100.921875 106.527344 C 101.597656 106.351562 102.265625 106.152344 103.015625 105.933594 C 101.8125 104.261719 99.914062 104.695312 98.148438 104.765625 L 98.261719 104.292969 L 99.566406 103.484375 C 98.179688 102.679688 96.992188 101.921875 95.753906 101.277344 C 92.613281 99.660156 89.441406 98.09375 86.296875 96.496094 C 84.90625 95.746094 84.597656 95.996094 84.457031 97.554688 C 84.3125 99.113281 84.027344 100.671875 83.808594 102.230469 L 83.320312 102.230469 C 83.199219 101.640625 82.804688 100.898438 83.019531 100.476562 C 84.042969 98.507812 82.808594 96.730469 82.636719 94.902344 C 82.636719 94.59375 81.886719 94.292969 81.457031 94.089844 C 79.8125 93.34375 78.152344 92.644531 76.378906 91.84375 L 77.433594 90.472656 L 79.777344 91.175781 L 79.152344 92.105469 C 79.226562 92.203125 79.324219 92.34375 79.332031 92.34375 C 80.910156 91.355469 82.5625 92.34375 84.171875 92.15625 C 84.449219 92.15625 84.761719 92.457031 85.0625 92.609375 L 92.957031 96.550781 C 94.226562 96.21875 93.867188 93.949219 95.960938 94.175781 L 94.789062 96.242188 L 97.433594 97.425781 L 97.335938 97.765625 L 94.105469 96.683594 L 93.988281 97.042969 L 102.386719 100.253906 L 102.601562 99.855469 L 101.363281 99.195312 C 100.105469 97.003906 98.324219 95.15625 96.179688 93.8125 L 96.300781 93.230469 C 95.640625 92.875 95.011719 92.457031 94.429688 91.984375 C 92.0625 89.617188 89.714844 87.234375 87.429688 84.78125 C 86.847656 84.082031 86.449219 83.246094 86.273438 82.355469 C 88.105469 83.667969 90.457031 83.800781 91.90625 85.839844 C 93.222656 87.691406 95.277344 89.023438 97.035156 90.5625 C 97.242188 90.753906 97.507812 90.867188 97.789062 90.875 C 98.929688 90.792969 100.042969 90.636719 101.542969 90.464844 L 85.019531 62.125 L 74.871094 71.5625 C 75.351562 72.632812 77.507812 73.121094 75.929688 75.195312 C 74.578125 73.609375 73.257812 72.050781 71.84375 70.398438 L 68.597656 77.894531 L 68.871094 78.050781 L 69.710938 77.027344 L 70.042969 77.21875 C 69.253906 78.695312 68.5 80.121094 67.75 81.574219 L 67.082031 81.335938 C 67.414062 80.097656 67.78125 78.875 68.074219 77.632812 C 68.703125 74.925781 69.371094 72.222656 69.875 69.492188 C 69.875 68.8125 69.605469 68.164062 69.125 67.679688 C 68.101562 66.5625 66.871094 65.664062 65.863281 64.523438 C 64.992188 63.410156 64.183594 62.246094 63.445312 61.039062 L 63.84375 60.710938 L 72.859375 69.792969 C 73.429688 69.046875 74.058594 68.339844 74.734375 67.6875 C 75.382812 67.132812 75.890625 66.113281 77.070312 66.570312 C 77.160156 66.570312 77.453125 66.390625 77.515625 66.234375 C 78.671875 63.324219 81.503906 62.148438 83.667969 60.238281 C 83.804688 60.054688 83.933594 59.863281 84.050781 59.667969 L 72.03125 38.425781 L 69.777344 40.351562 L 71.722656 34.988281 L 71.152344 35.152344 L 69.597656 33.757812 L 69.890625 33.40625 L 70.890625 34.273438 L 67.804688 27.160156 L 68.140625 27.003906 C 68.683594 28.152344 69.191406 29.3125 69.769531 30.445312 C 72.136719 35.113281 74.511719 39.722656 76.929688 44.363281 C 77.554688 45.449219 78.277344 46.480469 79.09375 47.433594 C 80.933594 49.746094 82.285156 52.40625 83.074219 55.253906 C 83.5625 57.035156 84.882812 58.582031 85.816406 60.246094 C 87.484375 63.242188 89.136719 66.179688 90.847656 69.238281 L 96.511719 66.988281 C 96.828125 66.871094 97.171875 66.824219 97.496094 66.734375 C 98.359375 66.496094 99.222656 66.253906 100.078125 65.984375 C 100.214844 65.921875 100.34375 65.84375 100.460938 65.753906 C 102.714844 64.546875 102.714844 64.554688 102.097656 62.066406 C 100.914062 57.257812 99.738281 52.449219 98.578125 47.636719 C 98.535156 47.269531 98.535156 46.898438 98.578125 46.527344 L 99.066406 46.4375 C 101.378906 56.34375 103.6875 66.246094 105.996094 76.148438 L 105.382812 76.296875 C 105.019531 74.730469 104.628906 73.164062 104.316406 71.597656 C 104.03125 70.28125 103.796875 68.945312 103.511719 67.632812 C 103.324219 66.757812 102.976562 66.136719 101.867188 66.554688 C 100.523438 67.101562 99.140625 67.558594 97.796875 68.121094 C 95.851562 68.921875 93.933594 69.785156 91.875 70.675781 C 93.535156 73.75 95.152344 76.777344 96.796875 79.785156 C 98.6875 83.246094 100.632812 86.679688 102.496094 90.15625 C 102.648438 90.441406 102.386719 90.964844 102.289062 91.371094 C 102.191406 91.777344 102.0625 92.269531 101.941406 92.710938 L 102.292969 92.847656 L 103.464844 91.878906 C 104.675781 94.300781 105.871094 96.632812 106.996094 99 C 107.46875 100.003906 108.046875 100.671875 109.332031 100.433594 C 108.242188 96.820312 106.472656 93.402344 107.140625 89.023438 C 107.523438 90.890625 107.816406 92.332031 108.117188 93.777344 L 108.339844 93.777344 L 107.558594 87.242188 L 107.921875 87.171875 C 108.382812 88.550781 108.746094 89.957031 109.007812 91.386719 C 109.242188 93.3125 109.085938 95.289062 109.324219 97.21875 C 109.421875 97.964844 110.136719 98.714844 110.753906 99.707031 L 112.203125 97.996094 C 111.976562 99.007812 112.035156 99.929688 111.609375 100.363281 C 111.019531 100.808594 110.277344 101.011719 109.542969 100.925781 C 108.191406 100.828125 107.230469 101.675781 106.472656 104.195312 L 109.347656 103.65625 C 108.136719 106.546875 108.882812 109.1875 109.691406 111.972656 C 111.195312 112.296875 112.863281 112.941406 114.507812 112.917969 C 116.152344 112.894531 117.683594 112.167969 119.429688 111.75 C 119.488281 111 119.429688 109.890625 120.929688 110.046875 C 120.179688 106.878906 119.480469 103.894531 118.75 100.761719 C 118.296875 101.082031 117.789062 101.324219 117.25 101.472656 C 116.027344 101.539062 114.800781 101.539062 113.578125 101.472656 C 113.488281 101.472656 113.390625 101.265625 113.3125 101.136719 C 113.269531 101.042969 113.238281 100.945312 113.222656 100.84375 C 112.832031 99.203125 112.832031 97.605469 111.863281 95.929688 C 110.894531 94.25 111.609375 91.707031 111.59375 89.535156 C 111.59375 86.722656 111.59375 83.914062 111.535156 81.109375 C 111.472656 79.25 111.121094 77.40625 111.082031 75.550781 C 111.007812 71.800781 111.082031 68.105469 110.949219 64.367188 C 111.039062 66.316406 111.097656 68.277344 111.226562 70.226562 C 111.625 76.410156 111.976562 82.59375 112.515625 88.769531 C 112.84375 91.164062 113.292969 93.542969 113.871094 95.890625 C 114.09375 97.015625 114.539062 97.945312 115.914062 97.953125 C 115.5 95.621094 117.535156 92.351562 118.648438 91.035156 L 118.648438 94.4375 L 117.46875 96.347656 L 120.171875 96.484375 C 120.246094 96.242188 120.441406 95.566406 120.652344 94.902344 C 120.789062 94.488281 120.824219 93.898438 121.117188 93.703125 C 122.769531 92.613281 121.988281 91.796875 120.871094 90.898438 L 119.53125 92.546875 C 118.464844 89.902344 119.449219 87.660156 119.824219 85.382812 L 120.382812 85.425781 C 120.195312 86.664062 120.007812 87.910156 119.78125 89.429688 L 121.238281 87.457031 L 120.488281 85.960938 L 122.371094 86.328125 L 121.875 88.101562 L 123.523438 90.269531 C 124.0625 90.007812 124.738281 89.632812 125.453125 89.347656 C 128.667969 88.035156 129.523438 84.671875 131.550781 82.332031 C 133.578125 79.992188 135.472656 77.234375 137.425781 74.679688 C 138.175781 73.726562 138.925781 72.796875 139.859375 71.613281 L 135.5625 70.804688 L 135.5625 70.476562 C 136.394531 70.476562 137.230469 70.476562 138.054688 70.476562 C 139.992188 70.574219 141 70.527344 142.03125 68.445312 C 144.035156 64.390625 146.265625 60.453125 148.390625 56.453125 C 148.585938 55.996094 148.867188 55.582031 149.21875 55.230469 C 149.253906 55.671875 149.480469 56.210938 149.308594 56.527344 C 146.867188 60.980469 144.53125 65.519531 141.796875 69.800781 C 139.65625 73.1875 136.988281 76.246094 134.636719 79.542969 C 131.941406 83.292969 129.328125 87.097656 126.691406 90.882812 C 126.40625 91.398438 126.15625 91.925781 125.941406 92.472656 C 127.953125 91.222656 129.597656 90.222656 131.199219 89.210938 C 135.027344 86.675781 138.621094 83.808594 141.9375 80.636719 C 145.152344 77.640625 148.789062 75.128906 152.28125 72.453125 C 154.640625 70.648438 157.066406 68.929688 159.484375 67.15625 C 159.191406 65.65625 156.742188 64.652344 158.433594 62.65625 L 160.6875 66.269531 L 178.550781 54.160156 C 178.617188 55.3125 178.011719 56.40625 176.996094 56.960938 C 170.371094 61.457031 163.820312 66.054688 157.230469 70.585938 C 156.203125 71.292969 154.980469 71.71875 154.015625 72.492188 C 151.765625 74.289062 149.691406 76.238281 147.496094 78.089844 C 145.304688 79.941406 142.992188 81.703125 140.84375 83.574219 C 137.597656 86.371094 134.367188 89.199219 131.214844 92.089844 C 130.152344 93.066406 129.394531 94.339844 128.402344 95.402344 C 127.832031 96.011719 127.042969 96.414062 126.414062 96.976562 C 126.234375 97.140625 126.285156 97.5625 126.226562 97.863281 C 126.546875 97.863281 126.976562 98.003906 127.1875 97.863281 C 130.730469 95.792969 134.253906 93.679688 137.792969 91.601562 C 138.382812 91.226562 139.066406 91.019531 139.769531 91.011719 C 137.371094 92.414062 134.96875 93.808594 132.582031 95.222656 C 131.5 95.867188 130.417969 96.511719 129.394531 97.238281 C 128.996094 97.609375 128.644531 98.03125 128.351562 98.492188 L 128.675781 98.941406 L 133.820312 96.851562 L 134.023438 97.195312 C 133.617188 97.433594 133.210938 97.695312 132.789062 97.945312 C 131.609375 98.488281 130.460938 99.101562 129.351562 99.773438 C 128.914062 100.074219 128.816406 100.867188 128.597656 101.4375 C 129.140625 101.5625 129.734375 101.910156 130.207031 101.789062 C 133.210938 101.039062 136.117188 100.15625 139.09375 99.382812 C 139.609375 99.328125 140.132812 99.355469 140.640625 99.464844 L 138.386719 102.027344 C 138.207031 101.015625 137.726562 100.703125 136.734375 101.738281 C 136.328125 102.015625 135.875 102.214844 135.398438 102.328125 C 135.496094 102.53125 135.789062 102.859375 135.71875 103.003906 C 135.125 104.148438 134.464844 105.25 133.757812 106.519531 C 133.488281 105.445312 133.300781 104.578125 133.054688 103.722656 C 132.542969 102.007812 131.453125 102.929688 130.417969 103.214844 L 130.84375 104.066406 L 127.621094 105.191406 L 127.621094 105.769531 C 128.589844 106.117188 129.578125 106.398438 130.582031 106.609375 C 131.761719 106.683594 132.941406 106.683594 134.121094 106.609375 L 131.378906 108.421875 C 131.507812 109.171875 131.679688 109.464844 131.597656 109.703125 C 131.070312 111.203125 131.597656 111.996094 133.097656 112.09375 C 137.183594 112.371094 141.285156 112.589844 145.207031 114.246094 C 146.152344 112.925781 146.609375 111.75 145.46875 110.289062 C 145.0625 109.769531 145.246094 108.835938 145.019531 108.128906 C 144.90625 107.761719 144.492188 107.484375 144.214844 107.171875 L 143.839844 107.394531 L 143.839844 106.160156 L 142.035156 106.160156 L 141.992188 105.84375 C 142.992188 105.425781 143.980469 104.960938 144.996094 104.636719 C 145.183594 104.578125 145.746094 105.078125 145.808594 105.386719 C 146.085938 107.558594 146.023438 109.777344 147.078125 111.816406 C 147.226562 112.101562 146.875 112.625 146.804688 113.054688 C 146.683594 113.503906 146.667969 113.976562 146.753906 114.433594 C 146.800781 114.582031 147.503906 114.539062 147.878906 114.589844 C 150.214844 114.875 152.574219 115.054688 154.894531 115.476562 C 160.90625 116.554688 166.839844 117.777344 172.816406 118.878906 C 177.414062 119.722656 182.035156 120.453125 186.632812 121.289062 C 189.417969 121.800781 192.183594 122.4375 194.953125 123.023438 L 194.878906 123.417969 L 187.292969 122.085938 C 181.011719 120.992188 174.75 119.835938 168.445312 118.832031 C 164.269531 118.171875 160.050781 117.796875 155.859375 117.222656 C 154.898438 116.996094 153.921875 117.503906 153.550781 118.414062 C 153.109375 119.253906 152.582031 120.046875 152.050781 120.953125 C 162.136719 124.632812 171.953125 128.90625 181.132812 134.550781 C 177.070312 132.570312 173.050781 130.488281 168.925781 128.628906 C 164.804688 126.769531 160.558594 125.121094 156.367188 123.382812 L 156.1875 123.773438 L 185.578125 141.152344 L 185.308594 141.609375 C 173.15625 134.699219 161.429688 127.054688 148.96875 120.496094 L 151.328125 120.832031 C 152.078125 119.664062 152.832031 118.441406 153.730469 117.085938 L 149.140625 116.238281 L 149.21875 116.066406 C 148.265625 116.121094 147.308594 116.214844 146.347656 116.230469 C 144.542969 116.207031 142.742188 116.292969 140.949219 116.488281 L 142.59375 117.3125 L 142.53125 117.601562 L 135.773438 116.5625 L 135.726562 116.808594 L 147.941406 120.144531 L 147.835938 120.5625 C 146.207031 120.175781 144.574219 119.753906 142.9375 119.394531 C 139.550781 118.644531 136.179688 117.894531 132.761719 117.199219 C 132.074219 117.132812 131.378906 117.273438 130.777344 117.609375 L 143.261719 123.253906 L 143.074219 123.6875 L 128.050781 117.242188 L 127.789062 117.542969 C 128.082031 117.945312 128.394531 118.328125 128.726562 118.699219 C 133.511719 123.542969 137.722656 128.921875 141.285156 134.722656 C 141.527344 135.105469 141.804688 135.464844 142.121094 135.792969 C 143.703125 137.480469 145.363281 139.105469 146.867188 140.867188 C 147.203125 141.421875 147.425781 142.035156 147.527344 142.671875 Z M 70.433594 139.179688 C 71.804688 140.496094 73.261719 141.722656 74.789062 142.855469 C 75.410156 143.265625 76.449219 144.179688 77.433594 142.957031 C 79.378906 140.53125 81.421875 138.183594 83.382812 135.761719 C 83.621094 135.4375 83.699219 135.019531 83.589844 134.632812 C 83.074219 133.5 80.667969 132.847656 79.601562 133.507812 C 76.570312 135.375 73.542969 137.253906 70.433594 139.179688 Z M 125.585938 123.945312 C 124.414062 123.195312 123.917969 121.386719 122.191406 122.371094 C 123.304688 124.511719 122.941406 127.382812 125.40625 128.929688 C 125.824219 128.390625 126.289062 127.886719 126.796875 127.429688 C 129.15625 125.707031 129.050781 122.992188 126.414062 121.492188 C 125.628906 121.054688 124.785156 120.726562 123.914062 120.519531 C 123.28125 120.449219 122.644531 120.449219 122.011719 120.519531 L 121.914062 120.023438 L 121.164062 121.253906 L 124.308594 121.253906 Z M 120.5625 131.910156 C 121.269531 131.550781 122.199219 131.355469 122.621094 130.785156 C 123.304688 129.890625 123.339844 128.65625 122.710938 127.722656 C 122.347656 127.015625 122.109375 126.257812 121.996094 125.472656 C 121.824219 124.558594 121.792969 123.621094 121.679688 122.476562 C 120.097656 123.097656 119.21875 123.667969 119.429688 125.128906 C 119.585938 126.355469 119.652344 127.601562 119.773438 128.875 C 119.8125 129.027344 119.867188 129.175781 119.929688 129.316406 L 120.398438 128.5 C 121.375 129.296875 121.394531 130.660156 120.5625 131.910156 Z M 115.941406 117.671875 C 114.929688 119.980469 115.542969 123.546875 117.324219 125.839844 C 117.519531 124.289062 117.699219 122.796875 117.886719 121.34375 L 116.679688 121.425781 C 118.414062 119.621094 118.414062 119.621094 115.941406 117.671875 Z M 127.675781 108.796875 L 126.171875 111.046875 L 128.382812 112.003906 L 129.132812 110.894531 Z M 101.09375 116.921875 C 99.433594 118.1875 97.628906 119.167969 96.855469 121.101562 C 98.101562 120.351562 99.308594 119.53125 100.46875 118.652344 C 101.03125 118.203125 101.902344 117.859375 101.09375 116.921875 Z M 128.011719 101.183594 C 127.613281 100.808594 127.261719 100.507812 126.945312 100.183594 C 126.632812 99.863281 126.144531 99.433594 126.195312 99.332031 C 126.742188 98.429688 125.78125 98.222656 125.550781 98.339844 C 125.136719 98.625 124.863281 99.066406 124.796875 99.5625 C 124.832031 99.988281 125.078125 100.367188 125.453125 100.574219 C 126.289062 100.816406 127.148438 100.996094 128.011719 101.105469 Z M 126.78125 107.179688 L 126.082031 105.679688 L 123.558594 107.671875 L 123.898438 108.046875 Z M 114.011719 125.601562 C 116.0625 124.796875 116.0625 124.789062 114.539062 122.390625 Z M 105.691406 98.933594 L 106.066406 98.664062 C 105.3125 97.515625 104.496094 96.363281 103.667969 95.238281 C 103.542969 95.066406 103.203125 95.011719 102.917969 94.984375 C 102.789062 95.109375 102.71875 95.28125 102.722656 95.464844 C 102.8125 95.65625 103.054688 95.769531 103.226562 95.921875 C 103.585938 96.21875 103.925781 96.546875 104.238281 96.894531 C 104.773438 97.523438 105.214844 98.230469 105.691406 98.933594 Z M 89.300781 129.289062 L 85.996094 130.855469 C 86.648438 131.515625 86.648438 131.515625 89.300781 129.289062 Z M 89.300781 129.289062 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 48.339844 152.304688 L 58.445312 145.820312 L 58.269531 145.550781 L 25.824219 161.703125 L 25.640625 161.351562 L 65.234375 140.082031 L 65.390625 141.796875 L 48.8125 152.996094 Z M 48.339844 152.304688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 211.289062 126.125 C 211.582031 126.386719 211.847656 126.808594 212.183594 126.875 C 214.679688 127.4375 217.195312 127.921875 219.695312 128.457031 C 224.246094 129.429688 228.792969 130.425781 233.683594 131.453125 C 231.113281 131.984375 198.882812 124.859375 197.253906 123.425781 C 200.21875 123.675781 202.96875 123.839844 205.695312 124.175781 C 209.683594 124.632812 213.640625 125.480469 217.636719 125.675781 C 223.527344 125.929688 229.4375 125.757812 235.34375 125.71875 C 236.476562 125.71875 237.59375 125.511719 238.746094 125.398438 L 238.886719 125.871094 C 238.558594 126.089844 238.191406 126.246094 237.804688 126.335938 C 231.796875 126.460938 225.789062 126.65625 219.777344 126.605469 C 217.070312 126.460938 214.371094 126.175781 211.6875 125.757812 Z M 202.78125 124.417969 L 202.707031 124.84375 C 204.847656 125.351562 206.996094 125.878906 209.144531 126.34375 C 210.214844 126.597656 210.285156 126.539062 210.328125 125.511719 Z M 202.78125 124.417969 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 82.691406 127.730469 C 81.40625 125.261719 80.152344 122.773438 78.835938 120.324219 C 77.335938 117.511719 75.832031 114.71875 74.21875 111.953125 C 73.933594 111.539062 73.484375 111.265625 72.984375 111.203125 C 71.289062 111.121094 69.589844 111.203125 67.886719 111.203125 L 67.808594 110.722656 C 68.460938 110.570312 69.121094 110.449219 69.785156 110.371094 C 72.789062 110.183594 75.914062 110.886719 78.835938 109.5 C 79.136719 109.359375 79.769531 109.253906 79.835938 109.375 C 80.371094 110.28125 81.171875 109.621094 81.820312 109.792969 C 82.808594 110.054688 83.074219 109.539062 83 108.683594 C 82.871094 107.183594 82.683594 105.6875 82.636719 104.1875 C 82.636719 103.789062 83.035156 103.386719 83.390625 102.6875 C 83.847656 105.273438 84.246094 107.484375 84.652344 109.761719 L 88.625 109.449219 L 88.683594 109.945312 L 75.570312 111.140625 C 76.492188 113.277344 76.953125 115.511719 78.265625 116.996094 C 79.160156 118.117188 79.917969 119.34375 80.519531 120.644531 C 81.089844 121.910156 81.59375 123.207031 82.023438 124.527344 C 82.195312 124.941406 82.554688 125.277344 82.683594 125.699219 C 82.84375 126.347656 82.964844 127.003906 83.050781 127.667969 Z M 82.691406 127.730469 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 212.246094 30.640625 C 212.070312 31.070312 211.832031 31.476562 211.539062 31.839844 C 208.0625 35.121094 204.671875 38.480469 200.625 41.125 C 194.75 44.976562 189.027344 49.070312 183.289062 53.019531 L 181.921875 51.960938 C 186.121094 49.300781 190.289062 46.714844 194.433594 44.019531 C 196.003906 43.011719 197.441406 41.8125 199.085938 40.929688 C 203.695312 38.402344 206.980469 34.28125 211.101562 31.1875 C 211.46875 30.96875 211.855469 30.796875 212.257812 30.667969 Z M 212.246094 30.640625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 158.082031 61.734375 L 156.652344 62.394531 C 156.332031 61.523438 155.945312 60.675781 155.496094 59.863281 C 153.996094 57.484375 152.238281 55.230469 150.839844 52.785156 C 150.359375 51.949219 149.757812 50.921875 150.433594 49.609375 C 151.359375 47.558594 152.179688 45.464844 152.890625 43.335938 C 153.046875 42.949219 153.34375 42.636719 153.722656 42.457031 C 153.027344 44.855469 152.335938 47.261719 151.515625 50.074219 C 154.882812 43.328125 158.058594 37.011719 161.226562 30.675781 L 161.820312 30.953125 C 161.296875 32.003906 160.777344 33.046875 160.257812 34.09375 C 157.707031 39.257812 155.1875 44.445312 152.566406 49.570312 C 151.917969 50.660156 151.972656 52.027344 152.710938 53.058594 C 154.304688 55.578125 155.898438 58.109375 157.496094 60.640625 C 157.707031 60.972656 157.886719 61.332031 158.082031 61.734375 Z M 158.082031 61.734375 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 184.695312 184.144531 L 178.105469 177.097656 L 177.761719 177.351562 L 177.683594 178.238281 L 163.578125 161.457031 L 163.8125 160.960938 C 164.261719 161.148438 164.847656 161.207031 165.132812 161.53125 C 167.222656 163.914062 169.242188 166.367188 171.308594 168.777344 C 172.058594 169.691406 172.90625 170.578125 173.734375 171.460938 L 184.324219 182.765625 C 184.609375 183.070312 184.84375 183.425781 185.078125 183.761719 Z M 184.695312 184.144531 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 199.324219 85.675781 C 199.90625 85.355469 200.519531 85.101562 201.15625 84.925781 C 203.480469 84.550781 205.835938 84.378906 208.152344 83.945312 C 211.441406 83.320312 214.746094 82.675781 217.976562 81.785156 C 223.730469 80.179688 229.421875 78.382812 235.148438 76.671875 C 236.242188 76.351562 237.347656 76.050781 238.453125 75.742188 L 238.78125 76.195312 C 238.421875 76.507812 238.105469 77.011719 237.691406 77.117188 C 234.769531 77.863281 231.804688 78.425781 228.90625 79.242188 C 224.796875 80.390625 220.726562 81.671875 216.660156 82.992188 C 211.605469 84.601562 206.378906 85.238281 201.128906 85.78125 C 200.566406 85.839844 200 85.9375 199.429688 86.011719 Z M 199.324219 85.675781 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 95.542969 203.554688 C 96.699219 194.113281 97.859375 184.671875 99.019531 175.230469 L 99.644531 175.308594 L 96.242188 203.636719 Z M 95.542969 203.554688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 146.617188 179.316406 C 145.070312 179.273438 144.800781 178.011719 144.367188 177.066406 C 143.382812 174.925781 142.578125 172.707031 141.570312 170.578125 C 141.027344 169.660156 140.429688 168.773438 139.785156 167.925781 C 139.3125 167.179688 138.910156 166.390625 138.582031 165.570312 C 138.507812 165.390625 138.859375 164.941406 139.121094 164.769531 C 139.257812 164.679688 139.746094 164.867188 139.875 165.054688 C 140.777344 166.496094 141.609375 167.984375 142.359375 169.511719 C 143.816406 172.691406 145.160156 175.921875 146.617188 179.316406 Z M 146.617188 179.316406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M -15.683594 176.132812 L 17.65625 165.1875 L 17.777344 165.40625 C 17.394531 165.671875 16.988281 165.902344 16.5625 166.089844 C 5.878906 169.617188 -4.808594 173.136719 -15.503906 176.65625 Z M -15.683594 176.132812 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 48.589844 78.140625 C 41.730469 74.835938 34.378906 72.519531 28.242188 67.753906 L 48.84375 77.675781 Z M 48.589844 78.140625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 160.632812 90.785156 C 159.84375 91.429688 158.996094 92.003906 158.101562 92.496094 C 153.332031 94.601562 148.542969 96.640625 143.734375 98.671875 C 143.269531 98.785156 142.792969 98.832031 142.316406 98.804688 L 142.226562 98.242188 C 144.792969 97.253906 147.386719 96.300781 149.9375 95.246094 C 153.523438 93.792969 157.082031 92.246094 160.648438 90.792969 Z M 160.632812 90.785156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 81.5625 114.449219 C 82.53125 114.101562 83.492188 113.699219 84.484375 113.4375 C 86.167969 112.957031 87.871094 112.558594 89.5625 112.09375 C 90.570312 111.816406 91.539062 111.457031 92.167969 112.746094 C 92.296875 113 92.734375 113.105469 93.25 113.414062 L 91.882812 114.109375 L 91.882812 117.363281 L 91.5 117.445312 L 90.847656 112.695312 L 81.660156 114.769531 Z M 81.5625 114.449219 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 100.238281 136.78125 L 91.457031 137.675781 L 91.386719 137.203125 C 92.890625 136.976562 94.4375 136.746094 95.960938 136.527344 C 96.320312 136.464844 96.679688 136.425781 97.042969 136.40625 C 99.386719 136.371094 101.355469 135.757812 102.203125 133.238281 C 102.445312 132.738281 102.816406 132.3125 103.277344 132.007812 L 100.273438 139.285156 C 99.792969 138.957031 99.792969 138.957031 100.238281 136.78125 Z M 100.238281 136.78125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 125.585938 155.28125 L 129.710938 171.820312 L 129.214844 171.949219 C 127.742188 166.453125 126.273438 160.957031 124.804688 155.460938 Z M 125.585938 155.28125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 160.648438 90.816406 C 162.796875 89.878906 164.886719 88.808594 167.09375 88.035156 C 170.144531 86.964844 173.269531 86.117188 176.363281 85.179688 L 176.5 85.578125 C 174.742188 86.140625 172.984375 86.6875 171.242188 87.269531 C 168.484375 88.1875 165.726562 89.109375 162.976562 90.097656 C 162.539062 90.351562 162.195312 90.746094 162 91.214844 C 161.730469 91.828125 161.507812 92.460938 161.332031 93.109375 C 161.019531 92.058594 160.824219 91.421875 160.628906 90.785156 Z M 160.648438 90.816406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 197.695312 86.066406 L 180.96875 89.113281 L 180.878906 88.628906 L 197.605469 85.441406 Z M 197.695312 86.066406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 56.257812 51.339844 C 58.511719 51.199219 59.96875 49.699219 61.425781 48.171875 C 61.113281 48.523438 60.835938 48.90625 60.597656 49.316406 C 60.019531 50.554688 59.515625 51.824219 59.097656 53.125 C 58.992188 53.46875 59.441406 54.023438 59.714844 54.4375 C 60.246094 55.105469 60.652344 55.867188 60.90625 56.683594 L 56.316406 51.308594 Z M 56.257812 51.339844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 136.207031 52.246094 L 140.324219 38.757812 L 140.691406 38.867188 C 139.917969 43.535156 138.402344 48.050781 136.207031 52.246094 Z M 136.207031 52.246094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 119.886719 72.640625 C 119.804688 73.847656 119.667969 75.054688 119.636719 76.261719 C 119.609375 77.46875 119.707031 78.734375 119.691406 80.007812 C 119.6875 81.242188 119.542969 82.472656 119.253906 83.671875 C 118.339844 82.003906 118.894531 80.179688 118.855469 78.425781 C 118.804688 76.492188 119.058594 74.558594 119.1875 72.625 Z M 119.886719 72.640625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 78.019531 74.800781 C 80.535156 76.148438 82.074219 78.316406 81.398438 79.886719 C 80.605469 79.058594 79.734375 78.308594 78.800781 77.640625 C 77.515625 76.875 77.980469 75.820312 78.019531 74.800781 Z M 78.019531 74.800781 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 147.105469 180.089844 L 152.363281 191.242188 L 151.785156 191.503906 L 146.527344 180.375 Z M 147.105469 180.089844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 95.894531 36.996094 C 94.828125 32.816406 93.757812 28.644531 92.6875 24.472656 L 93.199219 24.328125 C 94.65625 28.40625 95.265625 32.707031 96.488281 36.835938 Z M 95.894531 36.996094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 190.753906 189.792969 L 196.433594 194.132812 L 195.398438 195.332031 L 190.441406 190.085938 Z M 190.753906 189.792969 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 39.359375 34.191406 C 37.007812 32.925781 34.851562 29.769531 32.289062 27.058594 L 32.582031 26.75 Z M 39.359375 34.191406 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 144.183594 24.515625 L 141.730469 34.597656 L 141.144531 34.453125 C 141.964844 31.089844 142.78125 27.722656 143.589844 24.351562 Z M 144.183594 24.515625 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 119.464844 67.304688 C 119.074219 64.375 120.277344 61.5625 120.140625 58.65625 L 120.808594 58.707031 C 120.488281 61.539062 120.175781 64.398438 119.871094 67.273438 Z M 119.464844 67.304688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 114.605469 147.335938 C 117.976562 144.59375 118.984375 144.449219 119.625 146.472656 Z M 114.605469 147.335938 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 212.273438 30.660156 C 214.226562 28.070312 216.839844 26.253906 219.246094 24.1875 L 219.652344 24.664062 L 212.246094 30.660156 Z M 212.273438 30.660156 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 58.21875 49.847656 L 64.339844 42.9375 L 64.707031 43.253906 C 63.703125 44.40625 62.695312 45.570312 61.703125 46.707031 C 60.710938 47.847656 59.644531 48.996094 58.609375 50.140625 Z M 58.21875 49.847656 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 154.753906 196.953125 L 157.613281 203.523438 L 157.121094 203.742188 L 154.128906 197.15625 Z M 154.753906 196.953125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 203.171875 203.78125 L 197.09375 197.175781 L 197.484375 196.816406 L 203.546875 203.433594 Z M 203.171875 203.78125 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 121.367188 48.648438 L 121.003906 55.582031 L 120.417969 55.582031 L 120.871094 48.589844 Z M 121.367188 48.648438 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 56.296875 51.304688 L 52.015625 47.449219 L 52.390625 47.03125 C 53.597656 48.09375 54.832031 49.144531 55.996094 50.261719 C 56.21875 50.476562 56.175781 51.011719 56.257812 51.339844 Z M 56.296875 51.304688 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 97.042969 112.425781 L 95.851562 112.070312 C 95.4375 111.210938 96.496094 109.882812 94.789062 109.613281 C 96.457031 109.1875 97.457031 110.460938 97.042969 112.425781 Z M 97.042969 112.425781 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 207.527344 203.863281 L 202.953125 200.308594 L 203.285156 199.882812 L 207.875 203.441406 Z M 207.527344 203.863281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 8.410156 57.089844 L 12.917969 59.464844 L 12.753906 59.800781 L 8.140625 57.621094 Z M 8.410156 57.089844 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 100.640625 168.957031 L 99.582031 174.203125 L 99.042969 174.085938 L 100.335938 168.921875 Z M 100.640625 168.957031 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 189.296875 188.871094 C 188.230469 187.71875 187.160156 186.566406 186.082031 185.417969 L 186.195312 185.328125 L 189.613281 188.574219 Z M 189.296875 188.871094 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 138.027344 102.753906 C 137.328125 104.382812 138.429688 104.816406 139.867188 105.070312 L 139.371094 105.589844 L 136.636719 104.53125 Z M 138.027344 102.753906 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 95.542969 199.238281 C 95.207031 200.738281 94.863281 202.214844 94.511719 203.675781 L 93.972656 203.539062 L 95.1875 199.132812 Z M 95.542969 199.238281 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 24.304688 162.421875 L 20.371094 164.273438 L 20.152344 163.832031 L 24.058594 161.914062 Z M 24.304688 162.421875 "></path><path style="stroke:none;fill-rule:nonzero;fill:currentColor;fill-opacity:1;" d="M 82.457031 80.195312 C 82.902344 80.195312 83.546875 80.015625 83.726562 80.195312 C 84.035156 80.6875 84.261719 81.226562 84.386719 81.792969 L 84.050781 81.980469 L 82.335938 80.71875 Z M 82.457031 80.195312 "></path></g>',1),Qf=[Jf];function td(i,t){return Y(),i1("svg",Xf,Qf)}const ed=x1(Yf,[["render",td]]),id={},nd={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},od=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 118.261719 35.578125 C 118.699219 36.199219 119.089844 36.847656 119.441406 37.519531 C 127.246094 54.839844 136.484375 71.441406 145.070312 88.371094 C 145.460938 89.46875 146.570312 90.140625 147.722656 89.984375 C 153.515625 89.8125 159.320312 89.820312 165.113281 89.707031 C 167.238281 89.707031 169.363281 89.476562 171.488281 89.363281 C 171.644531 89.375 171.796875 89.417969 171.9375 89.488281 L 171.9375 89.738281 C 171.558594 90.21875 171.128906 90.652344 170.65625 91.042969 C 169.75 91.632812 168.8125 92.171875 167.84375 92.660156 C 167.257812 92.960938 166.644531 93.265625 166.261719 92.335938 C 166.097656 92.128906 165.84375 92.011719 165.578125 92.023438 C 163.375 92.1875 161.175781 92.34375 158.980469 92.585938 C 155.273438 93.003906 151.574219 93.597656 147.851562 93.902344 C 141.886719 94.390625 135.898438 94.765625 129.921875 95.074219 C 126.269531 95.261719 122.605469 95.230469 118.941406 95.289062 C 117.625 95.289062 116.304688 95.289062 114.988281 95.289062 L 74.511719 95.875 C 69.890625 96.074219 65.316406 96.832031 60.878906 98.125 C 60.074219 98.332031 59.234375 98.394531 58.152344 98.566406 C 59.53125 96.496094 59.496094 96.316406 57.65625 95.882812 C 58.835938 94.769531 60.285156 93.984375 61.863281 93.597656 C 67.882812 92.546875 73.972656 91.960938 80.082031 91.84375 C 80.503906 91.800781 80.882812 91.582031 81.136719 91.242188 C 88.488281 78.457031 97.210938 66.554688 105.171875 54.171875 C 107.9375 49.878906 110.429688 45.390625 112.894531 40.921875 C 114.148438 38.675781 115.5 36.605469 118.007812 35.601562 Z M 83.375 91.789062 L 141.847656 90.238281 L 116.136719 39.722656 C 115.941406 40.066406 115.6875 40.511719 115.425781 40.945312 C 111.667969 47.097656 108.117188 53.371094 104.15625 59.367188 C 97.398438 69.597656 90.359375 79.679688 84.199219 90.3125 C 83.96875 90.6875 83.765625 91.046875 83.375 91.761719 Z M 83.375 91.789062 "})],-1),sd=[od];function rd(i,t){return Y(),i1("svg",nd,sd)}const ld=x1(id,[["render",rd]]),ad={},cd={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},ud=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 114.847656 44.640625 C 146.011719 44.65625 174.070312 63.484375 185.835938 92.28125 C 197.601562 121.078125 190.738281 154.117188 168.464844 175.871094 C 146.195312 197.625 112.945312 203.773438 84.34375 191.421875 C 55.742188 179.070312 37.472656 150.679688 38.117188 119.589844 C 38.921875 78.871094 72.257812 44.65625 114.847656 44.640625 Z M 147.894531 164.703125 L 71.28125 88.253906 C 57.289062 105.152344 54.101562 136.109375 74.511719 158.226562 C 95.226562 180.695312 127.839844 180.492188 147.886719 164.703125 Z M 87.949219 73.539062 L 162.527344 147.957031 C 173.425781 129.640625 172.617188 102.507812 154.648438 83.613281 C 135.675781 63.648438 107.289062 62.207031 87.949219 73.539062 Z M 87.949219 73.539062 "})],-1),hd=[ud];function fd(i,t){return Y(),i1("svg",cd,hd)}const dd=x1(ad,[["render",fd]]),Cd={},pd={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 230 267",version:"1.1"},vd=w("g",{id:"surface1"},[w("path",{style:{stroke:"none","fill-rule":"nonzero",fill:"currentColor","fill-opacity":"1"},d:"M 37.480469 76.734375 C 38.132812 74.996094 39.53125 74.140625 41.128906 73.316406 C 46.042969 70.78125 51.449219 70.453125 56.738281 69.613281 C 64.296875 68.390625 71.867188 67.265625 79.398438 65.957031 C 84.304688 65.101562 88.007812 66.757812 90.601562 70.855469 C 94.183594 76.523438 97.644531 82.273438 101.117188 88 C 105.242188 94.753906 109.351562 101.515625 113.449219 108.28125 C 113.855469 108.945312 114.335938 109.574219 114.800781 110.257812 L 159.273438 69.90625 L 158.988281 69.238281 C 158.285156 69.003906 157.550781 68.859375 156.8125 68.804688 C 153.597656 68.984375 150.398438 69.335938 147.191406 69.484375 C 144.574219 69.613281 141.699219 70.378906 139.980469 67.386719 C 139.738281 66.960938 139.289062 66.253906 139.421875 66.097656 C 139.816406 65.609375 140.371094 65.269531 140.984375 65.136719 C 144.53125 64.800781 148.074219 64.472656 151.628906 64.328125 C 163.777344 63.859375 175.925781 63.445312 188.074219 63.085938 C 189.007812 63.171875 189.929688 63.375 190.816406 63.691406 L 190.753906 64.375 C 190.335938 64.667969 189.921875 64.972656 189.476562 65.234375 C 182.71875 69.15625 176.085938 73.1875 169.265625 76.949219 C 159.011719 82.59375 150.066406 90 141.195312 97.496094 C 134.839844 102.867188 128.734375 108.519531 122.484375 113.984375 C 121.472656 114.730469 121.15625 116.097656 121.734375 117.214844 C 122.539062 119.050781 123.144531 121.011719 124.234375 122.667969 C 133.015625 136.078125 141.699219 149.5625 150.816406 162.738281 C 156.488281 170.921875 163.714844 177.628906 172.886719 182 C 176.132812 183.613281 179.730469 184.386719 183.355469 184.25 C 185.699219 184.265625 188.03125 184.574219 190.296875 185.171875 C 192.332031 185.605469 192.679688 187.589844 191.207031 189.128906 C 189.261719 191.289062 186.445312 192.460938 183.535156 192.3125 C 170.578125 192.027344 157.609375 192.019531 144.644531 191.855469 C 142.5625 191.808594 140.480469 191.648438 138.417969 191.382812 C 134.804688 190.964844 132.105469 188.796875 129.664062 186.363281 C 118.59375 175.300781 108.898438 163.203125 101.632812 149.253906 C 99.652344 145.453125 97.34375 141.828125 95.179688 138.117188 C 94.273438 136.542969 93.117188 136.214844 91.546875 137.277344 C 76.140625 147.769531 65.023438 160.878906 64.59375 180.679688 C 64.492188 185.828125 64.777344 190.875 66.480469 195.738281 C 67.101562 197.570312 68.007812 199.289062 69.171875 200.835938 C 70.339844 202.332031 70.125 203.144531 68.53125 203.871094 L 66.128906 203.871094 C 64.191406 202.84375 62.207031 201.882812 60.320312 200.773438 C 54.144531 197.019531 47.53125 194.03125 40.628906 191.871094 C 39.554688 191.546875 38.53125 191.046875 37.480469 190.625 L 37.480469 185.378906 C 37.746094 184.714844 38.058594 184.066406 38.410156 183.4375 C 44.5625 173.988281 50.820312 164.625 59.210938 156.914062 C 68.222656 148.667969 77.125 140.3125 86.078125 132.015625 C 88.179688 130.058594 88.375 129.175781 87.242188 126.558594 C 86.964844 125.949219 86.648438 125.359375 86.289062 124.789062 C 81.585938 117.136719 76.882812 109.480469 72.175781 101.828125 C 67.050781 93.484375 61.515625 85.441406 54.410156 78.5625 C 53.46875 77.511719 51.960938 77.171875 50.65625 77.714844 C 47.648438 78.597656 44.554688 79.214844 41.507812 79.964844 C 39.558594 80.441406 38.269531 79.707031 37.480469 77.933594 Z M 37.480469 76.734375 "})],-1),md=[vd];function yd(i,t){return Y(),i1("svg",pd,md)}const gd=x1(Cd,[["render",yd]]),Rt=()=>{const i=S5(),{lang:t}=V2(i),e=f=>({jp:"超高校級の",zh:"超高校級的",en:"Ultimate"})[f],n=m1(()=>e(t.value)),o=z1([]),s=(f,C)=>{var p;const d={};for(let v in f){const g=new RegExp(`(.+)(_${C})`,"i"),_=((p=v.match(g))==null?void 0:p[1])??v;d[_]=f[v]}return JSON.parse(JSON.stringify(d))},r=f=>{const C=o.value.map(p=>s(p,f));C.sort((p,v)=>v.id-p.id);const d=C.pop();return d&&C.unshift(d),C},l=m1(()=>r(t.value)),a=[{id:0,src:"https://images.plurk.com/31teAGRb4KqW7mcpepe4HC.png"},{id:1,src:"https://images.plurk.com/39vYYxhHk30CMo8zRlYJ0h.png"},{id:2,src:"https://images.plurk.com/YzHVyCSAAVtZpGSGD2u5y.png"},{id:3,src:"https://images.plurk.com/6jqxdjKu7JbrcjMqMsxQVO.png"},{id:4,src:"https://images.plurk.com/6P41emG0ccxoUOCa8LkYou.png"},{id:5,src:"https://images.plurk.com/2eAdekb7qRJnQAoA0R8qLq.png"},{id:6,src:"https://images.plurk.com/6yLEYxtBszOqRFxhNgF25C.png"},{id:7,src:"https://images.plurk.com/2Lbdc565YcgReayBrrgFxP.png"},{id:8,src:"https://images.plurk.com/3RcmKGcwRL3azk9WLNwpUH.png"},{id:9,src:"https://images.plurk.com/47QRWYDpXykNI3WhdlonAJ.png"},{id:10,src:"https://images.plurk.com/7K3Dtapsrj3qABzzSE5qav.png"},{id:11,src:"https://images.plurk.com/4tukPKbbrcyqWPnHyP3xYo.png"},{id:12,src:"https://images.plurk.com/8ceQKAHTLcRcUDOFWs2Ld.png"},{id:13,src:"https://images.plurk.com/5faT1UpRuQNEwcj2iJInqS.png"},{id:14,src:"https://images.plurk.com/2yVVhyXqNIFvroCdN1e76T.png"},{id:15,src:"https://images.plurk.com/3CZsllEKf9DpWzbmL7sQz8.png"}],c=[{id:0,src:"https://images.plurk.com/6ZwXBTYCRu5BJYaRQN1tcf.png"},{id:1,src:"https://images.plurk.com/5hg6LiUBqxnF25UXkWmEXA.png"},{id:2,src:"https://images.plurk.com/10k317tSJOdSmlY1FJJqeT.png"},{id:3,src:"https://images.plurk.com/7D420HqsK4aSx9ncBPk40e.png"},{id:4,src:"https://images.plurk.com/4HquymS0ZS1p9CCmO0W5pP.png"},{id:5,src:"https://images.plurk.com/5osmRwy7r72Fn8xV0fTgqI.png"},{id:6,src:"https://images.plurk.com/2iYov807qWG61HFdjVcNEw.png"},{id:7,src:"https://images.plurk.com/6u576XDgOuHfPL2wI3iTVj.png "},{id:8,src:"https://images.plurk.com/7LRXdFPHZOT2ezZNkQDoqj.png"},{id:9,src:"https://images.plurk.com/1qgEHwjztlaecq9tnMFzzW.png"},{id:10,src:"https://images.plurk.com/3cl3nEjtBmteBmI7e3PGFx.png"},{id:11,src:"https://images.plurk.com/5N9VnbHrFIvSprZNbzNzWP.png"},{id:12,src:"https://images.plurk.com/3ywB6rjENIAQj2TL7GTk9o.png"},{id:13,src:"https://images.plurk.com/5VYMp3nehSmAHtaCtnoKw5.png"},{id:14,src:"https://images.plurk.com/1vsmiGNsmAyaJBUqrY67Hs.png"},{id:15,src:"https://images.plurk.com/6uGMy239nILTgJbhOvOUE7.png"}],u=[{id:0,component:Ah},{id:1,component:Bh},{id:2,component:Gh},{id:3,component:tf},{id:4,component:lf},{id:5,component:df},{id:6,component:gf},{id:7,component:xf},{id:8,component:Of},{id:9,component:Df},{id:10,component:Hf},{id:11,component:Kf},{id:12,component:ed},{id:13,component:ld},{id:14,component:dd},{id:15,component:gd}];return y8(async()=>{o.value=Sh}),{getAbilityText:e,abilityText:n,getCharData:r,characterData:l,abilityImgList:a,tachieImgList:c,predictionXList:u}},I8=()=>({publicSrc:t=>`/TenDanganronpa${t}`});const _d=i=>(c5("data-v-26bc36d3"),i=i(),u5(),i),bd=_d(()=>w("span",{class:"font-sans font-medium tracking-widest text-white"},"LOADING...",-1)),wd={class:"loading_box flex w-full items-center justify-center"},Md=["src"],Ld={class:"loading_bar mx-4"},xd=["src"],kd={__name:"PageLoad",setup(i){const t=N7(),{isLoad:e,loadProgress:n}=V2(t),{characterData:o}=Rt(),{publicSrc:s}=I8(),r=(p=2)=>{const v=[];for(let g=0;v.length<p;g++){const _=Math.floor(Math.random()*16);v.includes(_)||v.push(_)}return v},l=m1(()=>r().map(g=>{const _=o.value.find(b=>b.id===g);return s(`/dot/${_==null?void 0:_.img_name}.png`)})),a=z1(),c=async p=>{await j7(p)},u=p=>{a.value=p},h=P5({isLoad:e,limit:2,time:0,timer:null}),f=m1(()=>!(!h.isLoad&&h.time>=h.limit)),C=m1(()=>{const p=n.value,v=h.time/h.limit;return Math.round(p*(v>1?1:v)*100)}),d=p=>{const v=p?"start":"stop";a.value&&a.value[v]();const g=p?"add":"remove";document.body.classList[g]("overflow-hidden")};return O2(f,p=>{d(p),p?(h.time=0,h.timer=setInterval(()=>h.time+=.5,500)):clearInterval(h.timer)},{immediate:!0}),(p,v)=>{const g=_e("Particles");return Y(),i1("div",{class:t2(["loading",{"opacity-0 invisible":!$(f)}])},[bd,w("div",wd,[w("img",{class:"pointer-events-none w-8",src:$(l)[0]},null,8,Md),w("div",Ld,[w("div",{class:"loading_progress",style:B1(`width: ${$(C)}%`)},null,4)]),w("img",{class:"pointer-events-none w-8",src:$(l)[1]},null,8,xd)]),u1(g,{class:"bubble",id:"bubble",particlesInit:c,particlesLoaded:u,options:$(Ph)},null,8,["options"])],2)}}},zd=x1(kd,[["__scopeId","data-v-26bc36d3"]]),Ed=30,Pd={enable:!0,zIndex:-1},Sd={number:{value:40,density:{enable:!0,value_area:800}},color:{value:"#ffffff"},shape:{type:"circle",stroke:{width:0,color:"#000000"},polygon:{nb_sides:5},image:{src:"img/github.svg",width:100,height:100}},opacity:{value:.5,random:!0,anim:{enable:!0,speed:.3378378378378376,opacity_min:.1,sync:!1}},size:{value:3,random:!0,anim:{enable:!0,speed:0,size_min:.2,sync:!1}},line_linked:{enable:!1,distance:150,color:"#ffffff",opacity:.4,width:1},move:{enable:!0,speed:.8,direction:"none",random:!0,straight:!1,out_mode:"out",bounce:!1,attract:{enable:!1,rotateX:600,rotateY:1200}}},Od={detect_on:"canvas",events:{onhover:{enable:!1,mode:"repulse"},onclick:{enable:!1,mode:"push"},resize:!0},modes:{grab:{distance:400,line_linked:{opacity:1}},bubble:{distance:400,size:40,duration:2,opacity:8,speed:3},repulse:{distance:200,duration:.4},push:{particles_nb:4},remove:{particles_nb:2}}},Rd=!0,Id={fpsLimit:Ed,fullScreen:Pd,particles:Sd,interactivity:Od,retina_detect:Rd};const Td={__name:"Snow",setup(i){const t=async n=>{await j7(n)},e=n=>{n.canvas.element.style.pointerEvents="none"};return(n,o)=>{const s=_e("Particles");return Y(),U5(s,{class:"snow",id:"snow",particlesInit:t,particlesLoaded:e,options:$(Id)},null,8,["options"])}}},Zd=x1(Td,[["__scopeId","data-v-d60fc4c6"]]),Ad="/TenDanganronpa/dot/mono.png",B7=()=>{const i=/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent.toLowerCase()),t=z1(i?"touchmove":"mousemove"),e=z1(0),n=z1(0),o=u=>{u.preventDefault();const h=i?u.changedTouches[0]:u;e.value=h.pageX,n.value=h.pageY},s=()=>{y8(()=>{window.addEventListener(t.value,o)}),ot(()=>{window.removeEventListener(t.value,o)})},r=z1(0),l=z1(0),a=u=>{r.value=window.pageXOffset,l.value=window.pageYOffset};return{isMobile:i,mouseX:e,mouseY:n,mousePosition:o,windowMousing:s,scrollX:r,scrollY:l,scrollPosition:a,windowScrolling:()=>{y8(()=>{window.addEventListener("scroll",a)}),ot(()=>{window.removeEventListener("scroll",a)})}}};const Dd={__name:"Mouse",setup(i){const{isMobile:t,mouseX:e,mouseY:n,windowMousing:o}=B7(),s=m1(()=>[`transform: translate(${e.value+10}px, ${n.value+10}px)`]);return(()=>{t||o()})(),(l,a)=>U1((Y(),i1("img",{class:"mono_mouse",style:B1($(s)),src:Ad},null,4)),[[n5,!$(t)]])}},$d=x1(Dd,[["__scopeId","data-v-528cf995"]]),Fd="/TenDanganronpa/assets/wave_3-62aab8f8.svg",jd={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},Nd=w("path",{fill:"currentColor",d:"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95a15.65 15.65 0 0 0-1.38-3.56A8.03 8.03 0 0 1 18.92 8zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2c0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56A7.987 7.987 0 0 1 5.08 16zm2.95-8H5.08a7.987 7.987 0 0 1 4.33-3.56A15.65 15.65 0 0 0 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2c0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2c0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95a8.03 8.03 0 0 1-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2c0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"},null,-1),Bd=[Nd];function Hd(i,t){return Y(),i1("svg",jd,Bd)}const Vd={name:"ic-baseline-language",render:Hd},qd={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},Ud=w("path",{fill:"currentColor",d:"m7 10l5 5l5-5z"},null,-1),Wd=[Ud];function Gd(i,t){return Y(),i1("svg",qd,Wd)}const Kd={name:"ic-baseline-arrow-drop-down",render:Gd},Yd={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},Xd=w("path",{fill:"currentColor",d:"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"},null,-1),Jd=[Xd];function Qd(i,t){return Y(),i1("svg",Yd,Jd)}const tC={name:"ic-baseline-menu",render:Qd},eC={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},iC=w("path",{fill:"currentColor",d:"M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12z"},null,-1),nC=[iC];function oC(i,t){return Y(),i1("svg",eC,nC)}const sC={name:"ic-baseline-close",render:oC},k6=Le("nav",()=>{const i=S5(),{lang:t}=V2(i),e=[{id:0,name:"story",title:"STORY",zh:"故事簡介",jp:"ストーリー"},{id:1,name:"characters",title:"CHARACTER",zh:"角色介紹",jp:"キャラクター"},{id:2,name:"special",title:"SPECIAL",zh:"特典",jp:"特典"},{id:3,name:"product",title:"PRODUCT",zh:"作品資訊",jp:"製品情報"}],n=m1(()=>e.map(s=>({...s,text:s[t.value],disabled:s.disabled})));return{navData:n,getNavItem:s=>{var r;return((r=n.value.find(l=>l.name===s))==null?void 0:r.text)??""}}});const rC=i=>(c5("data-v-d4adcef0"),i=i(),u5(),i),lC=rC(()=>w("div",{class:"header_hr"},[w("img",{class:"w-full scale-105",src:Fd})],-1)),aC={class:"header"},cC={class:"relative ml-4 self-end"},uC={class:"nav_lang peer"},hC={class:"ml-1 w-5 font-sans text-sm"},fC={class:"nav_lang_list"},dC={__name:"Navigation",setup(i){const t=S5(),{changeLang:e}=t,{lang:n}=V2(t),o=k6(),{navData:s}=V2(o),r=z1(!1),l=a=>{r.value=a};return(a,c)=>(Y(),i1(R1,null,[lC,w("header",aC,[u1($(f6),{class:t2(["logo",`logo-${$(n)}`]),to:"#home"},null,8,["class"]),w("ul",{class:t2(["nav_list",{"md:!right-0":r.value}])},[(Y(!0),i1(R1,null,Q2($(s),u=>(Y(),i1("li",null,[u1($(f6),{class:t2(["nav_link",{"pointer-events-none line-through":u.disabled}]),onClick:c[0]||(c[0]=h=>l(!1)),to:{name:"index",hash:`#${u.name}`},title:u.text},{default:M5(()=>[c6(K1(u.title),1)]),_:2},1032,["to","class","title"])]))),256)),w("li",cC,[w("button",uC,[u1($(Vd)),w("span",hC,K1($(n).toUpperCase()),1),u1($(Kd))]),w("ul",fC,[w("li",null,[w("button",{class:"nav_lang_item",onClick:c[1]||(c[1]=u=>$(e)("zh"))},"中文")]),w("li",null,[w("button",{class:"nav_lang_item",onClick:c[2]||(c[2]=u=>$(e)("jp"))},"日本語")])])]),w("li",{class:"nav_close",onClick:c[3]||(c[3]=u=>l(!1))},[u1($(sC),{class:"mt-px"})])],2),w("button",{class:"nav_toggle",onClick:c[4]||(c[4]=u=>l(!0))},[u1($(tC),{class:"mt-px"})])])],64))}},CC=x1(dC,[["__scopeId","data-v-d4adcef0"]]),pC="/TenDanganronpa/image/tennan.svg",vC={},mC={xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 30 30",fill:"currentColor"},yC=w("path",{d:"M28,6.937c-0.957,0.425-1.985,0.711-3.064,0.84c1.102-0.66,1.947-1.705,2.345-2.951c-1.03,0.611-2.172,1.055-3.388,1.295 c-0.973-1.037-2.359-1.685-3.893-1.685c-2.946,0-5.334,2.389-5.334,5.334c0,0.418,0.048,0.826,0.138,1.215 c-4.433-0.222-8.363-2.346-10.995-5.574C3.351,6.199,3.088,7.115,3.088,8.094c0,1.85,0.941,3.483,2.372,4.439 c-0.874-0.028-1.697-0.268-2.416-0.667c0,0.023,0,0.044,0,0.067c0,2.585,1.838,4.741,4.279,5.23 c-0.447,0.122-0.919,0.187-1.406,0.187c-0.343,0-0.678-0.034-1.003-0.095c0.679,2.119,2.649,3.662,4.983,3.705 c-1.825,1.431-4.125,2.284-6.625,2.284c-0.43,0-0.855-0.025-1.273-0.075c2.361,1.513,5.164,2.396,8.177,2.396 c9.812,0,15.176-8.128,15.176-15.177c0-0.231-0.005-0.461-0.015-0.69C26.38,8.945,27.285,8.006,28,6.937z"},null,-1),gC=[yC];function _C(i,t){return Y(),i1("svg",mC,gC)}const bC=x1(vC,[["render",_C]]);const H7=i=>(c5("data-v-1a259ab8"),i=i(),u5(),i),wC={class:"relative z-20 bg-jumbotron text-white"},MC={class:"footer"},LC={class:"m-3 grow sm:mt-0"},xC={class:"-mx-2 flex flex-wrap sm:justify-center"},kC=["href","title"],zC=H7(()=>w("p",{class:"footer_copyright"},"© 2023 Tennan Gakuen Seisaku Iinkai lnc.",-1)),EC=H7(()=>w("img",{class:"pointer-events-none m-3 h-16 w-16 sm:m-0",src:pC,title:"天南学園製作委員会"},null,-1)),PC={__name:"Footer",setup(i){const t=[{name:"ヤジルシ",account:"yajirusi_dr"},{name:"いもまる",account:"DRDS_Ooinn"},{name:"地瓜探員",account:"DRDS_hanji"},{name:"ZOE",account:"Zoexiao27"}];return(e,n)=>(Y(),i1("footer",wC,[w("div",MC,[w("div",LC,[w("div",xC,[(Y(),i1(R1,null,Q2(t,o=>w("a",{class:"footer_link",href:`https://twitter.com/${o.account}`,title:`@${o.account}`,target:"_blank"},[u1(bC),w("span",null,K1(o.name),1)],8,kC)),64))]),zC]),u1($(f6),{class:"block shrink-0",to:{name:"index",hash:"#home"}},{default:M5(()=>[EC]),_:1})])]))}},SC=x1(PC,[["__scopeId","data-v-1a259ab8"]]),OC="/TenDanganronpa/jumbotron/logo_bg05.png",RC="/TenDanganronpa/jumbotron/torikago_big.png",IC="/TenDanganronpa/jumbotron/fish10.png",TC="/TenDanganronpa/jumbotron/fish09.png",ZC="/TenDanganronpa/jumbotron/fish08.png",AC="/TenDanganronpa/jumbotron/logo_bg04-2.png",DC="/TenDanganronpa/jumbotron/fish07.png",$C="/TenDanganronpa/jumbotron/logo_bg03-2.png",FC="/TenDanganronpa/jumbotron/fish05.png",jC="/TenDanganronpa/jumbotron/fish04.png",NC="/TenDanganronpa/jumbotron/fish03.png",BC="/TenDanganronpa/jumbotron/logo_bg02-2.png",HC="/TenDanganronpa/jumbotron/fish02.png",VC="/TenDanganronpa/jumbotron/fish01.png",qC="/TenDanganronpa/jumbotron/logo_bg01-3.png",UC={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},WC=w("path",{fill:"currentColor",d:"M6 19h4V5H6v14zm8-14v14h4V5h-4z"},null,-1),GC=[WC];function KC(i,t){return Y(),i1("svg",UC,GC)}const YC={name:"ic-baseline-pause",render:KC},XC={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},JC=w("path",{fill:"currentColor",d:"M8 5v14l11-7z"},null,-1),QC=[JC];function tp(i,t){return Y(),i1("svg",XC,QC)}const ep={name:"ic-baseline-play-arrow",render:tp};const ip=i=>(c5("data-v-b6631f71"),i=i(),u5(),i),np=ip(()=>w("img",{class:"jumbotron_cage",src:RC},null,-1)),op=[np],sp={__name:"Jumbotron",setup(i){const t=S5(),{lang:e}=V2(t),n=N7(),{isMobile:o,mouseX:s,mouseY:r,windowMousing:l,scrollY:a,windowScrolling:c}=B7(),u="10mins_play",h=z1(!0),f=z1(!1),C=z1(null),d=m1(()=>f.value&&h.value),p=()=>{h.value=!h.value,localStorage.setItem(u,h.value*1)},v=O=>{var Z,F;const M=((Z=C.value)==null?void 0:Z.clientWidth)??2,z=((F=C.value)==null?void 0:F.clientHeight)??2,X={scroll:"will-change: top",mouse:"will-change: transform",mouseL:"will-change: top, left"};let V=[];if(o){const U=a.value/z*-3*O;a.value>=z||(V=[`top: calc(${50+U}%)`,X.scroll])}else{const T=(r.value-z/2)*.001*O,k=(s.value-M/2)*.001*O;r.value>=z||s.value>=M||(V=[`transform: translate(${-50+k}%, ${-50+T}%)`,X.mouse])}return d.value?V:[]},g=new IntersectionObserver(([O])=>{const M=O.isIntersecting;f.value=M},{threshold:.1});y8(()=>{const O=localStorage.getItem(u)??!0;h.value=!!(O*1),g.observe(C.value)}),(()=>{o?c():l()})();const b=P5({bg01:!1,bg02:!1,bg03:!1,bg04:!1,bg05:!1,fish01:!1,fish02:!1,fish03:!1,fish04:!1,fish05:!1,fish07:!1,fish08:!1,fish09:!1,fish10:!1}),P=m1(()=>{const O=Object.values(b);return O.filter(z=>z).length/O.length}),E=O=>b[O]=!0;return O2(P,O=>{f.value=O===1,n.changeLoadProgress(O)},{immediate:!0}),(O,M)=>(Y(),i1("div",{class:t2(["jumbotron",{"jumbotron-pause":!$(d)}]),id:"home",ref_key:"jumbotron",ref:C},[w("img",{class:"jumbotron_bg bg",src:OC,onLoad:M[0]||(M[0]=z=>E("bg05"))},null,32),w("div",{class:"jumbotron_bg",style:B1(v(.8))},op,4),w("div",{class:"jumbotron_bg",style:B1(v(1))},[w("img",{class:"jumbotron_fish fish-10",src:IC,onLoad:M[1]||(M[1]=z=>E("fish10"))},null,32)],4),w("div",{class:"jumbotron_bg",style:B1(v(1))},[w("img",{class:"jumbotron_fish fish-9",src:TC,onLoad:M[2]||(M[2]=z=>E("fish09"))},null,32)],4),w("div",{class:"jumbotron_bg",style:B1(v(1))},[w("img",{class:"jumbotron_fish fish-8",src:ZC,onLoad:M[3]||(M[3]=z=>E("fish08"))},null,32)],4),w("img",{class:"jumbotron_bg",src:AC,style:B1(v(2)),onLoad:M[4]||(M[4]=z=>E("bg04"))},null,36),w("div",{class:"jumbotron_bg",style:B1(v(3))},[w("img",{class:"jumbotron_fish fish-7",src:DC,onLoad:M[5]||(M[5]=z=>E("fish07"))},null,32)],4),w("img",{class:"jumbotron_bg",src:$C,style:B1(v(4)),onLoad:M[6]||(M[6]=z=>E("bg03"))},null,36),w("div",{class:"jumbotron_bg",style:B1(v(5))},[w("img",{class:"jumbotron_fish fish-5",src:FC,onLoad:M[7]||(M[7]=z=>E("fish05"))},null,32)],4),w("div",{class:"jumbotron_bg",style:B1(v(6))},[w("img",{class:"jumbotron_fish fish-4",src:jC,onLoad:M[8]||(M[8]=z=>E("fish04"))},null,32)],4),w("div",{class:"jumbotron_bg",style:B1(v(7))},[w("img",{class:"jumbotron_fish fish-3",src:NC,onLoad:M[9]||(M[9]=z=>E("fish03"))},null,32)],4),w("img",{class:"jumbotron_bg",src:BC,style:B1(v(8)),onLoad:M[10]||(M[10]=z=>E("bg02"))},null,36),w("div",{class:"jumbotron_bg",style:B1(v(10))},[w("img",{class:"jumbotron_fish fish-2",src:HC,onLoad:M[11]||(M[11]=z=>E("fish02"))},null,32)],4),w("div",{class:"jumbotron_bg",style:B1(v(12))},[w("img",{class:"jumbotron_fish fish-1",src:VC,onLoad:M[12]||(M[12]=z=>E("fish01"))},null,32)],4),w("img",{class:"jumbotron_bg jumbotron_cover",src:qC,style:B1(v($(o)?14:4)),onLoad:M[13]||(M[13]=z=>E("bg01"))},null,36),w("div",{class:t2(["jumbotron_logo",`logo-${$(e)}`])},null,2),w("button",{class:"jumbotron_play",onClick:p},[U1(u1($(YC),null,null,512),[[n5,h.value]]),U1(u1($(ep),null,null,512),[[n5,!h.value]])])],2))}},rp=x1(sp,[["__scopeId","data-v-b6631f71"]]),lp="/TenDanganronpa/assets/wave_1-00a49667.svg",F2=(i,t)=>{if(t.value){i.style.opacity=0;const e=new Image;e.src=t.value,e.onload=()=>{i.src=t.value,i.style.opacity=1},e.onerror=()=>{i.style.opacity=1}}},ap=new IntersectionObserver(i=>{i.forEach(t=>{const e=["parallax-b","parallax-t","parallax-l","parallax-r"],{target:n,isIntersecting:o}=t;o&&(n.classList.remove(...e,"!opacity-0"),setTimeout(()=>n.style.transition="",500))})},{threshold:.2}),y5={mounted(i,t){const{arg:e,value:n}=t;e&&i.classList.add(`parallax-${e}`),i.classList.add("!opacity-0"),i.style.transition=`${n??300}ms`,ap.observe(i)}};const V7=i=>(c5("data-v-77a0217a"),i=i(),u5(),i),cp={class:"story wrapper"},up=V7(()=>w("div",{class:"wrapper_hash",id:"story"},null,-1)),hp={class:"mb-12 flex lg:mb-6"},fp=["title"],dp={class:"story_container"},Cp={class:"story_detail"},pp=J5("<p data-v-77a0217a>「天南学園」は、人材を育てることが有名な超一流学園。<br data-v-77a0217a>毎年は各分野に活躍してる高校生を各校からスカウトし、<br data-v-77a0217a>いつしか彼らを「超高校級」と呼ばわれている。</p><p data-v-77a0217a>この学園に入ってさえすれば成功したと同然なので、<br data-v-77a0217a>天南学園80屆の生徒たちもそんな希望と未来を持って入学した。<br data-v-77a0217a>ただし、学校に踏み込んだ瞬間、なぜか激しい目眩に襲われて、<br data-v-77a0217a>再び目覚めた時は見知らぬ場所な上に、窓の外は一面の黒い海。</p><p data-v-77a0217a>しばらくすれば校内放送が全員を体育館に呼び出した。<br data-v-77a0217a>到着するか否か謎の貝類は急に出現し、<br data-v-77a0217a>「コロシアイに勝てば、ここから脱出できる」と残して去っていく——</p><p data-v-77a0217a>目前に迫る危機。この十六人の運命はいかに——！？</p>",4),vp=[pp],mp={class:"story_detail"},yp=J5("<p data-v-77a0217a>「天南學園」是一所以培育菁英人才聞名的一流學校。<br data-v-77a0217a>學園每年都會從各領域發掘活躍於其中的頂尖高中生入學——他們被稱為「超高校級」。</p><p data-v-77a0217a>能進入這所學園就等於是成為人生勝利組，<br data-v-77a0217a>被選為天南學園第80屆的超高校級們也懷抱著希望與對未來的憧憬入學了。<br data-v-77a0217a>然而在踏進校門的瞬間，一股莫名的暈眩感席捲而來，<br data-v-77a0217a>再次醒來時，眼前已經是完全不一樣的風景，窗外是一片漆黑的深海。</p><p data-v-77a0217a>此時響起廣播，將全員集合到了體育館，<br data-v-77a0217a>突然出現在大家面前的奇怪貝類生物，留下了一句話後便揚長而去<br data-v-77a0217a>——「只要你們自相殘殺的話，就可以離開這裡。」</p><p data-v-77a0217a>面對眼前的危機，這十六人的命運究竟會如何呢！？</p>",4),gp=[yp],_p={class:"pointer-events-none mx-auto mt-16 flex items-start max-w-[1200px] md:mt-8 md:flex-col"},bp={class:"mr-10 w-1/2 md:mr-0 md:mb-5 md:w-full"},wp={class:"w-1/2 md:w-full"},Mp=V7(()=>w("div",{class:"story_hr"},[w("img",{class:"w-full scale-105",src:lp})],-1)),Lp={__name:"Story",setup(i){const t=S5(),{lang:e}=V2(t),n=m1(()=>k6().getNavItem("story")),{publicSrc:o}=I8();return(s,r)=>(Y(),i1(R1,null,[w("section",cp,[up,w("div",hp,[w("h2",{class:"title text-gray-300",title:$(n)},"STORY",8,fp)]),w("div",dp,[U1((Y(),i1("div",Cp,vp)),[[n5,$(e)==="jp"],[$(y5),500,"b"]]),U1((Y(),i1("div",mp,gp)),[[n5,$(e)==="zh"],[$(y5),500,"b"]]),w("div",_p,[U1(w("img",bp,null,512),[[$(F2),$(o)("/image/trialroom.png")],[$(y5),500,"l"]]),U1(w("img",wp,null,512),[[$(F2),$(o)("/image/16shape.jpg")],[$(y5),500,"r"]])])])]),Mp],64))}},xp=x1(Lp,[["__scopeId","data-v-77a0217a"]]),kp={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},zp=w("path",{fill:"currentColor",d:"M18.3 5.71a.996.996 0 0 0-1.41 0L12 10.59L7.11 5.7A.996.996 0 1 0 5.7 7.11L10.59 12L5.7 16.89a.996.996 0 1 0 1.41 1.41L12 13.41l4.89 4.89a.996.996 0 1 0 1.41-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z"},null,-1),Ep=[zp];function Pp(i,t){return Y(),i1("svg",kp,Ep)}const Sp={name:"ic-round-close",render:Pp};function p3(i,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}function Op(i,t,e){return t&&p3(i.prototype,t),e&&p3(i,e),Object.defineProperty(i,"prototype",{writable:!1}),i}/*!
 * Splide.js
 * Version  : 4.1.3
 * License  : MIT
 * Copyright: 2022 Naotoshi Fujita
 */var v3="(prefers-reduced-motion: reduce)",l8=1,Rp=2,k8=3,T8=4,z6=5,K6=6,ht=7,Ip={CREATED:l8,MOUNTED:Rp,IDLE:k8,MOVING:T8,SCROLLING:z6,DRAGGING:K6,DESTROYED:ht};function l5(i){i.length=0}function O5(i,t,e){return Array.prototype.slice.call(i,t,e)}function S1(i){return i.bind.apply(i,[null].concat(O5(arguments,1)))}var q7=setTimeout,X4=function(){};function m3(i){return requestAnimationFrame(i)}function It(i,t){return typeof t===i}function C6(i){return!Te(i)&&It("object",i)}var Ie=Array.isArray,U7=S1(It,"function"),k5=S1(It,"string"),E6=S1(It,"undefined");function Te(i){return i===null}function W7(i){try{return i instanceof(i.ownerDocument.defaultView||window).HTMLElement}catch{return!1}}function P6(i){return Ie(i)?i:[i]}function w2(i,t){P6(i).forEach(t)}function Ze(i,t){return i.indexOf(t)>-1}function Y6(i,t){return i.push.apply(i,P6(t)),i}function t5(i,t,e){i&&w2(t,function(n){n&&i.classList[e?"add":"remove"](n)})}function q2(i,t){t5(i,k5(t)?t.split(" "):t,!0)}function S6(i,t){w2(t,i.appendChild.bind(i))}function Ae(i,t){w2(i,function(e){var n=(t||e).parentNode;n&&n.insertBefore(e,t)})}function p6(i,t){return W7(i)&&(i.msMatchesSelector||i.matches).call(i,t)}function G7(i,t){var e=i?O5(i.children):[];return t?e.filter(function(n){return p6(n,t)}):e}function O6(i,t){return t?G7(i,t)[0]:i.firstElementChild}var v6=Object.keys;function q5(i,t,e){return i&&(e?v6(i).reverse():v6(i)).forEach(function(n){n!=="__proto__"&&t(i[n],n)}),i}function m6(i){return O5(arguments,1).forEach(function(t){q5(t,function(e,n){i[n]=t[n]})}),i}function g5(i){return O5(arguments,1).forEach(function(t){q5(t,function(e,n){Ie(e)?i[n]=e.slice():C6(e)?i[n]=g5({},C6(i[n])?i[n]:{},e):i[n]=e})}),i}function y3(i,t){w2(t||v6(i),function(e){delete i[e]})}function U2(i,t){w2(i,function(e){w2(t,function(n){e&&e.removeAttribute(n)})})}function C1(i,t,e){C6(t)?q5(t,function(n,o){C1(i,o,n)}):w2(i,function(n){Te(e)||e===""?U2(n,t):n.setAttribute(t,String(e))})}function h8(i,t,e){var n=document.createElement(i);return t&&(k5(t)?q2(n,t):C1(n,t)),e&&S6(e,n),n}function x2(i,t,e){if(E6(e))return getComputedStyle(i)[t];Te(e)||(i.style[t]=""+e)}function y6(i,t){x2(i,"display",t)}function K7(i){i.setActive&&i.setActive()||i.focus({preventScroll:!0})}function E2(i,t){return i.getAttribute(t)}function g3(i,t){return i&&i.classList.contains(t)}function y2(i){return i.getBoundingClientRect()}function K5(i){w2(i,function(t){t&&t.parentNode&&t.parentNode.removeChild(t)})}function Y7(i){return O6(new DOMParser().parseFromString(i,"text/html").body)}function X2(i,t){i.preventDefault(),t&&(i.stopPropagation(),i.stopImmediatePropagation())}function X7(i,t){return i&&i.querySelector(t)}function De(i,t){return t?O5(i.querySelectorAll(t)):[]}function e5(i,t){t5(i,t,!1)}function J4(i){return i.timeStamp}function A5(i){return k5(i)?i:i?i+"px":""}var R6="splide",$e="data-"+R6;function t6(i,t){if(!i)throw new Error("["+R6+"] "+(t||""))}var z5=Math.min,ft=Math.max,dt=Math.floor,g6=Math.ceil,a2=Math.abs;function J7(i,t,e){return a2(i-t)<e}function X6(i,t,e,n){var o=z5(t,e),s=ft(t,e);return n?o<i&&i<s:o<=i&&i<=s}function s8(i,t,e){var n=z5(t,e),o=ft(t,e);return z5(ft(n,i),o)}function Q4(i){return+(i>0)-+(i<0)}function te(i,t){return w2(t,function(e){i=i.replace("%s",""+e)}),i}function Fe(i){return i<10?"0"+i:""+i}var _3={};function Tp(i){return""+i+Fe(_3[i]=(_3[i]||0)+1)}function Q7(){var i=[];function t(r,l,a,c){o(r,l,function(u,h,f){var C="addEventListener"in u,d=C?u.removeEventListener.bind(u,h,a,c):u.removeListener.bind(u,a);C?u.addEventListener(h,a,c):u.addListener(a),i.push([u,h,f,a,d])})}function e(r,l,a){o(r,l,function(c,u,h){i=i.filter(function(f){return f[0]===c&&f[1]===u&&f[2]===h&&(!a||f[3]===a)?(f[4](),!1):!0})})}function n(r,l,a){var c,u=!0;return typeof CustomEvent=="function"?c=new CustomEvent(l,{bubbles:u,detail:a}):(c=document.createEvent("CustomEvent"),c.initCustomEvent(l,u,!1,a)),r.dispatchEvent(c),c}function o(r,l,a){w2(r,function(c){c&&w2(l,function(u){u.split(" ").forEach(function(h){var f=h.split(".");a(c,f[0],f[1])})})})}function s(){i.forEach(function(r){r[4]()}),l5(i)}return{bind:t,unbind:e,dispatch:n,destroy:s}}var R5="mounted",b3="ready",a5="move",Z8="moved",je="click",ti="active",ei="inactive",ii="visible",ni="hidden",W1="refresh",s2="updated",z8="resize",Tt="resized",oi="drag",si="dragging",ri="dragged",Zt="scroll",Q5="scrolled",Zp="overflow",Ne="destroy",li="arrows:mounted",ai="arrows:updated",ci="pagination:mounted",ui="pagination:updated",Be="navigation:mounted",He="autoplay:play",hi="autoplay:playing",Ve="autoplay:pause",qe="lazyload:loaded",fi="sk",di="sh",Ct="ei";function F1(i){var t=i?i.event.bus:document.createDocumentFragment(),e=Q7();function n(s,r){e.bind(t,P6(s).join(" "),function(l){r.apply(r,Ie(l.detail)?l.detail:[])})}function o(s){e.dispatch(t,s,O5(arguments,1))}return i&&i.event.on(Ne,e.destroy),m6(e,{bus:t,on:n,off:S1(e.unbind,t),emit:o})}function At(i,t,e,n){var o=Date.now,s,r=0,l,a=!0,c=0;function u(){if(!a){if(r=i?z5((o()-s)/i,1):1,e&&e(r),r>=1&&(t(),s=o(),n&&++c>=n))return f();l=m3(u)}}function h(g){g||d(),s=o()-(g?r*i:0),a=!1,l=m3(u)}function f(){a=!0}function C(){s=o(),r=0,e&&e(r)}function d(){l&&cancelAnimationFrame(l),r=0,l=0,a=!0}function p(g){i=g}function v(){return a}return{start:h,rewind:C,pause:f,cancel:d,set:p,isPaused:v}}function Ap(i){var t=i;function e(o){t=o}function n(o){return Ze(P6(o),t)}return{set:e,is:n}}function Dp(i,t){var e=At(t||0,i,null,1);return function(){e.isPaused()&&e.start()}}function $p(i,t,e){var n=i.state,o=e.breakpoints||{},s=e.reducedMotion||{},r=Q7(),l=[];function a(){var d=e.mediaQuery==="min";v6(o).sort(function(p,v){return d?+p-+v:+v-+p}).forEach(function(p){u(o[p],"("+(d?"min":"max")+"-width:"+p+"px)")}),u(s,v3),h()}function c(d){d&&r.destroy()}function u(d,p){var v=matchMedia(p);r.bind(v,"change",h),l.push([d,v])}function h(){var d=n.is(ht),p=e.direction,v=l.reduce(function(g,_){return g5(g,_[1].matches?_[0]:{})},{});y3(e),C(v),e.destroy?i.destroy(e.destroy==="completely"):d?(c(!0),i.mount()):p!==e.direction&&i.refresh()}function f(d){matchMedia(v3).matches&&(d?g5(e,s):y3(e,v6(s)))}function C(d,p,v){g5(e,d),p&&g5(Object.getPrototypeOf(e),d),(v||!n.is(l8))&&i.emit(s2,e)}return{setup:a,destroy:c,reduce:f,set:C}}var Dt="Arrow",$t=Dt+"Left",Ft=Dt+"Right",Ci=Dt+"Up",pi=Dt+"Down",w3="rtl",jt="ttb",y4={width:["height"],left:["top","right"],right:["bottom","left"],x:["y"],X:["Y"],Y:["X"],ArrowLeft:[Ci,Ft],ArrowRight:[pi,$t]};function Fp(i,t,e){function n(s,r,l){l=l||e.direction;var a=l===w3&&!r?1:l===jt?0:-1;return y4[s]&&y4[s][a]||s.replace(/width|left|right/i,function(c,u){var h=y4[c.toLowerCase()][a]||c;return u>0?h.charAt(0).toUpperCase()+h.slice(1):h})}function o(s){return s*(e.direction===w3?1:-1)}return{resolve:n,orient:o}}var o5="role",f8="tabindex",jp="disabled",Z2="aria-",I6=Z2+"controls",vi=Z2+"current",M3=Z2+"selected",g2=Z2+"label",Ue=Z2+"labelledby",mi=Z2+"hidden",We=Z2+"orientation",_6=Z2+"roledescription",L3=Z2+"live",x3=Z2+"busy",k3=Z2+"atomic",Ge=[o5,f8,jp,I6,vi,g2,Ue,mi,We,_6],G2=R6+"__",I5="is-",g4=R6,z3=G2+"track",Np=G2+"list",Nt=G2+"slide",yi=Nt+"--clone",Bp=Nt+"__container",Ke=G2+"arrows",Bt=G2+"arrow",gi=Bt+"--prev",_i=Bt+"--next",Ht=G2+"pagination",bi=Ht+"__page",Hp=G2+"progress",Vp=Hp+"__bar",qp=G2+"toggle",Up=G2+"spinner",Wp=G2+"sr",Gp=I5+"initialized",Y5=I5+"active",wi=I5+"prev",Mi=I5+"next",ee=I5+"visible",ie=I5+"loading",Li=I5+"focus-in",xi=I5+"overflow",Kp=[Y5,ee,wi,Mi,ie,Li,xi],Yp={slide:Nt,clone:yi,arrows:Ke,arrow:Bt,prev:gi,next:_i,pagination:Ht,page:bi,spinner:Up};function Xp(i,t){if(U7(i.closest))return i.closest(t);for(var e=i;e&&e.nodeType===1&&!p6(e,t);)e=e.parentElement;return e}var Jp=5,E3=200,ki="touchstart mousedown",_4="touchmove mousemove",b4="touchend touchcancel mouseup click";function Qp(i,t,e){var n=F1(i),o=n.on,s=n.bind,r=i.root,l=e.i18n,a={},c=[],u=[],h=[],f,C,d;function p(){b(),P(),_()}function v(){o(W1,g),o(W1,p),o(s2,_),s(document,ki+" keydown",function(M){d=M.type==="keydown"},{capture:!0}),s(r,"focusin",function(){t5(r,Li,!!d)})}function g(M){var z=Ge.concat("style");l5(c),e5(r,u),e5(f,h),U2([f,C],z),U2(r,M?z:["style",_6])}function _(){e5(r,u),e5(f,h),u=O(g4),h=O(z3),q2(r,u),q2(f,h),C1(r,g2,e.label),C1(r,Ue,e.labelledby)}function b(){f=E("."+z3),C=O6(f,"."+Np),t6(f&&C,"A track/list element is missing."),Y6(c,G7(C,"."+Nt+":not(."+yi+")")),q5({arrows:Ke,pagination:Ht,prev:gi,next:_i,bar:Vp,toggle:qp},function(M,z){a[z]=E("."+M)}),m6(a,{root:r,track:f,list:C,slides:c})}function P(){var M=r.id||Tp(R6),z=e.role;r.id=M,f.id=f.id||M+"-track",C.id=C.id||M+"-list",!E2(r,o5)&&r.tagName!=="SECTION"&&z&&C1(r,o5,z),C1(r,_6,l.carousel),C1(C,o5,"presentation")}function E(M){var z=X7(r,M);return z&&Xp(z,"."+g4)===r?z:void 0}function O(M){return[M+"--"+e.type,M+"--"+e.direction,e.drag&&M+"--draggable",e.isNavigation&&M+"--nav",M===g4&&Y5]}return m6(a,{setup:p,mount:v,destroy:g})}var E8="slide",A8="loop",T6="fade";function tv(i,t,e,n){var o=F1(i),s=o.on,r=o.emit,l=o.bind,a=i.Components,c=i.root,u=i.options,h=u.isNavigation,f=u.updateOnMove,C=u.i18n,d=u.pagination,p=u.slideFocus,v=a.Direction.resolve,g=E2(n,"style"),_=E2(n,g2),b=e>-1,P=O6(n,"."+Bp),E;function O(){b||(n.id=c.id+"-slide"+Fe(t+1),C1(n,o5,d?"tabpanel":"group"),C1(n,_6,C.slide),C1(n,g2,_||te(C.slideLabel,[t+1,i.length]))),M()}function M(){l(n,"click",S1(r,je,W)),l(n,"keydown",S1(r,fi,W)),s([Z8,di,Q5],Z),s(Be,X),f&&s(a5,V)}function z(){E=!0,o.destroy(),e5(n,Kp),U2(n,Ge),C1(n,"style",g),C1(n,g2,_||"")}function X(){var e1=i.splides.map(function(N){var Q=N.splide.Components.Slides.getAt(t);return Q?Q.slide.id:""}).join(" ");C1(n,g2,te(C.slideX,(b?e:t)+1)),C1(n,I6,e1),C1(n,o5,p?"button":""),p&&U2(n,_6)}function V(){E||Z()}function Z(){if(!E){var e1=i.index;F(),U(),t5(n,wi,t===e1-1),t5(n,Mi,t===e1+1)}}function F(){var e1=k();e1!==g3(n,Y5)&&(t5(n,Y5,e1),C1(n,vi,h&&e1||""),r(e1?ti:ei,W))}function U(){var e1=D(),N=!e1&&(!k()||b);if(i.state.is([T8,z6])||C1(n,mi,N||""),C1(De(n,u.focusableNodes||""),f8,N?-1:""),p&&C1(n,f8,N?-1:0),e1!==g3(n,ee)&&(t5(n,ee,e1),r(e1?ii:ni,W)),!e1&&document.activeElement===n){var Q=a.Slides.getAt(i.index);Q&&K7(Q.slide)}}function T(e1,N,Q){x2(Q&&P||n,e1,N)}function k(){var e1=i.index;return e1===t||u.cloneStatus&&e1===e}function D(){if(i.is(T6))return k();var e1=y2(a.Elements.track),N=y2(n),Q=v("left",!0),a1=v("right",!0);return dt(e1[Q])<=g6(N[Q])&&dt(N[a1])<=g6(e1[a1])}function q(e1,N){var Q=a2(e1-t);return!b&&(u.rewind||i.is(A8))&&(Q=z5(Q,i.length-Q)),Q<=N}var W={index:t,slideIndex:e,slide:n,container:P,isClone:b,mount:O,destroy:z,update:Z,style:T,isWithin:q};return W}function ev(i,t,e){var n=F1(i),o=n.on,s=n.emit,r=n.bind,l=t.Elements,a=l.slides,c=l.list,u=[];function h(){f(),o(W1,C),o(W1,f)}function f(){a.forEach(function(Z,F){p(Z,F,-1)})}function C(){E(function(Z){Z.destroy()}),l5(u)}function d(){E(function(Z){Z.update()})}function p(Z,F,U){var T=tv(i,F,U,Z);T.mount(),u.push(T),u.sort(function(k,D){return k.index-D.index})}function v(Z){return Z?O(function(F){return!F.isClone}):u}function g(Z){var F=t.Controller,U=F.toIndex(Z),T=F.hasFocus()?1:e.perPage;return O(function(k){return X6(k.index,U,U+T-1)})}function _(Z){return O(Z)[0]}function b(Z,F){w2(Z,function(U){if(k5(U)&&(U=Y7(U)),W7(U)){var T=a[F];T?Ae(U,T):S6(c,U),q2(U,e.classes.slide),z(U,S1(s,z8))}}),s(W1)}function P(Z){K5(O(Z).map(function(F){return F.slide})),s(W1)}function E(Z,F){v(F).forEach(Z)}function O(Z){return u.filter(U7(Z)?Z:function(F){return k5(Z)?p6(F.slide,Z):Ze(P6(Z),F.index)})}function M(Z,F,U){E(function(T){T.style(Z,F,U)})}function z(Z,F){var U=De(Z,"img"),T=U.length;T?U.forEach(function(k){r(k,"load error",function(){--T||F()})}):F()}function X(Z){return Z?a.length:u.length}function V(){return u.length>e.perPage}return{mount:h,destroy:C,update:d,register:p,get:v,getIn:g,getAt:_,add:b,remove:P,forEach:E,filter:O,style:M,getLength:X,isEnough:V}}function iv(i,t,e){var n=F1(i),o=n.on,s=n.bind,r=n.emit,l=t.Slides,a=t.Direction.resolve,c=t.Elements,u=c.root,h=c.track,f=c.list,C=l.getAt,d=l.style,p,v,g;function _(){b(),s(window,"resize load",Dp(S1(r,z8))),o([s2,W1],b),o(z8,P)}function b(){p=e.direction===jt,x2(u,"maxWidth",A5(e.width)),x2(h,a("paddingLeft"),E(!1)),x2(h,a("paddingRight"),E(!0)),P(!0)}function P(W){var e1=y2(u);(W||v.width!==e1.width||v.height!==e1.height)&&(x2(h,"height",O()),d(a("marginRight"),A5(e.gap)),d("width",z()),d("height",X(),!0),v=e1,r(Tt),g!==(g=q())&&(t5(u,xi,g),r(Zp,g)))}function E(W){var e1=e.padding,N=a(W?"right":"left");return e1&&A5(e1[N]||(C6(e1)?0:e1))||"0px"}function O(){var W="";return p&&(W=M(),t6(W,"height or heightRatio is missing."),W="calc("+W+" - "+E(!1)+" - "+E(!0)+")"),W}function M(){return A5(e.height||y2(f).width*e.heightRatio)}function z(){return e.autoWidth?null:A5(e.fixedWidth)||(p?"":V())}function X(){return A5(e.fixedHeight)||(p?e.autoHeight?null:V():M())}function V(){var W=A5(e.gap);return"calc((100%"+(W&&" + "+W)+")/"+(e.perPage||1)+(W&&" - "+W)+")"}function Z(){return y2(f)[a("width")]}function F(W,e1){var N=C(W||0);return N?y2(N.slide)[a("width")]+(e1?0:k()):0}function U(W,e1){var N=C(W);if(N){var Q=y2(N.slide)[a("right")],a1=y2(f)[a("left")];return a2(Q-a1)+(e1?0:k())}return 0}function T(W){return U(i.length-1)-U(0)+F(0,W)}function k(){var W=C(0);return W&&parseFloat(x2(W.slide,a("marginRight")))||0}function D(W){return parseFloat(x2(h,a("padding"+(W?"Right":"Left"))))||0}function q(){return i.is(T6)||T(!0)>Z()}return{mount:_,resize:P,listSize:Z,slideSize:F,sliderSize:T,totalSize:U,getPadding:D,isOverflow:q}}var nv=2;function ov(i,t,e){var n=F1(i),o=n.on,s=t.Elements,r=t.Slides,l=t.Direction.resolve,a=[],c;function u(){o(W1,h),o([s2,z8],C),(c=v())&&(d(c),t.Layout.resize(!0))}function h(){f(),u()}function f(){K5(a),l5(a),n.destroy()}function C(){var g=v();c!==g&&(c<g||!g)&&n.emit(W1)}function d(g){var _=r.get().slice(),b=_.length;if(b){for(;_.length<g;)Y6(_,_);Y6(_.slice(-g),_.slice(0,g)).forEach(function(P,E){var O=E<g,M=p(P.slide,E);O?Ae(M,_[0].slide):S6(s.list,M),Y6(a,M),r.register(M,E-g+(O?0:b),P.index)})}}function p(g,_){var b=g.cloneNode(!0);return q2(b,e.classes.clone),b.id=i.root.id+"-clone"+Fe(_+1),b}function v(){var g=e.clones;if(!i.is(A8))g=0;else if(E6(g)){var _=e[l("fixedWidth")]&&t.Layout.slideSize(0),b=_&&g6(y2(s.track)[l("width")]/_);g=b||e[l("autoWidth")]&&i.length||e.perPage*nv}return g}return{mount:u,destroy:f}}function sv(i,t,e){var n=F1(i),o=n.on,s=n.emit,r=i.state.set,l=t.Layout,a=l.slideSize,c=l.getPadding,u=l.totalSize,h=l.listSize,f=l.sliderSize,C=t.Direction,d=C.resolve,p=C.orient,v=t.Elements,g=v.list,_=v.track,b;function P(){b=t.Transition,o([R5,Tt,s2,W1],E)}function E(){t.Controller.isBusy()||(t.Scroll.cancel(),M(i.index),t.Slides.update())}function O(N,Q,a1,c1){N!==Q&&W(N>a1)&&(Z(),z(V(T(),N>a1),!0)),r(T8),s(a5,Q,a1,N),b.start(Q,function(){r(k8),s(Z8,Q,a1,N),c1&&c1()})}function M(N){z(U(N,!0))}function z(N,Q){if(!i.is(T6)){var a1=Q?N:X(N);x2(g,"transform","translate"+d("X")+"("+a1+"px)"),N!==a1&&s(di)}}function X(N){if(i.is(A8)){var Q=F(N),a1=Q>t.Controller.getEnd(),c1=Q<0;(c1||a1)&&(N=V(N,a1))}return N}function V(N,Q){var a1=N-q(Q),c1=f();return N-=p(c1*(g6(a2(a1)/c1)||1))*(Q?1:-1),N}function Z(){z(T(),!0),b.cancel()}function F(N){for(var Q=t.Slides.get(),a1=0,c1=1/0,w1=0;w1<Q.length;w1++){var R=Q[w1].index,x=a2(U(R,!0)-N);if(x<=c1)c1=x,a1=R;else break}return a1}function U(N,Q){var a1=p(u(N-1)-D(N));return Q?k(a1):a1}function T(){var N=d("left");return y2(g)[N]-y2(_)[N]+p(c(!1))}function k(N){return e.trimSpace&&i.is(E8)&&(N=s8(N,0,p(f(!0)-h()))),N}function D(N){var Q=e.focus;return Q==="center"?(h()-a(N,!0))/2:+Q*a(N)||0}function q(N){return U(N?t.Controller.getEnd():0,!!e.trimSpace)}function W(N){var Q=p(V(T(),N));return N?Q>=0:Q<=g[d("scrollWidth")]-y2(_)[d("width")]}function e1(N,Q){Q=E6(Q)?T():Q;var a1=N!==!0&&p(Q)<p(q(!1)),c1=N!==!1&&p(Q)>p(q(!0));return a1||c1}return{mount:P,move:O,jump:M,translate:z,shift:V,cancel:Z,toIndex:F,toPosition:U,getPosition:T,getLimit:q,exceededLimit:e1,reposition:E}}function rv(i,t,e){var n=F1(i),o=n.on,s=n.emit,r=t.Move,l=r.getPosition,a=r.getLimit,c=r.toPosition,u=t.Slides,h=u.isEnough,f=u.getLength,C=e.omitEnd,d=i.is(A8),p=i.is(E8),v=S1(T,!1),g=S1(T,!0),_=e.start||0,b,P=_,E,O,M;function z(){X(),o([s2,W1,Ct],X),o(Tt,V)}function X(){E=f(!0),O=e.perMove,M=e.perPage,b=W();var x=s8(_,0,C?b:E-1);x!==_&&(_=x,r.reposition())}function V(){b!==W()&&s(Ct)}function Z(x,A,t1){if(!R()){var o1=U(x),y1=q(o1);y1>-1&&(A||y1!==_)&&(a1(y1),r.move(o1,y1,P,t1))}}function F(x,A,t1,o1){t.Scroll.scroll(x,A,t1,function(){var y1=q(r.toIndex(l()));a1(C?z5(y1,b):y1),o1&&o1()})}function U(x){var A=_;if(k5(x)){var t1=x.match(/([+\-<>])(\d+)?/)||[],o1=t1[1],y1=t1[2];o1==="+"||o1==="-"?A=k(_+ +(""+o1+(+y1||1)),_):o1===">"?A=y1?e1(+y1):v(!0):o1==="<"&&(A=g(!0))}else A=d?x:s8(x,0,b);return A}function T(x,A){var t1=O||(w1()?1:M),o1=k(_+t1*(x?-1:1),_,!(O||w1()));return o1===-1&&p&&!J7(l(),a(!x),1)?x?0:b:A?o1:q(o1)}function k(x,A,t1){if(h()||w1()){var o1=D(x);o1!==x&&(A=x,x=o1,t1=!1),x<0||x>b?!O&&(X6(0,x,A,!0)||X6(b,A,x,!0))?x=e1(N(x)):d?x=t1?x<0?-(E%M||M):E:x:e.rewind?x=x<0?b:0:x=-1:t1&&x!==A&&(x=e1(N(A)+(x<A?-1:1)))}else x=-1;return x}function D(x){if(p&&e.trimSpace==="move"&&x!==_)for(var A=l();A===c(x,!0)&&X6(x,0,i.length-1,!e.rewind);)x<_?--x:++x;return x}function q(x){return d?(x+E)%E||0:x}function W(){for(var x=E-(w1()||d&&O?1:M);C&&x-- >0;)if(c(E-1,!0)!==c(x,!0)){x++;break}return s8(x,0,E-1)}function e1(x){return s8(w1()?x:M*x,0,b)}function N(x){return w1()?z5(x,b):dt((x>=b?E-1:x)/M)}function Q(x){var A=r.toIndex(x);return p?s8(A,0,b):A}function a1(x){x!==_&&(P=_,_=x)}function c1(x){return x?P:_}function w1(){return!E6(e.focus)||e.isNavigation}function R(){return i.state.is([T8,z6])&&!!e.waitForTransition}return{mount:z,go:Z,scroll:F,getNext:v,getPrev:g,getAdjacent:T,getEnd:W,setIndex:a1,getIndex:c1,toIndex:e1,toPage:N,toDest:Q,hasFocus:w1,isBusy:R}}var lv="http://www.w3.org/2000/svg",av="m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z",V6=40;function cv(i,t,e){var n=F1(i),o=n.on,s=n.bind,r=n.emit,l=e.classes,a=e.i18n,c=t.Elements,u=t.Controller,h=c.arrows,f=c.track,C=h,d=c.prev,p=c.next,v,g,_={};function b(){E(),o(s2,P)}function P(){O(),b()}function E(){var F=e.arrows;F&&!(d&&p)&&X(),d&&p&&(m6(_,{prev:d,next:p}),y6(C,F?"":"none"),q2(C,g=Ke+"--"+e.direction),F&&(M(),Z(),C1([d,p],I6,f.id),r(li,d,p)))}function O(){n.destroy(),e5(C,g),v?(K5(h?[d,p]:C),d=p=null):U2([d,p],Ge)}function M(){o([R5,Z8,W1,Q5,Ct],Z),s(p,"click",S1(z,">")),s(d,"click",S1(z,"<"))}function z(F){u.go(F,!0)}function X(){C=h||h8("div",l.arrows),d=V(!0),p=V(!1),v=!0,S6(C,[d,p]),!h&&Ae(C,f)}function V(F){var U='<button class="'+l.arrow+" "+(F?l.prev:l.next)+'" type="button"><svg xmlns="'+lv+'" viewBox="0 0 '+V6+" "+V6+'" width="'+V6+'" height="'+V6+'" focusable="false"><path d="'+(e.arrowPath||av)+'" />';return Y7(U)}function Z(){if(d&&p){var F=i.index,U=u.getPrev(),T=u.getNext(),k=U>-1&&F<U?a.last:a.prev,D=T>-1&&F>T?a.first:a.next;d.disabled=U<0,p.disabled=T<0,C1(d,g2,k),C1(p,g2,D),r(ai,d,p,U,T)}}return{arrows:_,mount:b,destroy:O,update:Z}}var uv=$e+"-interval";function hv(i,t,e){var n=F1(i),o=n.on,s=n.bind,r=n.emit,l=At(e.interval,i.go.bind(i,">"),M),a=l.isPaused,c=t.Elements,u=t.Elements,h=u.root,f=u.toggle,C=e.autoplay,d,p,v=C==="pause";function g(){C&&(_(),f&&C1(f,I6,c.track.id),v||b(),O())}function _(){e.pauseOnHover&&s(h,"mouseenter mouseleave",function(X){d=X.type==="mouseenter",E()}),e.pauseOnFocus&&s(h,"focusin focusout",function(X){p=X.type==="focusin",E()}),f&&s(f,"click",function(){v?b():P(!0)}),o([a5,Zt,W1],l.rewind),o(a5,z)}function b(){a()&&t.Slides.isEnough()&&(l.start(!e.resetProgress),p=d=v=!1,O(),r(He))}function P(X){X===void 0&&(X=!0),v=!!X,O(),a()||(l.pause(),r(Ve))}function E(){v||(d||p?P(!1):b())}function O(){f&&(t5(f,Y5,!v),C1(f,g2,e.i18n[v?"play":"pause"]))}function M(X){var V=c.bar;V&&x2(V,"width",X*100+"%"),r(hi,X)}function z(X){var V=t.Slides.getAt(X);l.set(V&&+E2(V.slide,uv)||e.interval)}return{mount:g,destroy:l.cancel,play:b,pause:P,isPaused:a}}function fv(i,t,e){var n=F1(i),o=n.on;function s(){e.cover&&(o(qe,S1(l,!0)),o([R5,s2,W1],S1(r,!0)))}function r(a){t.Slides.forEach(function(c){var u=O6(c.container||c.slide,"img");u&&u.src&&l(a,u,c)})}function l(a,c,u){u.style("background",a?'center/cover no-repeat url("'+c.src+'")':"",!0),y6(c,a?"none":"")}return{mount:s,destroy:S1(r,!1)}}var dv=10,Cv=600,pv=.6,vv=1.5,mv=800;function yv(i,t,e){var n=F1(i),o=n.on,s=n.emit,r=i.state.set,l=t.Move,a=l.getPosition,c=l.getLimit,u=l.exceededLimit,h=l.translate,f=i.is(E8),C,d,p=1;function v(){o(a5,P),o([s2,W1],E)}function g(M,z,X,V,Z){var F=a();if(P(),X&&(!f||!u())){var U=t.Layout.sliderSize(),T=Q4(M)*U*dt(a2(M)/U)||0;M=l.toPosition(t.Controller.toDest(M%U))+T}var k=J7(F,M,1);p=1,z=k?0:z||ft(a2(M-F)/vv,mv),d=V,C=At(z,_,S1(b,F,M,Z),1),r(z6),s(Zt),C.start()}function _(){r(k8),d&&d(),s(Q5)}function b(M,z,X,V){var Z=a(),F=M+(z-M)*O(V),U=(F-Z)*p;h(Z+U),f&&!X&&u()&&(p*=pv,a2(U)<dv&&g(c(u(!0)),Cv,!1,d,!0))}function P(){C&&C.cancel()}function E(){C&&!C.isPaused()&&(P(),_())}function O(M){var z=e.easingFunc;return z?z(M):1-Math.pow(1-M,4)}return{mount:v,destroy:P,scroll:g,cancel:E}}var r8={passive:!1,capture:!0};function gv(i,t,e){var n=F1(i),o=n.on,s=n.emit,r=n.bind,l=n.unbind,a=i.state,c=t.Move,u=t.Scroll,h=t.Controller,f=t.Elements.track,C=t.Media.reduce,d=t.Direction,p=d.resolve,v=d.orient,g=c.getPosition,_=c.exceededLimit,b,P,E,O,M,z=!1,X,V,Z;function F(){r(f,_4,X4,r8),r(f,b4,X4,r8),r(f,ki,T,r8),r(f,"click",q,{capture:!0}),r(f,"dragstart",X2),o([R5,s2],U)}function U(){var m=e.drag;y(!m),O=m==="free"}function T(m){if(X=!1,!V){var L=y1(m);o1(m.target)&&(L||!m.button)&&(h.isBusy()?X2(m,!0):(Z=L?f:window,M=a.is([T8,z6]),E=null,r(Z,_4,k,r8),r(Z,b4,D,r8),c.cancel(),u.cancel(),W(m)))}}function k(m){if(a.is(K6)||(a.set(K6),s(oi)),m.cancelable)if(M){c.translate(b+t1(w1(m)));var L=R(m)>E3,S=z!==(z=_());(L||S)&&W(m),X=!0,s(si),X2(m)}else Q(m)&&(M=N(m),X2(m))}function D(m){a.is(K6)&&(a.set(k8),s(ri)),M&&(e1(m),X2(m)),l(Z,_4,k),l(Z,b4,D),M=!1}function q(m){!V&&X&&X2(m,!0)}function W(m){E=P,P=m,b=g()}function e1(m){var L=a1(m),S=c1(L),I=e.rewind&&e.rewindByDrag;C(!1),O?h.scroll(S,0,e.snap):i.is(T6)?h.go(v(Q4(L))<0?I?"<":"-":I?">":"+"):i.is(E8)&&z&&I?h.go(_(!0)?">":"<"):h.go(h.toDest(S),!0),C(!0)}function N(m){var L=e.dragMinThreshold,S=C6(L),I=S&&L.mouse||0,B=(S?L.touch:+L)||10;return a2(w1(m))>(y1(m)?B:I)}function Q(m){return a2(w1(m))>a2(w1(m,!0))}function a1(m){if(i.is(A8)||!z){var L=R(m);if(L&&L<E3)return w1(m)/L}return 0}function c1(m){return g()+Q4(m)*z5(a2(m)*(e.flickPower||600),O?1/0:t.Layout.listSize()*(e.flickMaxPages||1))}function w1(m,L){return A(m,L)-A(x(m),L)}function R(m){return J4(m)-J4(x(m))}function x(m){return P===m&&E||P}function A(m,L){return(y1(m)?m.changedTouches[0]:m)["page"+p(L?"Y":"X")]}function t1(m){return m/(z&&i.is(E8)?Jp:1)}function o1(m){var L=e.noDrag;return!p6(m,"."+bi+", ."+Bt)&&(!L||!p6(m,L))}function y1(m){return typeof TouchEvent<"u"&&m instanceof TouchEvent}function v1(){return M}function y(m){V=m}return{mount:F,disable:y,isDragging:v1}}var _v={Spacebar:" ",Right:Ft,Left:$t,Up:Ci,Down:pi};function Ye(i){return i=k5(i)?i:i.key,_v[i]||i}var P3="keydown";function bv(i,t,e){var n=F1(i),o=n.on,s=n.bind,r=n.unbind,l=i.root,a=t.Direction.resolve,c,u;function h(){f(),o(s2,C),o(s2,f),o(a5,p)}function f(){var g=e.keyboard;g&&(c=g==="global"?window:l,s(c,P3,v))}function C(){r(c,P3)}function d(g){u=g}function p(){var g=u;u=!0,q7(function(){u=g})}function v(g){if(!u){var _=Ye(g);_===a($t)?i.go("<"):_===a(Ft)&&i.go(">")}}return{mount:h,destroy:C,disable:d}}var e6=$e+"-lazy",J6=e6+"-srcset",wv="["+e6+"], ["+J6+"]";function Mv(i,t,e){var n=F1(i),o=n.on,s=n.off,r=n.bind,l=n.emit,a=e.lazyLoad==="sequential",c=[Z8,Q5],u=[];function h(){e.lazyLoad&&(f(),o(W1,f))}function f(){l5(u),C(),a?g():(s(c),o(c,d),d())}function C(){t.Slides.forEach(function(_){De(_.slide,wv).forEach(function(b){var P=E2(b,e6),E=E2(b,J6);if(P!==b.src||E!==b.srcset){var O=e.classes.spinner,M=b.parentElement,z=O6(M,"."+O)||h8("span",O,M);u.push([b,_,z]),b.src||y6(b,"none")}})})}function d(){u=u.filter(function(_){var b=e.perPage*((e.preloadPages||1)+1)-1;return _[1].isWithin(i.index,b)?p(_):!0}),u.length||s(c)}function p(_){var b=_[0];q2(_[1].slide,ie),r(b,"load error",S1(v,_)),C1(b,"src",E2(b,e6)),C1(b,"srcset",E2(b,J6)),U2(b,e6),U2(b,J6)}function v(_,b){var P=_[0],E=_[1];e5(E.slide,ie),b.type!=="error"&&(K5(_[2]),y6(P,""),l(qe,P,E),l(z8)),a&&g()}function g(){u.length&&p(u.shift())}return{mount:h,destroy:S1(l5,u),check:d}}function Lv(i,t,e){var n=F1(i),o=n.on,s=n.emit,r=n.bind,l=t.Slides,a=t.Elements,c=t.Controller,u=c.hasFocus,h=c.getIndex,f=c.go,C=t.Direction.resolve,d=a.pagination,p=[],v,g;function _(){b(),o([s2,W1,Ct],_);var V=e.pagination;d&&y6(d,V?"":"none"),V&&(o([a5,Zt,Q5],X),P(),X(),s(ci,{list:v,items:p},z(i.index)))}function b(){v&&(K5(d?O5(v.children):v),e5(v,g),l5(p),v=null),n.destroy()}function P(){var V=i.length,Z=e.classes,F=e.i18n,U=e.perPage,T=u()?c.getEnd()+1:g6(V/U);v=d||h8("ul",Z.pagination,a.track.parentElement),q2(v,g=Ht+"--"+M()),C1(v,o5,"tablist"),C1(v,g2,F.select),C1(v,We,M()===jt?"vertical":"");for(var k=0;k<T;k++){var D=h8("li",null,v),q=h8("button",{class:Z.page,type:"button"},D),W=l.getIn(k).map(function(N){return N.slide.id}),e1=!u()&&U>1?F.pageX:F.slideX;r(q,"click",S1(E,k)),e.paginationKeyboard&&r(q,"keydown",S1(O,k)),C1(D,o5,"presentation"),C1(q,o5,"tab"),C1(q,I6,W.join(" ")),C1(q,g2,te(e1,k+1)),C1(q,f8,-1),p.push({li:D,button:q,page:k})}}function E(V){f(">"+V,!0)}function O(V,Z){var F=p.length,U=Ye(Z),T=M(),k=-1;U===C(Ft,!1,T)?k=++V%F:U===C($t,!1,T)?k=(--V+F)%F:U==="Home"?k=0:U==="End"&&(k=F-1);var D=p[k];D&&(K7(D.button),f(">"+k),X2(Z,!0))}function M(){return e.paginationDirection||e.direction}function z(V){return p[c.toPage(V)]}function X(){var V=z(h(!0)),Z=z(h());if(V){var F=V.button;e5(F,Y5),U2(F,M3),C1(F,f8,-1)}if(Z){var U=Z.button;q2(U,Y5),C1(U,M3,!0),C1(U,f8,"")}s(ui,{list:v,items:p},V,Z)}return{items:p,mount:_,destroy:b,getAt:z,update:X}}var xv=[" ","Enter"];function kv(i,t,e){var n=e.isNavigation,o=e.slideFocus,s=[];function r(){i.splides.forEach(function(d){d.isParent||(c(i,d.splide),c(d.splide,i))}),n&&u()}function l(){s.forEach(function(d){d.destroy()}),l5(s)}function a(){l(),r()}function c(d,p){var v=F1(d);v.on(a5,function(g,_,b){p.go(p.is(A8)?b:g)}),s.push(v)}function u(){var d=F1(i),p=d.on;p(je,f),p(fi,C),p([R5,s2],h),s.push(d),d.emit(Be,i.splides)}function h(){C1(t.Elements.list,We,e.direction===jt?"vertical":"")}function f(d){i.go(d.index)}function C(d,p){Ze(xv,Ye(p))&&(f(d),X2(p))}return{setup:S1(t.Media.set,{slideFocus:E6(o)?n:o},!0),mount:r,destroy:l,remount:a}}function zv(i,t,e){var n=F1(i),o=n.bind,s=0;function r(){e.wheel&&o(t.Elements.track,"wheel",l,r8)}function l(c){if(c.cancelable){var u=c.deltaY,h=u<0,f=J4(c),C=e.wheelMinThreshold||0,d=e.wheelSleep||0;a2(u)>C&&f-s>d&&(i.go(h?"<":">"),s=f),a(h)&&X2(c)}}function a(c){return!e.releaseWheel||i.state.is(T8)||t.Controller.getAdjacent(c)!==-1}return{mount:r}}var Ev=90;function Pv(i,t,e){var n=F1(i),o=n.on,s=t.Elements.track,r=e.live&&!e.isNavigation,l=h8("span",Wp),a=At(Ev,S1(u,!1));function c(){r&&(f(!t.Autoplay.isPaused()),C1(s,k3,!0),l.textContent="…",o(He,S1(f,!0)),o(Ve,S1(f,!1)),o([Z8,Q5],S1(u,!0)))}function u(C){C1(s,x3,C),C?(S6(s,l),a.start()):(K5(l),a.cancel())}function h(){U2(s,[L3,k3,x3]),K5(l)}function f(C){r&&C1(s,L3,C?"off":"polite")}return{mount:c,disable:f,destroy:h}}var Sv=Object.freeze({__proto__:null,Media:$p,Direction:Fp,Elements:Qp,Slides:ev,Layout:iv,Clones:ov,Move:sv,Controller:rv,Arrows:cv,Autoplay:hv,Cover:fv,Scroll:yv,Drag:gv,Keyboard:bv,LazyLoad:Mv,Pagination:Lv,Sync:kv,Wheel:zv,Live:Pv}),Ov={prev:"Previous slide",next:"Next slide",first:"Go to first slide",last:"Go to last slide",slideX:"Go to slide %s",pageX:"Go to page %s",play:"Start autoplay",pause:"Pause autoplay",carousel:"carousel",slide:"slide",select:"Select a slide to show",slideLabel:"%s of %s"},Rv={type:"slide",role:"region",speed:400,perPage:1,cloneStatus:!0,arrows:!0,pagination:!0,paginationKeyboard:!0,interval:5e3,pauseOnHover:!0,pauseOnFocus:!0,resetProgress:!0,easing:"cubic-bezier(0.25, 1, 0.5, 1)",drag:!0,direction:"ltr",trimSpace:!0,focusableNodes:"a, button, textarea, input, select, iframe",live:!0,classes:Yp,i18n:Ov,reducedMotion:{speed:0,rewindSpeed:0,autoplay:"pause"}};function Iv(i,t,e){var n=t.Slides;function o(){F1(i).on([R5,W1],s)}function s(){n.forEach(function(l){l.style("transform","translateX(-"+100*l.index+"%)")})}function r(l,a){n.style("transition","opacity "+e.speed+"ms "+e.easing),q7(a)}return{mount:o,start:r,cancel:X4}}function Tv(i,t,e){var n=t.Move,o=t.Controller,s=t.Scroll,r=t.Elements.list,l=S1(x2,r,"transition"),a;function c(){F1(i).bind(r,"transitionend",function(C){C.target===r&&a&&(h(),a())})}function u(C,d){var p=n.toPosition(C,!0),v=n.getPosition(),g=f(C);a2(p-v)>=1&&g>=1?e.useScroll?s.scroll(p,g,!1,d):(l("transform "+g+"ms "+e.easing),n.translate(p,!0),a=d):(n.jump(C),d())}function h(){l(""),s.cancel()}function f(C){var d=e.rewindSpeed;if(i.is(E8)&&d){var p=o.getIndex(!0),v=o.getEnd();if(p===0&&C>=v||p>=v&&C===0)return d}return e.speed}return{mount:c,start:u,cancel:h}}var Zv=function(){function i(e,n){this.event=F1(),this.Components={},this.state=Ap(l8),this.splides=[],this._o={},this._E={};var o=k5(e)?X7(document,e):e;t6(o,o+" is invalid."),this.root=o,n=g5({label:E2(o,g2)||"",labelledby:E2(o,Ue)||""},Rv,i.defaults,n||{});try{g5(n,JSON.parse(E2(o,$e)))}catch{t6(!1,"Invalid JSON")}this._o=Object.create(g5({},n))}var t=i.prototype;return t.mount=function(n,o){var s=this,r=this.state,l=this.Components;t6(r.is([l8,ht]),"Already mounted!"),r.set(l8),this._C=l,this._T=o||this._T||(this.is(T6)?Iv:Tv),this._E=n||this._E;var a=m6({},Sv,this._E,{Transition:this._T});return q5(a,function(c,u){var h=c(s,l,s._o);l[u]=h,h.setup&&h.setup()}),q5(l,function(c){c.mount&&c.mount()}),this.emit(R5),q2(this.root,Gp),r.set(k8),this.emit(b3),this},t.sync=function(n){return this.splides.push({splide:n}),n.splides.push({splide:this,isParent:!0}),this.state.is(k8)&&(this._C.Sync.remount(),n.Components.Sync.remount()),this},t.go=function(n){return this._C.Controller.go(n),this},t.on=function(n,o){return this.event.on(n,o),this},t.off=function(n){return this.event.off(n),this},t.emit=function(n){var o;return(o=this.event).emit.apply(o,[n].concat(O5(arguments,1))),this},t.add=function(n,o){return this._C.Slides.add(n,o),this},t.remove=function(n){return this._C.Slides.remove(n),this},t.is=function(n){return this._o.type===n},t.refresh=function(){return this.emit(W1),this},t.destroy=function(n){n===void 0&&(n=!0);var o=this.event,s=this.state;return s.is(l8)?F1(this).on(b3,this.destroy.bind(this,n)):(q5(this._C,function(r){r.destroy&&r.destroy(n)},!0),o.emit(Ne),o.destroy(),n&&l5(this.splides),s.set(ht)),this},Op(i,[{key:"options",get:function(){return this._o},set:function(n){this._C.Media.set(n,!0,!0)}},{key:"length",get:function(){return this._C.Slides.getLength(!0)}},{key:"index",get:function(){return this._C.Controller.getIndex()}}]),i}(),Xe=Zv;Xe.defaults={};Xe.STATES=Ip;const S3=[ti,li,ai,Ve,He,hi,je,Ne,oi,ri,si,ni,ei,qe,R5,a5,Z8,Be,ci,ui,W1,z8,Tt,Zt,Q5,s2,ii],zi="splide";function O3(i){return i!==null&&typeof i=="object"}function Av(i,t){if(i){const e=Object.keys(i);for(let n=0;n<e.length;n++){const o=e[n];if(o!=="__proto__"&&t(i[o],o)===!1)break}}return i}function Ei(i,t){const e=i;return Av(t,(n,o)=>{Array.isArray(n)?e[o]=n.slice():O3(n)?e[o]=Ei(O3(e[o])?e[o]:{},n):e[o]=n}),e}const Dv=R8({name:"SplideTrack",setup(){A0(()=>{var i;const t=p2(zi);(i=t==null?void 0:t.value)==null||i.refresh()})}}),Je=(i,t)=>{const e=i.__vccOpts||i;for(const[n,o]of t)e[n]=o;return e},$v={class:"splide__track"},Fv={class:"splide__list"};function jv(i,t,e,n,o,s){return Y(),i1("div",$v,[w("ul",Fv,[st(i.$slots,"default")])])}const Nv=Je(Dv,[["render",jv]]),Bv=R8({name:"Splide",emits:S3.map(i=>`splide:${i}`),components:{SplideTrack:Nv},props:{tag:{default:"div",type:String},options:{default:{},type:Object},extensions:Object,transition:Function,hasTrack:{default:!0,type:Boolean}},setup(i,t){const e=z1(),n=z1();y8(()=>{n.value&&(e.value=new Xe(n.value,i.options),a(e.value),e.value.mount(i.extensions,i.transition))}),D0(()=>{var c;(c=e.value)==null||c.destroy()}),O2(()=>Ei({},i.options),c=>{e.value&&(e.value.options=c)},{deep:!0}),q8(zi,e);const o=m1(()=>{var c;return((c=e.value)==null?void 0:c.index)||0}),s=m1(()=>{var c;return((c=e.value)==null?void 0:c.length)||0});function r(c){var u;(u=e.value)==null||u.go(c)}function l(c){var u;(u=e.value)==null||u.sync(c)}function a(c){S3.forEach(u=>{c.on(u,(...h)=>{t.emit(`splide:${u}`,c,...h)})})}return{splide:e,root:n,index:o,length:s,go:r,sync:l}}});function Hv(i,t,e,n,o,s){const r=_e("SplideTrack");return Y(),U5(vo(i.tag),{class:"splide",ref:"root"},{default:M5(()=>[i.hasTrack?(Y(),U5(r,{key:0},{default:M5(()=>[st(i.$slots,"default")]),_:3})):st(i.$slots,"default",{key:1})]),_:3},512)}const Vv=Je(Bv,[["render",Hv]]),qv=R8({name:"SplideSlide"}),Uv={class:"splide__slide"};function Wv(i,t,e,n,o,s){return Y(),i1("li",Uv,[st(i.$slots,"default")])}const Gv=Je(qv,[["render",Wv]]);/*!
 * @splidejs/splide-extension-auto-scroll
 * Version  : 0.5.3
 * License  : MIT
 * Copyright: 2022 Naotoshi Fujita
 */function Kv(i){i.length=0}function Qe(i,t,e){return Array.prototype.slice.call(i,t,e)}function Vt(i){return i.bind.apply(i,[null].concat(Qe(arguments,1)))}function R3(i){return requestAnimationFrame(i)}function t9(i,t){return typeof t===i}var Pi=Array.isArray;Vt(t9,"function");Vt(t9,"string");Vt(t9,"undefined");function Si(i){return Pi(i)?i:[i]}function I3(i,t){Si(i).forEach(t)}var Yv=Object.keys;function Xv(i,t,e){if(i){var n=Yv(i);n=e?n.reverse():n;for(var o=0;o<n.length;o++){var s=n[o];if(s!=="__proto__"&&t(i[s],s)===!1)break}}return i}function Jv(i){return Qe(arguments,1).forEach(function(t){Xv(t,function(e,n){i[n]=t[n]})}),i}var Qv=Math.min;function tm(){var i=[];function t(r,l,a,c){o(r,l,function(u,h,f){var C="addEventListener"in u,d=C?u.removeEventListener.bind(u,h,a,c):u.removeListener.bind(u,a);C?u.addEventListener(h,a,c):u.addListener(a),i.push([u,h,f,a,d])})}function e(r,l,a){o(r,l,function(c,u,h){i=i.filter(function(f){return f[0]===c&&f[1]===u&&f[2]===h&&(!a||f[3]===a)?(f[4](),!1):!0})})}function n(r,l,a){var c,u=!0;return typeof CustomEvent=="function"?c=new CustomEvent(l,{bubbles:u,detail:a}):(c=document.createEvent("CustomEvent"),c.initCustomEvent(l,u,!1,a)),r.dispatchEvent(c),c}function o(r,l,a){I3(r,function(c){c&&I3(l,function(u){u.split(" ").forEach(function(h){var f=h.split(".");a(c,f[0],f[1])})})})}function s(){i.forEach(function(r){r[4]()}),Kv(i)}return{bind:t,unbind:e,dispatch:n,destroy:s}}var T3="move",Z3="moved",em="updated",A3="drag",im="dragged",D3="scroll",$3="scrolled",nm="destroy";function om(i){var t=i?i.event.bus:document.createDocumentFragment(),e=tm();function n(s,r){e.bind(t,Si(s).join(" "),function(l){r.apply(r,Pi(l.detail)?l.detail:[])})}function o(s){e.dispatch(t,s,Qe(arguments,1))}return i&&i.event.on(nm,e.destroy),Jv(e,{bus:t,on:n,off:Vt(e.unbind,t),emit:o})}function Oi(i,t,e,n){var o=Date.now,s,r=0,l,a=!0,c=0;function u(){if(!a){if(r=i?Qv((o()-s)/i,1):1,e&&e(r),r>=1&&(t(),s=o(),n&&++c>=n))return f();R3(u)}}function h(g){!g&&d(),s=o()-(g?r*i:0),a=!1,R3(u)}function f(){a=!0}function C(){s=o(),r=0,e&&e(r)}function d(){l&&cancelAnimationFrame(l),r=0,l=0,a=!0}function p(g){i=g}function v(){return a}return{start:h,rewind:C,pause:f,cancel:d,set:p,isPaused:v}}function sm(i,t){var e;function n(){e||(e=Oi(t||0,function(){i(),e=null},null,1),e.start())}return n}var rm="is-active",lm="slide",am="fade";function Ri(i,t,e){return Array.prototype.slice.call(i,t,e)}function e9(i){return i.bind(null,...Ri(arguments,1))}function qt(i,t){return typeof t===i}function ne(i){return!Ii(i)&&qt("object",i)}const cm=Array.isArray;e9(qt,"function");e9(qt,"string");const um=e9(qt,"undefined");function Ii(i){return i===null}function hm(i){return cm(i)?i:[i]}function pt(i,t){hm(i).forEach(t)}function fm(i,t,e){i&&pt(t,n=>{n&&i.classList[e?"add":"remove"](n)})}const dm=Object.keys;function Ti(i,t,e){if(i){let n=dm(i);n=e?n.reverse():n;for(let o=0;o<n.length;o++){const s=n[o];if(s!=="__proto__"&&t(i[s],s)===!1)break}}return i}function F3(i){return Ri(arguments,1).forEach(t=>{Ti(t,(e,n)=>{i[n]=t[n]})}),i}function Cm(i,t){pt(i,e=>{pt(t,n=>{e&&e.removeAttribute(n)})})}function Zi(i,t,e){ne(t)?Ti(t,(n,o)=>{Zi(i,o,n)}):pt(i,n=>{Ii(e)||e===""?Cm(n,t):n.setAttribute(t,String(e))})}const{min:j3,max:N3,floor:X_,ceil:J_,abs:Q_}=Math;function pm(i,t,e){const n=j3(t,e),o=N3(t,e);return j3(N3(n,i),o)}const vm={speed:1,autoStart:!0,pauseOnHover:!0,pauseOnFocus:!0},mm={startScroll:"Start auto scroll",pauseScroll:"Pause auto scroll"};function ym(i,t,e){const{on:n,off:o,bind:s,unbind:r}=om(i),{translate:l,getPosition:a,toIndex:c,getLimit:u}=t.Move,{setIndex:h,getIndex:f}=t.Controller,{orient:C}=t.Direction,{toggle:d}=t.Elements,{Live:p}=t,{root:v}=i,g=sm(t.Arrows.update,500);let _={},b,P,E,O,M,z;function X(){const{autoScroll:c1}=e;_=F3({},vm,ne(c1)?c1:{})}function V(){i.is(am)||!b&&e.autoScroll!==!1&&(b=Oi(0,W),F(),T())}function Z(){b&&(b.cancel(),b=null,z=void 0,o([T3,A3,D3,Z3,$3]),r(v,"mouseenter mouseleave focusin focusout"),r(d,"click"))}function F(){_.pauseOnHover&&s(v,"mouseenter mouseleave",c1=>{E=c1.type==="mouseenter",q()}),_.pauseOnFocus&&s(v,"focusin focusout",c1=>{O=c1.type==="focusin",q()}),_.useToggleButton&&s(d,"click",()=>{P?k():D()}),n(em,U),n([T3,A3,D3],()=>{M=!0,D(!1)}),n([Z3,im,$3],()=>{M=!1,q()})}function U(){const{autoScroll:c1}=e;c1!==!1?(_=F3({},_,ne(c1)?c1:{}),V()):Z(),b&&!um(z)&&l(z)}function T(){_.autoStart&&(document.readyState==="complete"?k():s(window,"load",k))}function k(){a1()&&(b.start(!0),p.disable(!0),O=E=P=!1,Q())}function D(c1=!0){P||(P=c1,Q(),a1()||(b.pause(),p.disable(!1)))}function q(){P||(E||O||M?D(!1):k())}function W(){const c1=a(),w1=e1(c1);c1!==w1?(l(w1),N(z=a())):(D(!1),_.rewind&&i.go(_.speed>0?0:t.Controller.getEnd())),g()}function e1(c1){const w1=_.speed||1;return c1+=C(w1),i.is(lm)&&(c1=pm(c1,u(!1),u(!0))),c1}function N(c1){const{length:w1}=i,R=(c(c1)+w1)%w1;R!==f()&&(h(R),t.Slides.update(),t.Pagination.update(),e.lazyLoad==="nearby"&&t.LazyLoad.check())}function Q(){if(d){const c1=P?"startScroll":"pauseScroll";fm(d,rm,!P),Zi(d,"aria-label",e.i18n[c1]||mm[c1])}}function a1(){return!b||b.isPaused()}return{setup:X,mount:V,destroy:Z,play:k,pause:D,isPaused:a1}}const gm=["src"],_m={class:"splide_button"},bm={class:"splide_ability"},wm={class:"splide_name"},Mm={__name:"CharacterCard",emits:["open"],setup(i,{emit:t}){const{characterData:e,abilityImgList:n}=Rt(),{publicSrc:o}=I8(),s=z1(),r={AutoScroll:ym},l={type:"loop",gap:"2%",autoWidth:!0,focus:"center",lazyLoad:"nearby",preloadPages:3,arrows:!1,pagination:!1,autoScroll:{speed:.8,autoStart:!1}},a=(C,d,p)=>{const v=d.slide.dataset.id*1;t("open",v)},c=new IntersectionObserver(([C])=>{var g,_;if(!s.value)return;const d=C.isIntersecting,p=(g=s.value)==null?void 0:g.root.firstChild.firstChild,{AutoScroll:v}=(_=s.value)==null?void 0:_.splide.Components;d?(p.style.willChange="transform",v.play()):(p.style.willChange="",v.pause())},{threshold:0});w6(()=>c.observe(s.value.root));const u=(C,d)=>{var v;return((v=n.find(g=>g.id===d))==null?void 0:v.src)??""},h=C=>`color: ${C};`,f=C=>{const d=o(`/school/${C}.svg`);return`mask-image: url(${d}); -webkit-mask-image: url(${d});`};return(C,d)=>(Y(),i1("div",null,[u1($(Vv),{class:"py-5","onSplide:click":a,options:l,extensions:r,ref_key:"splide",ref:s},{default:M5(()=>[(Y(!0),i1(R1,null,Q2($(e),p=>(Y(),U5($(Gv),{class:"splide_box","data-id":p.id},{default:M5(()=>[w("div",{class:t2(["splide_card group",`splide_card_${p.id}`]),style:B1(h(p.color))},[w("div",{class:"splide_school",style:B1(f(p.school_img))},null,4),w("img",{class:"splide_img",src:u(p.img_name,p.id)},null,8,gm),w("button",_m,[w("span",bm,K1(p.ability),1),w("span",wm,K1(p.name),1)])],6)]),_:2},1032,["data-id"]))),256))]),_:1},512)]))}},Lm=x1(Mm,[["__scopeId","data-v-1b3d9ebc"]]),xm={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},km=w("path",{fill:"currentColor",d:"M15.5 5H11l5 7l-5 7h4.5l5-7z"},null,-1),zm=w("path",{fill:"currentColor",d:"M8.5 5H4l5 7l-5 7h4.5l5-7z"},null,-1),Em=[km,zm];function Pm(i,t){return Y(),i1("svg",xm,Em)}const B3={name:"ic-baseline-double-arrow",render:Pm},Sm={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},Om=w("path",{fill:"currentColor",d:"M15.5 14h-.79l-.28-.27a6.5 6.5 0 0 0 1.48-5.34c-.47-2.78-2.79-5-5.59-5.34a6.505 6.505 0 0 0-7.27 7.27c.34 2.8 2.56 5.12 5.34 5.59a6.5 6.5 0 0 0 5.34-1.48l.27.28v.79l4.25 4.25c.41.41 1.08.41 1.49 0c.41-.41.41-1.08 0-1.49L15.5 14zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5S14 7.01 14 9.5S11.99 14 9.5 14z"},null,-1),Rm=[Om];function Im(i,t){return Y(),i1("svg",Sm,Rm)}const Tm={name:"ic-round-search",render:Im},Zm={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},Am=w("path",{fill:"currentColor",d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"},null,-1),Dm=[Am];function $m(i,t){return Y(),i1("svg",Zm,Dm)}const Fm={name:"ic-baseline-person",render:$m};const Ai=i=>(c5("data-v-b3980967"),i=i(),u5(),i),jm={class:"character scrollbar overflow-y-auto overscroll-none"},Nm={class:"character_school"},Bm={class:"character_detail"},Hm={class:"character_title"},Vm={class:"flex justify-center"},qm={class:"mx-5"},Um={class:"text-primary"},Wm={class:"mt-3 flex flex-wrap justify-center text-2xl md:mt-2 md:text-xl"},Gm=Ai(()=>w("div",{class:"hr"},null,-1)),Km={class:"character_info"},Ym={class:"character_th"},Xm={class:"relative z-10 whitespace-nowrap font-bold text-back"},Jm=["title"],Qm=Ai(()=>w("div",{class:"hr"},null,-1)),ty={class:"character_aside"},ey={class:"character_mantra"},iy={class:"text-white"},ny={class:"whitespace-nowrap"},oy={class:"relative grow"},sy={class:"m-3 md:m-1.5"},ry={class:"pointer-events-none mb-px w-10"},ly={class:"pointer-events-none mb-px w-10"},ay={__name:"CharacterInfo",props:{id:{type:[Number],default:4}},emits:["update:id"],setup(i,{emit:t}){const e=i,n=S5(),{lang:o}=V2(n),{abilityText:s,characterData:r,abilityImgList:l,tachieImgList:a}=Rt(),{publicSrc:c}=I8(),u=z1(null),h=z1(null),f=z1(0),C=m1(()=>M(f.value)),d=m1(()=>{var N,Q;const{name:T,spell:k}=C.value,[D,q]=((N=T==null?void 0:T.split)==null?void 0:N.call(T," "))??[],[W,e1]=((Q=k==null?void 0:k.split)==null?void 0:Q.call(k," "))??[];return{first:[D,W],last:[q,e1]}}),p=m1(()=>{var T;return(T=C.value.description)==null?void 0:T.split(`
`)}),v=m1(()=>{var T;return(T=C.value.mantra)==null?void 0:T.split(`
`)}),g=m1(()=>{const T=C.value.school_img,k=c(`/school/${T}.svg`);return T?k:""}),_=m1(()=>`character_author-${C.value.author_img}`),b=m1(()=>{var D;const T=f.value;return((D=a.find(q=>q.id===T))==null?void 0:D.src)??""}),P=m1(()=>{var D;const T=f.value;return((D=l.find(q=>q.id===T))==null?void 0:D.src)??""}),E=m1(()=>{const T=z(1),k=M(T),D=k.img_name?c(`/dot/${k.img_name}.png`):"";return{name:k.name,src:D}}),O=m1(()=>{const T=z(-1),k=M(T),D=k.img_name?c(`/dot/${k.img_name}.png`):"";return{name:k.name,src:D}}),M=T=>{const k=r.value.find(q=>q.id===T)??{},D=JSON.parse(JSON.stringify(k));return D.birth=(D.birth??"").split("-").join("月")+"日",D},z=T=>{const k=r.value.length;let D=f.value+T;return D<0&&(D=k+D),D>=k&&(D=k-D),D},X=T=>{const k=u.value;k.classList.add("opacity-0"),setTimeout(()=>f.value=z(T),350),setTimeout(()=>{k.classList.remove("opacity-0")},700)};O2(f,T=>{var k,D;t("update:id",T),(k=u.value)==null||k.parentNode.scrollTo(0,0),(D=h.value)==null||D.scrollTo(0,0)}),O2(()=>e.id,()=>f.value=e.id,{immediate:!0});const V=z1(!1),Z=z1(0),F=(T=0)=>{V.value=!V.value,Z.value=T},U=[{title_zh:"身高",title_jp:"身長",dataName:"height",size:"w-1/2 lg:w-full"},{title_zh:"體重",title_jp:"体重",dataName:"weight",size:"w-1/2 lg:w-full"},{title_zh:"胸圍",title_jp:"胸囲",dataName:"chest",size:"w-1/2 lg:w-full"},{title_zh:"血型",title_jp:"血液型",dataName:"blood",size:"w-1/2 lg:w-full"},{title_zh:"生日",title_jp:"誕生日",dataName:"birth",size:"w-1/2 xxl:w-full character_table-col"},{title_zh:"原作者",title_jp:"原作者",dataName:"author",size:"w-1/2 xxl:w-full xxl:order-2"},{title_zh:"喜歡的東西",title_jp:"好きなもの",dataName:"like",size:"w-full character_table-col"},{title_zh:"討厭的東西",title_jp:"嫌いなもの",dataName:"unlike",size:"w-full character_table-col"},{title_zh:"原學校",title_jp:"出身校",dataName:"school",size:"w-full character_table-col"}];return(T,k)=>(Y(),i1(R1,null,[w("section",jm,[w("div",{class:"character_container",ref_key:"charContainer",ref:u},[U1(w("img",Nm,null,512),[[$(F2),$(g)]]),w("div",{class:t2(["character_author left-0",$(_)])},null,2),w("div",{class:t2(["character_author right-0 rotate-180",$(_)])},null,2),w("div",Bm,[w("div",Hm,[w("div",Vm,[(Y(!0),i1(R1,null,Q2($(d),D=>(Y(),i1("p",qm,[w("h1",null,K1(D[0]),1),w("h2",Um,K1(D[1]),1)]))),256))]),w("h3",Wm,[w("span",null,K1($(s)),1),w("span",null,K1($(C).ability),1)])]),Gm,w("div",Km,[(Y(),i1(R1,null,Q2(U,D=>w("div",{class:t2(["character_table",D.size])},[w("p",Ym,[w("span",Xm,K1(D[`title_${$(o)}`]),1)]),w("p",null,[c6(K1($(C)[D.dataName]),1),D.dataName==="birth"?(Y(),i1("span",{key:0,title:$(C).birth_remark},"("+K1($(C).star_sign)+"座)",9,Jm)):Do("",!0)])],2)),64))]),Qm,w("div",{class:"character_description scrollbar",ref_key:"charDescription",ref:h},[(Y(!0),i1(R1,null,Q2($(p),D=>(Y(),i1("p",null,K1(D),1))),256))],512)]),w("div",ty,[w("div",ey,[w("div",iy,[(Y(!0),i1(R1,null,Q2($(v),D=>(Y(),i1("p",ny,K1(D),1))),256))])]),w("div",oy,[w("div",sy,[w("button",{class:"character_scale",onClick:k[0]||(k[0]=D=>F(0)),title:"立ち絵"},[u1($(Tm))]),w("button",{class:"character_scale mt-2",onClick:k[1]||(k[1]=D=>F(1)),title:"才能絵"},[u1($(Fm))])]),U1(w("img",{class:t2(["character_image",`character_image_${f.value}`])},null,2),[[$(F2),$(b)]])])]),w("button",{class:"character_prev left-0 rounded-r-2xl lg:-translate-x-1/2 lg:rounded-br-none",onClick:k[2]||(k[2]=D=>X(1))},[U1(w("img",ry,null,512),[[$(F2),$(E).src]]),w("p",null,K1($(E).name),1),u1($(B3),{class:"mr-px -scale-100"})]),w("button",{class:"character_prev right-0 rounded-l-2xl lg:translate-x-1/2 lg:rounded-bl-none",onClick:k[3]||(k[3]=D=>X(-1))},[U1(w("img",ly,null,512),[[$(F2),$(O).src]]),w("p",null,K1($(O).name),1),u1($(B3),{class:"ml-px"})])],512)]),U1(w("div",{class:"character_scale_popup",onClick:F},[U1(w("img",null,null,512),[[$(F2),$(b)],[n5,Z.value===0]]),U1(w("img",null,null,512),[[$(F2),$(P)],[n5,Z.value===1]])],512),[[n5,V.value]])],64))}},cy=x1(ay,[["__scopeId","data-v-b3980967"]]);const uy=i=>(c5("data-v-e834445e"),i=i(),u5(),i),hy={class:"characters wrapper"},fy=uy(()=>w("div",{class:"wrapper_hash",id:"characters"},null,-1)),dy={class:"mb-5 flex lg:mb-3"},Cy=["title"],py={class:"mb-10 flex items-center flex-col-reverse lg:mb-8 sm:mb-5"},vy={class:"font-sans tracking-widest"},my={class:"characters_close"},yy={class:"characters_window"},gy={__name:"Character",setup(i){const t=S5(),{lang:e}=V2(t);Rt();const n=m1(()=>k6().getNavItem("characters")),o=z1(!1),s=z1(0),r=z1(null),l=c=>{s.value=c,o.value=!0,r.value.classList.add("opacity-0","blur-2xl"),document.body.classList.add("overflow-hidden"),setTimeout(()=>{r.value.classList.remove("opacity-0","blur-2xl")},100)},a=c=>{c.target.matches(".characters_window, .characters_window *")||(o.value=!1,document.body.classList.remove("overflow-hidden"))};return(c,u)=>(Y(),i1(R1,null,[w("section",hy,[fy,w("div",dy,[w("h2",{class:"title text-gray-500",title:$(n)},"CHARACTER",8,Cy)]),w("div",py,[u1($(f6),{class:"characters_button",to:{name:"prediction",query:{lang:$(e)}}},{default:M5(()=>[w("span",vy,K1($(e)==="jp"?"生死予想シート":"生死預測表")+" →",1)]),_:1},8,["to"])]),U1(u1(Lm,{class:"fullpage",onOpen:l},null,512),[[$(y5),500]])]),U1(w("div",{class:"characters_popup",onClick:a,ref_key:"charPopup",ref:r},[w("button",my,[u1($(Sp))]),w("div",yy,[u1(cy,{id:s.value,"onUpdate:id":u[0]||(u[0]=h=>s.value=h)},null,8,["id"])])],512),[[n5,o.value]])],64))}},_y=x1(gy,[["__scopeId","data-v-e834445e"]]),by={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},wy=w("path",{fill:"currentColor",d:"M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v2H8v2h8v-2h-2v-2h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H3V4h18v12z"},null,-1),My=[wy];function Ly(i,t){return Y(),i1("svg",by,My)}const xy={name:"ic-outline-desktop-windows",render:Ly},ky={viewBox:"0 0 24 24",width:"1.2em",height:"1.2em"},zy=w("path",{fill:"currentColor",d:"M16 1H8C6.34 1 5 2.34 5 4v16c0 1.66 1.34 3 3 3h8c1.66 0 3-1.34 3-3V4c0-1.66-1.34-3-3-3zm-2 20h-4v-1h4v1zm3.25-3H6.75V4h10.5v14z"},null,-1),Ey=[zy];function Py(i,t){return Y(),i1("svg",ky,Ey)}const Sy={name:"ic-baseline-phone-android",render:Py};const Oy=i=>(c5("data-v-766a6301"),i=i(),u5(),i),Ry={class:"special wrapper flex flex-col"},Iy=Oy(()=>w("div",{class:"wrapper_hash",id:"special"},null,-1)),Ty={class:"mb-12 flex lg:mb-6"},Zy=["title"],Ay={class:"flex grow p-5 text-white md:flex-col"},Dy={class:"special_box"},$y={class:"pointer-events-none w-3/5 lg:w-full"},Fy={class:"flex w-full flex-col px-10 w-2/5 lg:w-full lg:max-w-xl lg:px-0"},jy=["href"],Ny=["href"],By={__name:"Special",setup(i){const t=m1(()=>k6().getNavItem("special")),{publicSrc:e}=I8();return(n,o)=>(Y(),i1("section",Ry,[Iy,w("div",Ty,[w("h2",{class:"title text-gray-300",title:$(t)},"SPECIAL",8,Zy)]),w("div",Ay,[U1((Y(),i1("div",Dy,[U1(w("img",$y,null,512),[[$(F2),$(e)("/image/wallpaper_1_desktop.png")]]),w("div",Fy,[w("a",{class:"special_button",href:$(e)("/image/wallpaper_1_desktop.png"),title:"wallpaper_desktop",download:""},[c6("1920 X 1080"),u1($(xy),{class:"w-10"})],8,jy),w("a",{class:"special_button",href:$(e)("/image/wallpaper_1_mobile.png"),title:"wallpaper_mobile",download:""},[c6("1080 X 1920"),u1($(Sy),{class:"w-10"})],8,Ny)])])),[[$(y5),500,"b"]])])]))}},Hy=x1(By,[["__scopeId","data-v-766a6301"]]);const Vy=i=>(c5("data-v-f7287638"),i=i(),u5(),i),qy={class:"products wrapper"},Uy=Vy(()=>w("div",{class:"wrapper_hash",id:"product"},null,-1)),Wy={class:"mb-12 flex lg:mb-6"},Gy=["title"],Ky={class:"products_container"},Yy={class:"pointer-events-none w-80"},Xy={class:"ml-10 lg:ml-0 lg:mt-10 sm:mt-6"},Jy={__name:"Products",setup(i){const t=S5(),{lang:e}=V2(t),n=m1(()=>k6().getNavItem("product")),{publicSrc:o}=I8(),s={zh:[{title:"標題",content:"槍彈辯駁10MINS ～驚心動魄修學旅行 in the ocean～",class:"w-28 sm:w-20"},{title:"平台",content:"PC",class:"w-28 sm:w-20"},{title:"發售日",content:"2024年04月01日",class:"w-28 sm:w-20"},{title:"價格",content:"FREE",class:"w-28 sm:w-20"},{title:"對應語言",content:"中文、日文",class:"w-28 sm:w-20"},{title:"類型",content:"超高速推理動作遊戲",class:"w-28 sm:w-20"},{title:"主題",content:"PSYCHO OCEAN",class:"w-28 sm:w-20"},{title:"CERO",content:"D（17歲以上對象）",class:"w-28 sm:w-20"},{title:"角色設計",content:"全員",class:"w-40 sm:w-36",tr:"mt-5"},{title:"主辦人&網頁製作",content:"ヤジルシ",class:"w-40 sm:w-36"},{title:"立繪&3D建模",content:"いもまる",class:"w-40 sm:w-36"},{title:"CG&遊戲腳本",content:"地瓜探員",class:"w-40 sm:w-36"},{title:"CG&設計&翻譯",content:"Zoe",class:"w-40 sm:w-36"}],jp:[{title:"タイトル",content:"ダンガンロンパ10MINS ～ドキメキ修学旅行 in the ocean～",class:"w-28 sm:w-20"},{title:"機種",content:"PC",class:"w-28 sm:w-20"},{title:"発売日",content:"2024年04月01日",class:"w-28 sm:w-20"},{title:"価格",content:"FREE",class:"w-28 sm:w-20"},{title:"対応言語",content:"中国語、日本語",class:"w-28 sm:w-20"},{title:"ジャンル",content:"ハイスピード推理アクション",class:"w-28 sm:w-20"},{title:"テーマ",content:"サイコオーシャン",class:"w-28 sm:w-20"},{title:"CERO",content:"D（17才以上対象）",class:"w-28 sm:w-20"},{title:"キャラクターデザイン",content:"全員",class:"w-48 sm:w-40",tr:"mt-5"},{title:"主催&サイト制作",content:"ヤジルシ",class:"w-48 sm:w-40"},{title:"立ち絵&3D",content:"いもまる",class:"w-48 sm:w-40"},{title:"CG&シナリオ",content:"地瓜探員",class:"w-48 sm:w-40"},{title:"CG&デザイン&翻訳",content:"Zoe",class:"w-48 sm:w-40"}]},r=m1(()=>s[e.value]);return(l,a)=>(Y(),i1("section",qy,[Uy,w("div",Wy,[w("h2",{class:"title text-gray-100",title:$(n)},"PRODUCT",8,Gy)]),w("div",Ky,[U1(w("img",Yy,null,512),[[$(F2),$(o)(`/image/package_${$(e)}.png`)],[$(y5),500,"l"]]),U1((Y(),i1("div",Xy,[(Y(!0),i1(R1,null,Q2($(r),c=>(Y(),i1("div",{class:t2(["products_tr",c.tr])},[w("p",{class:t2(["products_th",c.class])},[(Y(!0),i1(R1,null,Q2(c.title,u=>(Y(),i1("span",null,K1(u),1))),256))],2),w("p",null,K1(c.content),1)],2))),256))])),[[$(y5),500,"b"]])])]))}},Qy=x1(Jy,[["__scopeId","data-v-f7287638"]]),tg={__name:"Index",setup(i){return(t,e)=>(Y(),i1(R1,null,[u1(Zd),u1(rp),u1(CC),u1(xp),u1(_y),u1(Hy),u1(Qy),u1(SC),u1($d),u1(zd)],64))}},eg=xr({history:Hs("/TenDanganronpa/"),routes:[{path:"/",name:"index",component:tg},{path:"/prediction",name:"prediction",component:()=>Rr(()=>import("./Prediction-26349f65.js"),["assets/Prediction-26349f65.js","assets/Prediction-f542ba76.css"])}],scrollBehavior(i){if(i.hash)return{el:i.hash}}});class ig{constructor(){this._listeners=new Map}addEventListener(t,e){var n;this.removeEventListener(t,e),this._listeners.get(t)||this._listeners.set(t,[]),(n=this._listeners.get(t))===null||n===void 0||n.push(e)}dispatchEvent(t,e){var n;(n=this._listeners.get(t))===null||n===void 0||n.forEach(o=>o(e))}hasEventListener(t){return!!this._listeners.get(t)}removeAllEventListeners(t){t?this._listeners.delete(t):this._listeners=new Map}removeEventListener(t,e){const n=this._listeners.get(t);if(!n)return;const o=n.length,s=n.indexOf(e);s<0||(o===1?this._listeners.delete(t):n.splice(s,1))}}class C2{constructor(t,e,n){if(typeof t!="number"&&t){this.x=t.x,this.y=t.y;const o=t;this.z=o.z?o.z:0}else if(t!==void 0&&e!==void 0)this.x=t,this.y=e,this.z=n??0;else throw new Error("tsParticles - Vector3d not initialized correctly")}static get origin(){return C2.create(0,0,0)}get angle(){return Math.atan2(this.y,this.x)}set angle(t){this.updateFromAngle(t,this.length)}get length(){return Math.sqrt(this.getLengthSq())}set length(t){this.updateFromAngle(this.angle,t)}static clone(t){return C2.create(t.x,t.y,t.z)}static create(t,e,n){return new C2(t,e,n)}add(t){return C2.create(this.x+t.x,this.y+t.y,this.z+t.z)}addTo(t){this.x+=t.x,this.y+=t.y,this.z+=t.z}copy(){return C2.clone(this)}distanceTo(t){return this.sub(t).length}distanceToSq(t){return this.sub(t).getLengthSq()}div(t){return C2.create(this.x/t,this.y/t,this.z/t)}divTo(t){this.x/=t,this.y/=t,this.z/=t}getLengthSq(){return this.x**2+this.y**2}mult(t){return C2.create(this.x*t,this.y*t,this.z*t)}multTo(t){this.x*=t,this.y*=t,this.z*=t}rotate(t){return C2.create(this.x*Math.cos(t)-this.y*Math.sin(t),this.x*Math.sin(t)+this.y*Math.cos(t),0)}setTo(t){this.x=t.x,this.y=t.y;const e=t;this.z=e.z?e.z:0}sub(t){return C2.create(this.x-t.x,this.y-t.y,this.z-t.z)}subFrom(t){this.x-=t.x,this.y-=t.y,this.z-=t.z}updateFromAngle(t,e){this.x=Math.cos(t)*e,this.y=Math.sin(t)*e}}class d8 extends C2{constructor(t,e){super(t,e,0)}static get origin(){return d8.create(0,0)}static clone(t){return d8.create(t.x,t.y)}static create(t,e){return new d8(t,e)}}let ng=Math.random;function E5(){return Di(ng(),0,1-1e-16)}function Di(i,t,e){return Math.min(Math.max(i,t),e)}function C8(i){const t=n9(i);let e=i9(i);return t===e&&(e=0),E5()*(t-e)+e}function Z1(i){return typeof i=="number"?i:C8(i)}function i9(i){return typeof i=="number"?i:i.min}function n9(i){return typeof i=="number"?i:i.max}function L1(i,t){if(i===t||t===void 0&&typeof i=="number")return i;const e=i9(i),n=n9(i);return t!==void 0?{min:Math.min(e,t),max:Math.max(n,t)}:L1(e,n)}function og(i){const t=i.random,{enable:e,minimumValue:n}=typeof t=="boolean"?{enable:t,minimumValue:0}:t;return Z1(e?L1(i.value,n):i.value)}function sg(i,t){const e=i.x-t.x,n=i.y-t.y;return{dx:e,dy:n,distance:Math.sqrt(e**2+n**2)}}function o9(i,t){return sg(i,t).distance}function rg(i,t,e){if(typeof i=="number")return i*Math.PI/180;switch(i){case"top":return-Math.PI/2;case"top-right":return-Math.PI/4;case"right":return 0;case"bottom-right":return Math.PI/4;case"bottom":return Math.PI/2;case"bottom-left":return 3*Math.PI/4;case"left":return Math.PI;case"top-left":return-3*Math.PI/4;case"inside":return Math.atan2(e.y-t.y,e.x-t.x);case"outside":return Math.atan2(t.y-e.y,t.x-e.x);default:return E5()*Math.PI*2}}function lg(i){const t=d8.origin;return t.length=1,t.angle=i,t}function ag(i){return i.position&&i.position.x!==void 0&&i.position.y!==void 0?{x:i.position.x*i.size.width/100,y:i.position.y*i.size.height/100}:void 0}function cg(i){var t,e,n,o;return{x:(e=(t=i.position)===null||t===void 0?void 0:t.x)!==null&&e!==void 0?e:E5()*i.size.width,y:(o=(n=i.position)===null||n===void 0?void 0:n.y)!==null&&o!==void 0?o:E5()*i.size.height}}function $i(i){return i?i.endsWith("%")?parseFloat(i)/100:parseFloat(i):1}function Z6(){return typeof window>"u"||!window||typeof window.document>"u"||!window.document}function ug(){return!Z6()&&typeof matchMedia<"u"}function Fi(i){if(ug())return matchMedia(i)}function hg(){return Z6()?i=>setTimeout(i):i=>(requestAnimationFrame||setTimeout)(i)}function fg(){return Z6()?i=>clearTimeout(i):i=>(cancelAnimationFrame||clearTimeout)(i)}function dg(i,t){return i===t||t instanceof Array&&t.indexOf(i)>-1}function Cg(i){return Math.floor(E5()*i.length)}function s9(i,t,e=!0){return i[t!==void 0&&e?t%i.length:Cg(i)]}function e2(i,...t){for(const e of t){if(e==null)continue;if(typeof e!="object"){i=e;continue}const n=Array.isArray(e);n&&(typeof i!="object"||!i||!Array.isArray(i))?i=[]:!n&&(typeof i!="object"||!i||Array.isArray(i))&&(i={});for(const o in e){if(o==="__proto__")continue;const s=e,r=s[o],l=typeof r=="object",a=i;a[o]=l&&Array.isArray(r)?r.map(c=>e2(a[o],c)):e2(a[o],r)}}return i}function X5(i,t){return i instanceof Array?i.map((e,n)=>t(e,n)):t(i,0)}function i6(i,t,e){return i instanceof Array?s9(i,t,e):i}const pg="random",Ut=new Map;function ji(i){Ut.set(i.key,i)}function w4(i,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?i+(t-i)*6*e:e<1/2?t:e<2/3?i+(t-i)*(2/3-e)*6:i}function vg(i){for(const[,s]of Ut)if(i.startsWith(s.stringPrefix))return s.parseString(i);const t=/^#?([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i,e=i.replace(t,(s,r,l,a,c)=>r+r+l+l+a+a+(c!==void 0?c+c:"")),n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i,o=n.exec(e);return o?{a:o[4]!==void 0?parseInt(o[4],16)/255:1,b:parseInt(o[3],16),g:parseInt(o[2],16),r:parseInt(o[1],16)}:void 0}function p8(i,t,e=!0){if(!i)return;const n=typeof i=="string"?{value:i}:i;if(typeof n.value=="string")return Ni(n.value,t,e);if(n.value instanceof Array)return p8({value:s9(n.value,t,e)});for(const[,o]of Ut){const s=o.handleRangeColor(n);if(s)return s}}function Ni(i,t,e=!0){if(!i)return;const n=typeof i=="string"?{value:i}:i;if(typeof n.value=="string")return n.value===pg?_g():yg(n.value);if(n.value instanceof Array)return Ni({value:s9(n.value,t,e)});for(const[,o]of Ut){const s=o.handleColor(n);if(s)return s}}function H3(i,t,e=!0){const n=p8(i,t,e);return n?mg(n):void 0}function mg(i){const t=i.r/255,e=i.g/255,n=i.b/255,o=Math.max(t,e,n),s=Math.min(t,e,n),r={h:0,l:(o+s)/2,s:0};return o!==s&&(r.s=r.l<.5?(o-s)/(o+s):(o-s)/(2-o-s),r.h=t===o?(e-n)/(o-s):r.h=e===o?2+(n-t)/(o-s):4+(t-e)/(o-s)),r.l*=100,r.s*=100,r.h*=60,r.h<0&&(r.h+=360),r.h>=360&&(r.h-=360),r}function yg(i){return vg(i)}function oe(i){const t={b:0,g:0,r:0},e={h:i.h/360,l:i.l/100,s:i.s/100};if(!e.s)t.b=e.l,t.g=e.l,t.r=e.l;else{const n=e.l<.5?e.l*(1+e.s):e.l+e.s-e.l*e.s,o=2*e.l-n;t.r=w4(o,n,e.h+1/3),t.g=w4(o,n,e.h),t.b=w4(o,n,e.h-1/3)}return t.r=Math.floor(t.r*255),t.g=Math.floor(t.g*255),t.b=Math.floor(t.b*255),t}function gg(i){const t=oe(i);return{a:i.a,b:t.b,g:t.g,r:t.r}}function _g(i){const t=i??0;return{b:Math.floor(C8(L1(t,256))),g:Math.floor(C8(L1(t,256))),r:Math.floor(C8(L1(t,256)))}}function Q6(i,t){return`rgba(${i.r}, ${i.g}, ${i.b}, ${t??1})`}function V3(i,t){return`hsla(${i.h}, ${i.s}%, ${i.l}%, ${t??1})`}function q3(i){return i!==void 0?{h:i.h.value,s:i.s.value,l:i.l.value}:void 0}function bg(i,t,e){i.fillStyle=e??"rgba(0,0,0,0)",i.fillRect(0,0,t.width,t.height)}function wg(i,t,e,n){e&&(i.globalAlpha=n,i.drawImage(e,0,0,t.width,t.height),i.globalAlpha=1)}function M4(i,t){i.clearRect(0,0,t.width,t.height)}function Mg(i){var t,e,n,o,s;const{container:r,context:l,particle:a,delta:c,colorStyles:u,backgroundMask:h,composite:f,radius:C,opacity:d,shadow:p,transform:v}=i,g=a.getPosition(),_=a.rotation+(a.pathRotation?a.velocity.angle:0),b={sin:Math.sin(_),cos:Math.cos(_)},P={a:b.cos*((t=v.a)!==null&&t!==void 0?t:1),b:b.sin*((e=v.b)!==null&&e!==void 0?e:1),c:-b.sin*((n=v.c)!==null&&n!==void 0?n:1),d:b.cos*((o=v.d)!==null&&o!==void 0?o:1)};l.setTransform(P.a,P.b,P.c,P.d,g.x,g.y),l.beginPath(),h&&(l.globalCompositeOperation=f);const E=a.shadowColor;p.enable&&E&&(l.shadowBlur=p.blur,l.shadowColor=Q6(E),l.shadowOffsetX=p.offset.x,l.shadowOffsetY=p.offset.y),u.fill&&(l.fillStyle=u.fill);const O=(s=a.strokeWidth)!==null&&s!==void 0?s:0;l.lineWidth=O,u.stroke&&(l.strokeStyle=u.stroke),Lg(r,l,a,C,d,c),O>0&&l.stroke(),a.close&&l.closePath(),a.fill&&l.fill(),xg(r,l,a,C,d,c),l.globalCompositeOperation="source-over",l.setTransform(1,0,0,1,0,0)}function Lg(i,t,e,n,o,s){if(!e.shape)return;const r=i.drawers.get(e.shape);r&&r.draw(t,e,n,o,s,i.retina.pixelRatio)}function xg(i,t,e,n,o,s){if(!e.shape)return;const r=i.drawers.get(e.shape);r!=null&&r.afterEffect&&r.afterEffect(t,e,n,o,s,i.retina.pixelRatio)}function kg(i,t,e){t.draw&&t.draw(i,e)}function zg(i,t,e,n){t.drawParticle&&t.drawParticle(i,e,n)}function Eg(i,t,e){return{h:i.h,s:i.s,l:i.l+(t==="darken"?-1:1)*e}}const n6="generated",U3="touchend",Pg="pointerdown",Sg="pointerup",W3="pointermove",Og="touchstart",Rg="touchmove",G3="pointerleave",Ig="pointerout",Tg="touchcancel",Zg="resize",Ag="visibilitychange";function Dg(i,t,e){var n;const o=t[e];o!==void 0&&(i[e]=((n=i[e])!==null&&n!==void 0?n:1)*o)}class $g{constructor(t){this.container=t,this.size={height:0,width:0},this._context=null,this._generated=!1,this._preDrawUpdaters=[],this._postDrawUpdaters=[],this._resizePlugins=[],this._colorPlugins=[],this._mutationObserver=!Z6()&&typeof MutationObserver<"u"?new MutationObserver(e=>{for(const n of e)n.type==="attributes"&&n.attributeName==="style"&&this._repairStyle()}):void 0}get _fullScreen(){return this.container.actualOptions.fullScreen.enable}clear(){const t=this.container.actualOptions,e=t.particles.move.trail,n=this._trailFill;t.backgroundMask.enable?this.paint():e.enable&&e.length>0&&n?n.color?this._paintBase(Q6(n.color,n.opacity)):n.image&&this._paintImage(n.image,n.opacity):this.draw(o=>{M4(o,this.size)})}destroy(){var t,e;(t=this._mutationObserver)===null||t===void 0||t.disconnect(),this._generated?(e=this.element)===null||e===void 0||e.remove():this._resetOriginalStyle(),this.stop(),this._preDrawUpdaters=[],this._postDrawUpdaters=[],this._resizePlugins=[],this._colorPlugins=[]}draw(t){if(this._context)return t(this._context)}drawParticle(t,e){var n;if(t.spawning||t.destroyed)return;const o=t.getRadius();if(o<=0)return;const s=t.getFillColor(),r=(n=t.getStrokeColor())!==null&&n!==void 0?n:s;let[l,a]=this._getPluginParticleColors(t);l||(l=s),a||(a=r),!(!l&&!a)&&this.draw(c=>{var u,h,f,C;const d=this.container.actualOptions,p=t.options.zIndex,v=(1-t.zIndexFactor)**p.opacityRate,g=(f=(u=t.bubble.opacity)!==null&&u!==void 0?u:(h=t.opacity)===null||h===void 0?void 0:h.value)!==null&&f!==void 0?f:1,_=(C=t.strokeOpacity)!==null&&C!==void 0?C:g,b=g*v,P=_*v,E={},O={fill:l?V3(l,b):void 0};O.stroke=a?V3(a,P):O.fill,this._applyPreDrawUpdaters(c,t,o,b,O,E),Mg({container:this.container,context:c,particle:t,delta:e,colorStyles:O,backgroundMask:d.backgroundMask.enable,composite:d.backgroundMask.composite,radius:o*(1-t.zIndexFactor)**p.sizeRate,opacity:b,shadow:t.options.shadow,transform:E}),this._applyPostDrawUpdaters(t)})}drawParticlePlugin(t,e,n){this.draw(o=>{zg(o,t,e,n)})}drawPlugin(t,e){this.draw(n=>{kg(n,t,e)})}async init(){var t;this.resize(),this._initStyle(),this._initCover();try{await this._initTrail()}catch(e){console.error(e)}this.initBackground(),this.element&&((t=this._mutationObserver)===null||t===void 0||t.observe(this.element,{attributes:!0})),this.initUpdaters(),this.initPlugins(),this.paint()}initBackground(){const t=this.container.actualOptions,e=t.background,n=this.element,o=n==null?void 0:n.style;if(o){if(e.color){const s=p8(e.color);o.backgroundColor=s?Q6(s,e.opacity):""}else o.backgroundColor="";o.backgroundImage=e.image||"",o.backgroundPosition=e.position||"",o.backgroundRepeat=e.repeat||"",o.backgroundSize=e.size||""}}initPlugins(){this._resizePlugins=[];for(const[,t]of this.container.plugins)t.resize&&this._resizePlugins.push(t),(t.particleFillColor||t.particleStrokeColor)&&this._colorPlugins.push(t)}initUpdaters(){this._preDrawUpdaters=[],this._postDrawUpdaters=[];for(const t of this.container.particles.updaters)t.afterDraw&&this._postDrawUpdaters.push(t),(t.getColorStyles||t.getTransformValues||t.beforeDraw)&&this._preDrawUpdaters.push(t)}loadCanvas(t){var e,n;this._generated&&((e=this.element)===null||e===void 0||e.remove()),this._generated=t.dataset&&n6 in t.dataset?t.dataset[n6]==="true":this._generated,this.element=t,this.element.ariaHidden="true",this._originalStyle=e2({},this.element.style),this.size.height=t.offsetHeight,this.size.width=t.offsetWidth,this._context=this.element.getContext("2d"),(n=this._mutationObserver)===null||n===void 0||n.observe(this.element,{attributes:!0}),this.container.retina.init(),this.initBackground()}paint(){const t=this.container.actualOptions;this.draw(e=>{t.backgroundMask.enable&&t.backgroundMask.cover?(M4(e,this.size),this._paintBase(this._coverColorStyle)):this._paintBase()})}resize(){if(!this.element)return;const t=this.container,e=t.retina.pixelRatio,n=t.canvas.size,o={width:this.element.offsetWidth*e,height:this.element.offsetHeight*e};if(o.height===n.height&&o.width===n.width&&o.height===this.element.height&&o.width===this.element.width)return;const s=Object.assign({},n);this.element.width=n.width=this.element.offsetWidth*e,this.element.height=n.height=this.element.offsetHeight*e,this.container.started&&(this.resizeFactor={width:n.width/s.width,height:n.height/s.height})}stop(){this.draw(t=>{M4(t,this.size)})}async windowResize(){if(!this.element)return;this.resize();const t=this.container,e=t.updateActualOptions();t.particles.setDensity(),this._applyResizePlugins(),e&&await t.refresh()}_applyPostDrawUpdaters(t){var e;for(const n of this._postDrawUpdaters)(e=n.afterDraw)===null||e===void 0||e.call(n,t)}_applyPreDrawUpdaters(t,e,n,o,s,r){var l;for(const a of this._preDrawUpdaters){if(a.getColorStyles){const{fill:c,stroke:u}=a.getColorStyles(e,t,n,o);c&&(s.fill=c),u&&(s.stroke=u)}if(a.getTransformValues){const c=a.getTransformValues(e);for(const u in c)Dg(r,c,u)}(l=a.beforeDraw)===null||l===void 0||l.call(a,e)}}_applyResizePlugins(){for(const t of this._resizePlugins)t.resize&&t.resize()}_getPluginParticleColors(t){let e,n;for(const o of this._colorPlugins)if(!e&&o.particleFillColor&&(e=H3(o.particleFillColor(t))),!n&&o.particleStrokeColor&&(n=H3(o.particleStrokeColor(t))),e&&n)break;return[e,n]}_initCover(){const t=this.container.actualOptions,e=t.backgroundMask.cover,n=e.color,o=p8(n);if(o){const s={r:o.r,g:o.g,b:o.b,a:e.opacity};this._coverColorStyle=Q6(s,s.a)}}_initStyle(){const t=this.element,e=this.container.actualOptions;if(t){this._fullScreen?(this._originalStyle=e2({},t.style),this._setFullScreenStyle()):this._resetOriginalStyle();for(const n in e.style){if(!n||!e.style)continue;const o=e.style[n];o&&t.style.setProperty(n,o,"important")}}}async _initTrail(){const t=this.container.actualOptions,e=t.particles.move.trail,n=e.fill;if(e.enable)if(n.color){const o=p8(n.color);if(!o)return;const s=t.particles.move.trail;this._trailFill={color:Object.assign({},o),opacity:1/s.length}}else await new Promise((o,s)=>{if(!n.image)return;const r=document.createElement("img");r.addEventListener("load",()=>{this._trailFill={image:r,opacity:1/e.length},o()}),r.addEventListener("error",l=>{s(l.error)}),r.src=n.image})}_paintBase(t){this.draw(e=>{bg(e,this.size,t)})}_paintImage(t,e){this.draw(n=>{wg(n,this.size,t,e)})}_repairStyle(){var t,e;const n=this.element;n&&((t=this._mutationObserver)===null||t===void 0||t.disconnect(),this._initStyle(),this.initBackground(),(e=this._mutationObserver)===null||e===void 0||e.observe(n,{attributes:!0}))}_resetOriginalStyle(){const t=this.element,e=this._originalStyle;t&&e&&(t.style.position=e.position,t.style.zIndex=e.zIndex,t.style.top=e.top,t.style.left=e.left,t.style.width=e.width,t.style.height=e.height)}_setFullScreenStyle(){const t=this.element;if(!t)return;const e="important";t.style.setProperty("position","fixed",e),t.style.setProperty("z-index",this.container.actualOptions.fullScreen.zIndex.toString(10),e),t.style.setProperty("top","0",e),t.style.setProperty("left","0",e),t.style.setProperty("width","100%",e),t.style.setProperty("height","100%",e)}}function m2(i,t,e,n,o){if(n){let s={passive:!0};typeof o=="boolean"?s.capture=o:o!==void 0&&(s=o),i.addEventListener(t,e,s)}else{const s=o;i.removeEventListener(t,e,s)}}class Fg{constructor(t){this.container=t,this.canPush=!0,this.handlers={mouseMove:e=>this.mouseTouchMove(e),touchStart:e=>this.mouseTouchMove(e),touchMove:e=>this.mouseTouchMove(e),touchEnd:()=>this.mouseTouchFinish(),mouseLeave:()=>this.mouseTouchFinish(),touchCancel:()=>this.mouseTouchFinish(),touchEndClick:e=>this.mouseTouchClick(e),mouseUp:e=>this.mouseTouchClick(e),mouseDown:()=>this.mouseDown(),visibilityChange:()=>this.handleVisibilityChange(),themeChange:e=>this.handleThemeChange(e),oldThemeChange:e=>this.handleThemeChange(e),resize:()=>this.handleWindowResize()}}addListeners(){this.manageListeners(!0)}removeListeners(){this.manageListeners(!1)}doMouseTouchClick(t){const e=this.container,n=e.actualOptions;if(this.canPush){const o=e.interactivity.mouse,s=o.position;if(!s)return;o.clickPosition=Object.assign({},s),o.clickTime=new Date().getTime();const r=n.interactivity.events.onClick;X5(r.mode,l=>this.handleClickMode(l))}t.type==="touchend"&&setTimeout(()=>this.mouseTouchFinish(),500)}handleClickMode(t){this.container.handleClickMode(t)}handleThemeChange(t){const e=t,n=this.container,o=n.options,s=o.defaultThemes,r=e.matches?s.dark:s.light,l=o.themes.find(a=>a.name===r);l&&l.default.auto&&n.loadTheme(r)}handleVisibilityChange(){const t=this.container,e=t.actualOptions;this.mouseTouchFinish(),e.pauseOnBlur&&(document!=null&&document.hidden?(t.pageHidden=!0,t.pause()):(t.pageHidden=!1,t.getAnimationStatus()?t.play(!0):t.draw(!0)))}handleWindowResize(){this.resizeTimeout&&(clearTimeout(this.resizeTimeout),delete this.resizeTimeout),this.resizeTimeout=setTimeout(async()=>{var t;return(t=this.container.canvas)===null||t===void 0?void 0:t.windowResize()},this.container.actualOptions.interactivity.events.resize.delay*1e3)}manageListeners(t){var e;const n=this.handlers,o=this.container,s=o.actualOptions,r=s.interactivity.detectsOn;let l=G3;if(r==="window")o.interactivity.element=window,l=Ig;else if(r==="parent"&&o.canvas.element){const h=o.canvas.element;o.interactivity.element=(e=h.parentElement)!==null&&e!==void 0?e:h.parentNode}else o.interactivity.element=o.canvas.element;const a=Fi("(prefers-color-scheme: dark)");a&&(a.addEventListener!==void 0?m2(a,"change",n.themeChange,t):a.addListener!==void 0&&(t?a.addListener(n.oldThemeChange):a.removeListener(n.oldThemeChange)));const c=o.interactivity.element;if(!c)return;const u=c;(s.interactivity.events.onHover.enable||s.interactivity.events.onClick.enable)&&(m2(c,W3,n.mouseMove,t),m2(c,Og,n.touchStart,t),m2(c,Rg,n.touchMove,t),s.interactivity.events.onClick.enable?(m2(c,U3,n.touchEndClick,t),m2(c,Sg,n.mouseUp,t),m2(c,Pg,n.mouseDown,t)):m2(c,U3,n.touchEnd,t),m2(c,l,n.mouseLeave,t),m2(c,Tg,n.touchCancel,t)),o.canvas.element&&(o.canvas.element.style.pointerEvents=u===o.canvas.element?"initial":"none"),s.interactivity.events.resize&&(typeof ResizeObserver<"u"?this.resizeObserver&&!t?(o.canvas.element&&this.resizeObserver.unobserve(o.canvas.element),this.resizeObserver.disconnect(),delete this.resizeObserver):!this.resizeObserver&&t&&o.canvas.element&&(this.resizeObserver=new ResizeObserver(h=>{h.find(f=>f.target===o.canvas.element)&&this.handleWindowResize()}),this.resizeObserver.observe(o.canvas.element)):m2(window,Zg,n.resize,t)),document&&m2(document,Ag,n.visibilityChange,t,!1)}mouseDown(){const t=this.container.interactivity;if(t){const e=t.mouse;e.clicking=!0,e.downPosition=e.position}}mouseTouchClick(t){const e=this.container,n=e.actualOptions,o=e.interactivity.mouse;o.inside=!0;let s=!1;const r=o.position;if(!(!r||!n.interactivity.events.onClick.enable)){for(const[,l]of e.plugins)if(l.clickPositionValid&&(s=l.clickPositionValid(r),s))break;s||this.doMouseTouchClick(t),o.clicking=!1}}mouseTouchFinish(){const t=this.container.interactivity;if(!t)return;const e=t.mouse;delete e.position,delete e.clickPosition,delete e.downPosition,t.status=G3,e.inside=!1,e.clicking=!1}mouseTouchMove(t){var e,n,o,s,r,l,a;const c=this.container,u=c.actualOptions;if(!(!((e=c.interactivity)===null||e===void 0)&&e.element))return;c.interactivity.mouse.inside=!0;let h;const f=c.canvas.element;if(t.type.startsWith("pointer")){this.canPush=!0;const d=t;if(c.interactivity.element===window){if(f){const p=f.getBoundingClientRect();h={x:d.clientX-p.left,y:d.clientY-p.top}}}else if(u.interactivity.detectsOn==="parent"){const p=d.target,v=d.currentTarget,g=c.canvas.element;if(p&&v&&g){const _=p.getBoundingClientRect(),b=v.getBoundingClientRect(),P=g.getBoundingClientRect();h={x:d.offsetX+2*_.left-(b.left+P.left),y:d.offsetY+2*_.top-(b.top+P.top)}}else h={x:(n=d.offsetX)!==null&&n!==void 0?n:d.clientX,y:(o=d.offsetY)!==null&&o!==void 0?o:d.clientY}}else d.target===c.canvas.element&&(h={x:(s=d.offsetX)!==null&&s!==void 0?s:d.clientX,y:(r=d.offsetY)!==null&&r!==void 0?r:d.clientY})}else{this.canPush=t.type!=="touchmove";const d=t,p=d.touches[d.touches.length-1],v=f==null?void 0:f.getBoundingClientRect();h={x:p.clientX-((l=v==null?void 0:v.left)!==null&&l!==void 0?l:0),y:p.clientY-((a=v==null?void 0:v.top)!==null&&a!==void 0?a:0)}}const C=c.retina.pixelRatio;h&&(h.x*=C,h.y*=C),c.interactivity.mouse.position=h,c.interactivity.status=W3}}function jg(i,t=60,e=!1){return{value:i,factor:e?60/t:60*i/1e3}}class Ng{constructor(t){this.container=t}async nextFrame(t){var e;try{const n=this.container;if(!n.smooth&&n.lastFrameTime!==void 0&&t<n.lastFrameTime+1e3/n.fpsLimit){n.draw(!1);return}(e=n.lastFrameTime)!==null&&e!==void 0||(n.lastFrameTime=t);const o=jg(t-n.lastFrameTime,n.fpsLimit,n.smooth);if(n.lifeTime+=o.value,n.lastFrameTime=t,o.value>1e3){n.draw(!1);return}if(await n.particles.draw(o),n.duration>0&&n.lifeTime>n.duration){n.destroy();return}n.getAnimationStatus()&&n.draw(!1)}catch(n){console.error("tsParticles error in animation loop",n)}}}class W2{constructor(){this.value=""}static create(t,e){const n=new W2;return n.load(t),e!==void 0&&(typeof e=="string"||e instanceof Array?n.load({value:e}):n.load(e)),n}load(t){(t==null?void 0:t.value)!==void 0&&(this.value=t.value)}}class Bg{constructor(){this.color=new W2,this.color.value="",this.image="",this.position="",this.repeat="",this.size="",this.opacity=1}load(t){t&&(t.color!==void 0&&(this.color=W2.create(this.color,t.color)),t.image!==void 0&&(this.image=t.image),t.position!==void 0&&(this.position=t.position),t.repeat!==void 0&&(this.repeat=t.repeat),t.size!==void 0&&(this.size=t.size),t.opacity!==void 0&&(this.opacity=t.opacity))}}class Hg{constructor(){this.color=new W2,this.color.value="#fff",this.opacity=1}load(t){t&&(t.color!==void 0&&(this.color=W2.create(this.color,t.color)),t.opacity!==void 0&&(this.opacity=t.opacity))}}class Vg{constructor(){this.composite="destination-out",this.cover=new Hg,this.enable=!1}load(t){if(t){if(t.composite!==void 0&&(this.composite=t.composite),t.cover!==void 0){const e=t.cover,n=typeof t.cover=="string"?{color:t.cover}:t.cover;this.cover.load(e.color!==void 0?e:{color:n})}t.enable!==void 0&&(this.enable=t.enable)}}}class qg{constructor(){this.enable=!0,this.zIndex=0}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.zIndex!==void 0&&(this.zIndex=t.zIndex))}}class Ug{constructor(){this.enable=!1,this.mode=[]}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.mode!==void 0&&(this.mode=t.mode))}}class K3{constructor(){this.selectors=[],this.enable=!1,this.mode=[],this.type="circle"}get el(){return this.elementId}set el(t){this.elementId=t}get elementId(){return this.ids}set elementId(t){this.ids=t}get ids(){return X5(this.selectors,t=>t.replace("#",""))}set ids(t){this.selectors=X5(t,e=>`#${e}`)}load(t){var e,n;if(!t)return;const o=(n=(e=t.ids)!==null&&e!==void 0?e:t.elementId)!==null&&n!==void 0?n:t.el;o!==void 0&&(this.ids=o),t.selectors!==void 0&&(this.selectors=t.selectors),t.enable!==void 0&&(this.enable=t.enable),t.mode!==void 0&&(this.mode=t.mode),t.type!==void 0&&(this.type=t.type)}}class Wg{constructor(){this.enable=!1,this.force=2,this.smooth=10}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.force!==void 0&&(this.force=t.force),t.smooth!==void 0&&(this.smooth=t.smooth))}}class Gg{constructor(){this.enable=!1,this.mode=[],this.parallax=new Wg}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.mode!==void 0&&(this.mode=t.mode),this.parallax.load(t.parallax))}}class Kg{constructor(){this.delay=.5,this.enable=!0}load(t){t!==void 0&&(t.delay!==void 0&&(this.delay=t.delay),t.enable!==void 0&&(this.enable=t.enable))}}class Yg{constructor(){this.onClick=new Ug,this.onDiv=new K3,this.onHover=new Gg,this.resize=new Kg}get onclick(){return this.onClick}set onclick(t){this.onClick=t}get ondiv(){return this.onDiv}set ondiv(t){this.onDiv=t}get onhover(){return this.onHover}set onhover(t){this.onHover=t}load(t){var e,n,o;if(!t)return;this.onClick.load((e=t.onClick)!==null&&e!==void 0?e:t.onclick);const s=(n=t.onDiv)!==null&&n!==void 0?n:t.ondiv;s!==void 0&&(this.onDiv=X5(s,r=>{const l=new K3;return l.load(r),l})),this.onHover.load((o=t.onHover)!==null&&o!==void 0?o:t.onhover),typeof t.resize=="boolean"?this.resize.enable=t.resize:this.resize.load(t.resize)}}class Xg{constructor(t,e){this._engine=t,this._container=e}load(t){if(t&&this._container){const e=this._engine.plugins.interactors.get(this._container);if(e)for(const n of e)n.loadModeOptions&&n.loadModeOptions(this,t)}}}class Bi{constructor(t,e){this.detectsOn="window",this.events=new Yg,this.modes=new Xg(t,e)}get detect_on(){return this.detectsOn}set detect_on(t){this.detectsOn=t}load(t){var e;if(!t)return;const n=(e=t.detectsOn)!==null&&e!==void 0?e:t.detect_on;n!==void 0&&(this.detectsOn=n),this.events.load(t.events),this.modes.load(t.modes)}}class Jg{load(t){var e,n;t&&(t.position!==void 0&&(this.position={x:(e=t.position.x)!==null&&e!==void 0?e:50,y:(n=t.position.y)!==null&&n!==void 0?n:50}),t.options!==void 0&&(this.options=e2({},t.options)))}}class Qg{constructor(){this.maxWidth=1/0,this.options={},this.mode="canvas"}load(t){t&&(t.maxWidth!==void 0&&(this.maxWidth=t.maxWidth),t.mode!==void 0&&(t.mode==="screen"?this.mode="screen":this.mode="canvas"),t.options!==void 0&&(this.options=e2({},t.options)))}}class t_{constructor(){this.auto=!1,this.mode="any",this.value=!1}load(t){t&&(t.auto!==void 0&&(this.auto=t.auto),t.mode!==void 0&&(this.mode=t.mode),t.value!==void 0&&(this.value=t.value))}}class e_{constructor(){this.name="",this.default=new t_}load(t){t&&(t.name!==void 0&&(this.name=t.name),this.default.load(t.default),t.options!==void 0&&(this.options=e2({},t.options)))}}class L4{constructor(){this.count=0,this.enable=!1,this.offset=0,this.speed=1,this.decay=0,this.sync=!0}load(t){t&&(t.count!==void 0&&(this.count=L1(t.count)),t.enable!==void 0&&(this.enable=t.enable),t.offset!==void 0&&(this.offset=L1(t.offset)),t.speed!==void 0&&(this.speed=L1(t.speed)),t.decay!==void 0&&(this.decay=L1(t.decay)),t.sync!==void 0&&(this.sync=t.sync))}}class i_{constructor(){this.h=new L4,this.s=new L4,this.l=new L4}load(t){t&&(this.h.load(t.h),this.s.load(t.s),this.l.load(t.l))}}class b6 extends W2{constructor(){super(),this.animation=new i_}static create(t,e){const n=new b6;return n.load(t),e!==void 0&&(typeof e=="string"||e instanceof Array?n.load({value:e}):n.load(e)),n}load(t){if(super.load(t),!t)return;const e=t.animation;e!==void 0&&(e.enable!==void 0?this.animation.h.load(e):this.animation.load(t.animation))}}class n_{constructor(){this.speed=2}load(t){t&&t.speed!==void 0&&(this.speed=t.speed)}}class o_{constructor(){this.enable=!0,this.retries=0}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.retries!==void 0&&(this.retries=t.retries))}}class s_{constructor(){this.enable=!1,this.minimumValue=0}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.minimumValue!==void 0&&(this.minimumValue=t.minimumValue))}}class A6{constructor(){this.random=new s_,this.value=0}load(t){t&&(typeof t.random=="boolean"?this.random.enable=t.random:this.random.load(t.random),t.value!==void 0&&(this.value=L1(t.value,this.random.enable?this.random.minimumValue:void 0)))}}class Y3 extends A6{constructor(){super(),this.random.minimumValue=.1,this.value=1}}class Hi{constructor(){this.horizontal=new Y3,this.vertical=new Y3}load(t){t&&(this.horizontal.load(t.horizontal),this.vertical.load(t.vertical))}}class r_{constructor(){this.absorb=new n_,this.bounce=new Hi,this.enable=!1,this.mode="bounce",this.overlap=new o_}load(t){t&&(this.absorb.load(t.absorb),this.bounce.load(t.bounce),t.enable!==void 0&&(this.enable=t.enable),t.mode!==void 0&&(this.mode=t.mode),this.overlap.load(t.overlap))}}class l_{constructor(){this.offset=0,this.value=90}load(t){t&&(t.offset!==void 0&&(this.offset=L1(t.offset)),t.value!==void 0&&(this.value=L1(t.value)))}}class a_{constructor(){this.distance=200,this.enable=!1,this.rotate={x:3e3,y:3e3}}get rotateX(){return this.rotate.x}set rotateX(t){this.rotate.x=t}get rotateY(){return this.rotate.y}set rotateY(t){this.rotate.y=t}load(t){var e,n,o,s;if(!t)return;t.distance!==void 0&&(this.distance=L1(t.distance)),t.enable!==void 0&&(this.enable=t.enable);const r=(n=(e=t.rotate)===null||e===void 0?void 0:e.x)!==null&&n!==void 0?n:t.rotateX;r!==void 0&&(this.rotate.x=r);const l=(s=(o=t.rotate)===null||o===void 0?void 0:o.y)!==null&&s!==void 0?s:t.rotateY;l!==void 0&&(this.rotate.y=l)}}class c_{constructor(){this.x=50,this.y=50,this.mode="percent",this.radius=0}load(t){t&&(t.x!==void 0&&(this.x=t.x),t.y!==void 0&&(this.y=t.y),t.mode!==void 0&&(this.mode=t.mode),t.radius!==void 0&&(this.radius=t.radius))}}class u_{constructor(){this.acceleration=9.81,this.enable=!1,this.inverse=!1,this.maxSpeed=50}load(t){t&&(t.acceleration!==void 0&&(this.acceleration=L1(t.acceleration)),t.enable!==void 0&&(this.enable=t.enable),t.inverse!==void 0&&(this.inverse=t.inverse),t.maxSpeed!==void 0&&(this.maxSpeed=L1(t.maxSpeed)))}}class h_{constructor(){this.clamp=!0,this.delay=new A6,this.enable=!1,this.options={}}load(t){t&&(t.clamp!==void 0&&(this.clamp=t.clamp),this.delay.load(t.delay),t.enable!==void 0&&(this.enable=t.enable),this.generator=t.generator,t.options&&(this.options=e2(this.options,t.options)))}}class f_{load(t){t&&(t.color!==void 0&&(this.color=W2.create(this.color,t.color)),t.image!==void 0&&(this.image=t.image))}}class d_{constructor(){this.enable=!1,this.length=10,this.fill=new f_}get fillColor(){return this.fill.color}set fillColor(t){this.fill.load({color:t})}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),(t.fill!==void 0||t.fillColor!==void 0)&&this.fill.load(t.fill||{color:t.fillColor}),t.length!==void 0&&(this.length=t.length))}}class C_{constructor(){this.default="out"}load(t){var e,n,o,s;t&&(t.default!==void 0&&(this.default=t.default),this.bottom=(e=t.bottom)!==null&&e!==void 0?e:t.default,this.left=(n=t.left)!==null&&n!==void 0?n:t.default,this.right=(o=t.right)!==null&&o!==void 0?o:t.default,this.top=(s=t.top)!==null&&s!==void 0?s:t.default)}}class p_{constructor(){this.acceleration=0,this.enable=!1}load(t){t&&(t.acceleration!==void 0&&(this.acceleration=L1(t.acceleration)),t.enable!==void 0&&(this.enable=t.enable),this.position=t.position?e2({},t.position):void 0)}}class v_{constructor(){this.angle=new l_,this.attract=new a_,this.center=new c_,this.decay=0,this.distance={},this.direction="none",this.drift=0,this.enable=!1,this.gravity=new u_,this.path=new h_,this.outModes=new C_,this.random=!1,this.size=!1,this.speed=2,this.spin=new p_,this.straight=!1,this.trail=new d_,this.vibrate=!1,this.warp=!1}get bounce(){return this.collisions}set bounce(t){this.collisions=t}get collisions(){return!1}set collisions(t){}get noise(){return this.path}set noise(t){this.path=t}get outMode(){return this.outModes.default}set outMode(t){this.outModes.default=t}get out_mode(){return this.outMode}set out_mode(t){this.outMode=t}load(t){var e,n,o;if(!t)return;this.angle.load(typeof t.angle=="number"?{value:t.angle}:t.angle),this.attract.load(t.attract),this.center.load(t.center),t.decay!==void 0&&(this.decay=L1(t.decay)),t.direction!==void 0&&(this.direction=t.direction),t.distance!==void 0&&(this.distance=typeof t.distance=="number"?{horizontal:t.distance,vertical:t.distance}:Object.assign({},t.distance)),t.drift!==void 0&&(this.drift=L1(t.drift)),t.enable!==void 0&&(this.enable=t.enable),this.gravity.load(t.gravity);const s=(n=(e=t.outModes)!==null&&e!==void 0?e:t.outMode)!==null&&n!==void 0?n:t.out_mode;s!==void 0&&(typeof s=="object"?this.outModes.load(s):this.outModes.load({default:s})),this.path.load((o=t.path)!==null&&o!==void 0?o:t.noise),t.random!==void 0&&(this.random=t.random),t.size!==void 0&&(this.size=t.size),t.speed!==void 0&&(this.speed=L1(t.speed)),this.spin.load(t.spin),t.straight!==void 0&&(this.straight=t.straight),this.trail.load(t.trail),t.vibrate!==void 0&&(this.vibrate=t.vibrate),t.warp!==void 0&&(this.warp=t.warp)}}class Vi{constructor(){this.count=0,this.enable=!1,this.speed=1,this.decay=0,this.sync=!1}load(t){t&&(t.count!==void 0&&(this.count=L1(t.count)),t.enable!==void 0&&(this.enable=t.enable),t.speed!==void 0&&(this.speed=L1(t.speed)),t.decay!==void 0&&(this.decay=L1(t.decay)),t.sync!==void 0&&(this.sync=t.sync))}}class m_ extends Vi{constructor(){super(),this.destroy="none",this.enable=!1,this.speed=2,this.startValue="random",this.sync=!1}get opacity_min(){return this.minimumValue}set opacity_min(t){this.minimumValue=t}load(t){var e;t&&(super.load(t),t.destroy!==void 0&&(this.destroy=t.destroy),t.enable!==void 0&&(this.enable=t.enable),this.minimumValue=(e=t.minimumValue)!==null&&e!==void 0?e:t.opacity_min,t.speed!==void 0&&(this.speed=t.speed),t.startValue!==void 0&&(this.startValue=t.startValue),t.sync!==void 0&&(this.sync=t.sync))}}class y_ extends A6{constructor(){super(),this.animation=new m_,this.random.minimumValue=.1,this.value=1}get anim(){return this.animation}set anim(t){this.animation=t}load(t){var e;if(!t)return;super.load(t);const n=(e=t.animation)!==null&&e!==void 0?e:t.anim;n!==void 0&&(this.animation.load(n),this.value=L1(this.value,this.animation.enable?this.animation.minimumValue:void 0))}}class g_{constructor(){this.enable=!1,this.width=1920,this.height=1080}get area(){return this.width}set area(t){this.width=t}get factor(){return this.height}set factor(t){this.height=t}get value_area(){return this.area}set value_area(t){this.area=t}load(t){var e,n,o;if(!t)return;t.enable!==void 0&&(this.enable=t.enable);const s=(n=(e=t.width)!==null&&e!==void 0?e:t.area)!==null&&n!==void 0?n:t.value_area;s!==void 0&&(this.width=s);const r=(o=t.height)!==null&&o!==void 0?o:t.factor;r!==void 0&&(this.height=r)}}class __{constructor(){this.density=new g_,this.limit=0,this.value=0}get max(){return this.limit}set max(t){this.limit=t}load(t){var e;if(!t)return;this.density.load(t.density);const n=(e=t.limit)!==null&&e!==void 0?e:t.max;n!==void 0&&(this.limit=n),t.value!==void 0&&(this.value=t.value)}}class b_{constructor(){this.blur=0,this.color=new W2,this.enable=!1,this.offset={x:0,y:0},this.color.value="#000"}load(t){t&&(t.blur!==void 0&&(this.blur=t.blur),this.color=W2.create(this.color,t.color),t.enable!==void 0&&(this.enable=t.enable),t.offset!==void 0&&(t.offset.x!==void 0&&(this.offset.x=t.offset.x),t.offset.y!==void 0&&(this.offset.y=t.offset.y)))}}const x4="character",k4="char",z4="image",E4="images",P4="polygon",S4="star";class w_{constructor(){this.options={},this.type="circle"}get character(){var t;return(t=this.options[x4])!==null&&t!==void 0?t:this.options[k4]}set character(t){this.options[k4]=this.options[x4]=t}get custom(){return this.options}set custom(t){this.options=t}get image(){var t;return(t=this.options[z4])!==null&&t!==void 0?t:this.options[E4]}set image(t){this.options[E4]=this.options[z4]=t}get images(){return this.image}set images(t){this.image=t}get polygon(){var t;return(t=this.options[P4])!==null&&t!==void 0?t:this.options[S4]}set polygon(t){this.options[S4]=this.options[P4]=t}get stroke(){return[]}set stroke(t){}load(t){var e,n,o;if(!t)return;const s=(e=t.options)!==null&&e!==void 0?e:t.custom;if(s!==void 0)for(const r in s){const l=s[r];l&&(this.options[r]=e2((n=this.options[r])!==null&&n!==void 0?n:{},l))}this.loadShape(t.character,x4,k4,!0),this.loadShape(t.polygon,P4,S4,!1),this.loadShape((o=t.image)!==null&&o!==void 0?o:t.images,z4,E4,!0),t.type!==void 0&&(this.type=t.type)}loadShape(t,e,n,o){var s,r;if(!t)return;const l=t instanceof Array,a=l?[]:{},c=l!==this.options[e]instanceof Array,u=l!==this.options[n]instanceof Array;c&&(this.options[e]=a),u&&o&&(this.options[n]=a),this.options[e]=e2((s=this.options[e])!==null&&s!==void 0?s:a,t),(!this.options[n]||o)&&(this.options[n]=e2((r=this.options[n])!==null&&r!==void 0?r:a,t))}}class M_ extends Vi{constructor(){super(),this.destroy="none",this.enable=!1,this.speed=5,this.startValue="random",this.sync=!1}get size_min(){return this.minimumValue}set size_min(t){this.minimumValue=t}load(t){var e;super.load(t),t&&(t.destroy!==void 0&&(this.destroy=t.destroy),t.enable!==void 0&&(this.enable=t.enable),this.minimumValue=(e=t.minimumValue)!==null&&e!==void 0?e:t.size_min,t.speed!==void 0&&(this.speed=t.speed),t.startValue!==void 0&&(this.startValue=t.startValue),t.sync!==void 0&&(this.sync=t.sync))}}class L_ extends A6{constructor(){super(),this.animation=new M_,this.random.minimumValue=1,this.value=3}get anim(){return this.animation}set anim(t){this.animation=t}load(t){var e;if(super.load(t),!t)return;const n=(e=t.animation)!==null&&e!==void 0?e:t.anim;n!==void 0&&(this.animation.load(n),this.value=L1(this.value,this.animation.enable?this.animation.minimumValue:void 0))}}class X3{constructor(){this.width=0}load(t){t&&(t.color!==void 0&&(this.color=b6.create(this.color,t.color)),t.width!==void 0&&(this.width=L1(t.width)),t.opacity!==void 0&&(this.opacity=L1(t.opacity)))}}class x_ extends A6{constructor(){super(),this.opacityRate=1,this.sizeRate=1,this.velocityRate=1}load(t){super.load(t),t&&(t.opacityRate!==void 0&&(this.opacityRate=t.opacityRate),t.sizeRate!==void 0&&(this.sizeRate=t.sizeRate),t.velocityRate!==void 0&&(this.velocityRate=t.velocityRate))}}class k_{constructor(t,e){this._engine=t,this._container=e,this.bounce=new Hi,this.collisions=new r_,this.color=new b6,this.color.value="#fff",this.groups={},this.move=new v_,this.number=new __,this.opacity=new y_,this.reduceDuplicates=!1,this.shadow=new b_,this.shape=new w_,this.size=new L_,this.stroke=new X3,this.zIndex=new x_}load(t){var e,n,o,s,r,l;if(!t)return;if(this.bounce.load(t.bounce),this.color.load(b6.create(this.color,t.color)),t.groups!==void 0)for(const u in t.groups){const h=t.groups[u];h!==void 0&&(this.groups[u]=e2((e=this.groups[u])!==null&&e!==void 0?e:{},h))}this.move.load(t.move),this.number.load(t.number),this.opacity.load(t.opacity),t.reduceDuplicates!==void 0&&(this.reduceDuplicates=t.reduceDuplicates),this.shape.load(t.shape),this.size.load(t.size),this.shadow.load(t.shadow),this.zIndex.load(t.zIndex);const a=(o=(n=t.move)===null||n===void 0?void 0:n.collisions)!==null&&o!==void 0?o:(s=t.move)===null||s===void 0?void 0:s.bounce;a!==void 0&&(this.collisions.enable=a),this.collisions.load(t.collisions),t.interactivity!==void 0&&(this.interactivity=e2({},t.interactivity));const c=(r=t.stroke)!==null&&r!==void 0?r:(l=t.shape)===null||l===void 0?void 0:l.stroke;if(c&&(this.stroke=X5(c,u=>{const h=new X3;return h.load(u),h})),this._container){const u=this._engine.plugins.updaters.get(this._container);if(u)for(const f of u)f.loadOptions&&f.loadOptions(this,t);const h=this._engine.plugins.interactors.get(this._container);if(h)for(const f of h)f.loadParticlesOptions&&f.loadParticlesOptions(this,t)}}}function qi(i,...t){for(const e of t)i.load(e)}function Ui(i,t,...e){const n=new k_(i,t);return qi(n,...e),n}class z_{constructor(t,e){this._engine=t,this._container=e,this.autoPlay=!0,this.background=new Bg,this.backgroundMask=new Vg,this.defaultThemes={},this.delay=0,this.fullScreen=new qg,this.detectRetina=!0,this.duration=0,this.fpsLimit=120,this.interactivity=new Bi(t,e),this.manualParticles=[],this.particles=Ui(this._engine,this._container),this.pauseOnBlur=!0,this.pauseOnOutsideViewport=!0,this.responsive=[],this.smooth=!1,this.style={},this.themes=[],this.zLayers=100}get backgroundMode(){return this.fullScreen}set backgroundMode(t){this.fullScreen.load(t)}get fps_limit(){return this.fpsLimit}set fps_limit(t){this.fpsLimit=t}get retina_detect(){return this.detectRetina}set retina_detect(t){this.detectRetina=t}load(t){var e,n,o,s,r;if(!t)return;t.preset!==void 0&&X5(t.preset,h=>this._importPreset(h)),t.autoPlay!==void 0&&(this.autoPlay=t.autoPlay),t.delay!==void 0&&(this.delay=L1(t.delay));const l=(e=t.detectRetina)!==null&&e!==void 0?e:t.retina_detect;l!==void 0&&(this.detectRetina=l),t.duration!==void 0&&(this.duration=L1(t.duration));const a=(n=t.fpsLimit)!==null&&n!==void 0?n:t.fps_limit;a!==void 0&&(this.fpsLimit=a),t.pauseOnBlur!==void 0&&(this.pauseOnBlur=t.pauseOnBlur),t.pauseOnOutsideViewport!==void 0&&(this.pauseOnOutsideViewport=t.pauseOnOutsideViewport),t.zLayers!==void 0&&(this.zLayers=t.zLayers),this.background.load(t.background);const c=(o=t.fullScreen)!==null&&o!==void 0?o:t.backgroundMode;typeof c=="boolean"?this.fullScreen.enable=c:this.fullScreen.load(c),this.backgroundMask.load(t.backgroundMask),this.interactivity.load(t.interactivity),t.manualParticles!==void 0&&(this.manualParticles=t.manualParticles.map(h=>{const f=new Jg;return f.load(h),f})),this.particles.load(t.particles),this.style=e2(this.style,t.style),this._engine.plugins.loadOptions(this,t),t.smooth!==void 0&&(this.smooth=t.smooth);const u=this._engine.plugins.interactors.get(this._container);if(u)for(const h of u)h.loadOptions&&h.loadOptions(this,t);if(t.responsive!==void 0)for(const h of t.responsive){const f=new Qg;f.load(h),this.responsive.push(f)}if(this.responsive.sort((h,f)=>h.maxWidth-f.maxWidth),t.themes!==void 0)for(const h of t.themes){const f=this.themes.find(C=>C.name===h.name);if(f)f.load(h);else{const C=new e_;C.load(h),this.themes.push(C)}}this.defaultThemes.dark=(s=this._findDefaultTheme("dark"))===null||s===void 0?void 0:s.name,this.defaultThemes.light=(r=this._findDefaultTheme("light"))===null||r===void 0?void 0:r.name}setResponsive(t,e,n){this.load(n);const o=this.responsive.find(s=>s.mode==="screen"&&screen?s.maxWidth>screen.availWidth:s.maxWidth*e>t);return this.load(o==null?void 0:o.options),o==null?void 0:o.maxWidth}setTheme(t){if(t){const e=this.themes.find(n=>n.name===t);e&&this.load(e.options)}else{const e=Fi("(prefers-color-scheme: dark)"),n=e&&e.matches,o=this._findDefaultTheme(n?"dark":"light");o&&this.load(o.options)}}_findDefaultTheme(t){var e;return(e=this.themes.find(n=>n.default.value&&n.default.mode===t))!==null&&e!==void 0?e:this.themes.find(n=>n.default.value&&n.default.mode==="any")}_importPreset(t){this.load(this._engine.plugins.getPreset(t))}}class E_{constructor(t,e){this.container=e,this._engine=t,this._interactors=this._engine.plugins.getInteractors(this.container,!0),this._externalInteractors=[],this._particleInteractors=[]}async externalInteract(t){for(const e of this._externalInteractors)e.isEnabled()&&await e.interact(t)}handleClickMode(t){for(const e of this._externalInteractors)e.handleClickMode&&e.handleClickMode(t)}init(){this._externalInteractors=[],this._particleInteractors=[];for(const t of this._interactors){switch(t.type){case"external":this._externalInteractors.push(t);break;case"particles":this._particleInteractors.push(t);break}t.init()}}async particlesInteract(t,e){for(const n of this._externalInteractors)n.clear(t,e);for(const n of this._particleInteractors)n.isEnabled(t)&&await n.interact(t,e)}async reset(t){for(const e of this._externalInteractors)e.isEnabled()&&await e.reset(t);for(const e of this._particleInteractors)e.isEnabled(t)&&await e.reset(t)}}const J3=i=>{dg(i.outMode,i.checkModes)&&(i.coord>i.maxCoord-i.radius*2?i.setCb(-i.radius):i.coord<i.radius*2&&i.setCb(i.radius))};class P_{constructor(t,e,n,o,s,r){this.container=n,this._engine=t,this.init(e,o,s,r)}destroy(t){var e;if(!(this.unbreakable||this.destroyed)){this.destroyed=!0,this.bubble.inRange=!1,this.slow.inRange=!1;for(const[,n]of this.container.plugins)n.particleDestroyed&&n.particleDestroyed(this,t);for(const n of this.container.particles.updaters)n.particleDestroyed&&n.particleDestroyed(this,t);(e=this.pathGenerator)===null||e===void 0||e.reset(this)}}draw(t){const e=this.container;for(const[,n]of e.plugins)e.canvas.drawParticlePlugin(n,this,t);e.canvas.drawParticle(this,t)}getFillColor(){var t;return this._getRollColor((t=this.bubble.color)!==null&&t!==void 0?t:q3(this.color))}getMass(){return this.getRadius()**2*Math.PI/2}getPosition(){return{x:this.position.x+this.offset.x,y:this.position.y+this.offset.y,z:this.position.z}}getRadius(){var t;return(t=this.bubble.radius)!==null&&t!==void 0?t:this.size.value}getStrokeColor(){var t;return this._getRollColor((t=this.bubble.color)!==null&&t!==void 0?t:q3(this.strokeColor))}init(t,e,n,o){var s,r,l,a,c,u,h,f,C;const d=this.container,p=this._engine;this.id=t,this.group=o,this.fill=!0,this.pathRotation=!1,this.close=!0,this.lastPathTime=0,this.destroyed=!1,this.unbreakable=!1,this.rotation=0,this.misplaced=!1,this.retina={maxDistance:{}},this.outType="normal",this.ignoresResizeRatio=!0;const v=d.retina.pixelRatio,g=d.actualOptions,_=Ui(this._engine,d,g.particles),b=_.shape.type,{reduceDuplicates:P}=_;this.shape=i6(b,this.id,P);const E=_.shape;if(n&&n.shape&&n.shape.type){const q=n.shape.type,W=i6(q,this.id,P);W&&(this.shape=W,E.load(n.shape))}this.shapeData=this._loadShapeData(E,P),_.load(n),_.load((s=this.shapeData)===null||s===void 0?void 0:s.particles),this.interactivity=new Bi(p,d),this.interactivity.load(d.actualOptions.interactivity),this.interactivity.load(_.interactivity),this.fill=(l=(r=this.shapeData)===null||r===void 0?void 0:r.fill)!==null&&l!==void 0?l:this.fill,this.close=(c=(a=this.shapeData)===null||a===void 0?void 0:a.close)!==null&&c!==void 0?c:this.close,this.options=_;const O=this.options.move.path;this.pathDelay=og(O.delay)*1e3,O.generator&&(this.pathGenerator=this._engine.plugins.getPathGenerator(O.generator),this.pathGenerator&&d.addPath(O.generator,this.pathGenerator)&&this.pathGenerator.init(d));const M=Z1(this.options.zIndex.value);d.retina.initParticle(this);const z=this.options.size,X=z.value,V=z.animation;if(this.size={enable:z.animation.enable,value:Z1(z.value)*d.retina.pixelRatio,max:n9(X)*v,min:i9(X)*v,loops:0,maxLoops:Z1(z.animation.count)},V.enable)switch(this.size.status="increasing",this.size.decay=1-Z1(V.decay),V.startValue){case"min":this.size.value=this.size.min,this.size.status="increasing";break;case"random":this.size.value=C8(this.size),this.size.status=E5()>=.5?"increasing":"decreasing";break;case"max":default:this.size.value=this.size.max,this.size.status="decreasing";break}this.size.initialValue=this.size.value,this.bubble={inRange:!1},this.slow={inRange:!1,factor:1},this.position=this._calcPosition(d,e,Di(M,0,d.zLayers)),this.initialPosition=this.position.copy();const Z=d.canvas.size,F=Object.assign({},this.options.move.center),U=F.mode==="percent";switch(this.moveCenter={x:F.x*(U?Z.width/100:1),y:F.y*(U?Z.height/100:1),radius:(u=this.options.move.center.radius)!==null&&u!==void 0?u:0,mode:(h=this.options.move.center.mode)!==null&&h!==void 0?h:"percent"},this.direction=rg(this.options.move.direction,this.position,this.moveCenter),this.options.move.direction){case"inside":this.outType="inside";break;case"outside":this.outType="outside";break}this.initialVelocity=this._calculateVelocity(),this.velocity=this.initialVelocity.copy(),this.moveDecay=1-Z1(this.options.move.decay),this.offset=d8.origin;const T=d.particles;T.needsSort=T.needsSort||T.lastZIndex<this.position.z,T.lastZIndex=this.position.z,this.zIndexFactor=this.position.z/d.zLayers,this.sides=24;let k=d.drawers.get(this.shape);k||(k=this._engine.plugins.getShapeDrawer(this.shape),k&&d.drawers.set(this.shape,k)),k!=null&&k.loadShape&&(k==null||k.loadShape(this));const D=k==null?void 0:k.getSidesCount;D&&(this.sides=D(this)),this.spawning=!1,this.shadowColor=p8(this.options.shadow.color);for(const q of d.particles.updaters)q.init(this);for(const q of d.particles.movers)(f=q.init)===null||f===void 0||f.call(q,this);k!=null&&k.particleInit&&k.particleInit(d,this);for(const[,q]of d.plugins)(C=q.particleCreated)===null||C===void 0||C.call(q,this)}isInsideCanvas(){const t=this.getRadius(),e=this.container.canvas.size;return this.position.x>=-t&&this.position.y>=-t&&this.position.y<=e.height+t&&this.position.x<=e.width+t}isVisible(){return!this.destroyed&&!this.spawning&&this.isInsideCanvas()}reset(){var t;for(const e of this.container.particles.updaters)(t=e.reset)===null||t===void 0||t.call(e,this)}_calcPosition(t,e,n,o=0){var s,r,l,a;for(const[,v]of t.plugins){const g=v.particlePosition!==void 0?v.particlePosition(e,this):void 0;if(g!==void 0)return C2.create(g.x,g.y,n)}const c=t.canvas.size,u=cg({size:c,position:e}),h=C2.create(u.x,u.y,n),f=this.getRadius(),C=this.options.move.outModes,d=v=>{J3({outMode:v,checkModes:["bounce","bounce-horizontal"],coord:h.x,maxCoord:t.canvas.size.width,setCb:g=>h.x+=g,radius:f})},p=v=>{J3({outMode:v,checkModes:["bounce","bounce-vertical"],coord:h.y,maxCoord:t.canvas.size.height,setCb:g=>h.y+=g,radius:f})};return d((s=C.left)!==null&&s!==void 0?s:C.default),d((r=C.right)!==null&&r!==void 0?r:C.default),p((l=C.top)!==null&&l!==void 0?l:C.default),p((a=C.bottom)!==null&&a!==void 0?a:C.default),this._checkOverlap(h,o)?this._calcPosition(t,void 0,n,o+1):h}_calculateVelocity(){const t=lg(this.direction),e=t.copy(),n=this.options.move;if(n.direction==="inside"||n.direction==="outside")return e;const o=Math.PI/180*Z1(n.angle.value),s=Math.PI/180*Z1(n.angle.offset),r={left:s-o/2,right:s+o/2};return n.straight||(e.angle+=C8(L1(r.left,r.right))),n.random&&typeof n.speed=="number"&&(e.length*=E5()),e}_checkOverlap(t,e=0){const n=this.options.collisions,o=this.getRadius();if(!n.enable)return!1;const s=n.overlap;if(s.enable)return!1;const r=s.retries;if(r>=0&&e>r)throw new Error("Particle is overlapping and can't be placed");let l=!1;for(const a of this.container.particles.array)if(o9(t,a.position)<o+a.getRadius()){l=!0;break}return l}_getRollColor(t){var e;if(!t||!this.roll||!this.backColor&&!this.roll.alter)return t;const n=this.roll.horizontal&&this.roll.vertical?2:1,o=this.roll.horizontal?Math.PI/2:0;return Math.floor((((e=this.roll.angle)!==null&&e!==void 0?e:0)+o)/(Math.PI/n))%2?this.backColor?this.backColor:this.roll.alter?Eg(t,this.roll.alter.type,this.roll.alter.value):t:t}_loadShapeData(t,e){const n=t.options[this.shape];if(n)return e2({},i6(n,this.id,e))}}class S_{constructor(t,e){this.position=t,this.particle=e}}class Wi{constructor(t,e){this.position={x:t,y:e}}}class Gi extends Wi{constructor(t,e,n){super(t,e),this.radius=n}contains(t){return o9(t,this.position)<=this.radius}intersects(t){const e=t,n=t,o=this.position,s=t.position,r={x:Math.abs(s.x-o.x),y:Math.abs(s.y-o.y)},l=this.radius;if(n.radius!==void 0){const a=l+n.radius,c=Math.sqrt(r.x**2+r.y**2);return a>c}else if(e.size!==void 0){const a=e.size.width,c=e.size.height;return Math.pow(r.x-a,2)+Math.pow(r.y-c,2)<=l**2||r.x<=l+a&&r.y<=l+c||r.x<=a||r.y<=c}return!1}}class J2 extends Wi{constructor(t,e,n,o){super(t,e),this.size={height:o,width:n}}contains(t){const e=this.size.width,n=this.size.height,o=this.position;return t.x>=o.x&&t.x<=o.x+e&&t.y>=o.y&&t.y<=o.y+n}intersects(t){t instanceof Gi&&t.intersects(this);const e=this.size.width,n=this.size.height,o=this.position,s=t.position,r=t instanceof J2?t.size:{width:0,height:0},l=r.width,a=r.height;return s.x<o.x+e&&s.x+l>o.x&&s.y<o.y+n&&s.y+a>o.y}}class B5{constructor(t,e){this.rectangle=t,this.capacity=e,this._points=[],this._divided=!1}insert(t){var e,n,o,s,r;return this.rectangle.contains(t.position)?this._points.length<this.capacity?(this._points.push(t),!0):(this._divided||this.subdivide(),(r=((e=this._NE)===null||e===void 0?void 0:e.insert(t))||((n=this._NW)===null||n===void 0?void 0:n.insert(t))||((o=this._SE)===null||o===void 0?void 0:o.insert(t))||((s=this._SW)===null||s===void 0?void 0:s.insert(t)))!==null&&r!==void 0?r:!1):!1}query(t,e,n){var o,s,r,l;const a=n??[];if(!t.intersects(this.rectangle))return[];for(const c of this._points)!t.contains(c.position)&&o9(t.position,c.position)>c.particle.getRadius()&&(!e||e(c.particle))||a.push(c.particle);return this._divided&&((o=this._NE)===null||o===void 0||o.query(t,e,a),(s=this._NW)===null||s===void 0||s.query(t,e,a),(r=this._SE)===null||r===void 0||r.query(t,e,a),(l=this._SW)===null||l===void 0||l.query(t,e,a)),a}queryCircle(t,e,n){return this.query(new Gi(t.x,t.y,e),n)}queryRectangle(t,e,n){return this.query(new J2(t.x,t.y,e.width,e.height),n)}subdivide(){const t=this.rectangle.position.x,e=this.rectangle.position.y,n=this.rectangle.size.width,o=this.rectangle.size.height,s=this.capacity;this._NE=new B5(new J2(t,e,n/2,o/2),s),this._NW=new B5(new J2(t+n/2,e,n/2,o/2),s),this._SE=new B5(new J2(t,e+o/2,n/2,o/2),s),this._SW=new B5(new J2(t+n/2,e+o/2,n/2,o/2),s),this._divided=!0}}class O_{constructor(t,e){this.container=e,this._engine=t,this.nextId=0,this.array=[],this.zArray=[],this.pool=[],this.limit=0,this.needsSort=!1,this.lastZIndex=0,this.interactionManager=new E_(this._engine,e);const n=this.container.canvas.size;this.quadTree=new B5(new J2(-n.width/4,-n.height/4,n.width*3/2,n.height*3/2),4),this.movers=this._engine.plugins.getMovers(e,!0),this.updaters=this._engine.plugins.getUpdaters(e,!0)}get count(){return this.array.length}addManualParticles(){const t=this.container,e=t.actualOptions;for(const n of e.manualParticles)this.addParticle(ag({size:t.canvas.size,position:n.position}),n.options)}addParticle(t,e,n,o){const s=this.container,r=s.actualOptions,l=r.particles.number.limit;if(l>0){const a=this.count+1-l;a>0&&this.removeQuantity(a)}return this._pushParticle(t,e,n,o)}clear(){this.array=[],this.zArray=[]}destroy(){this.array=[],this.zArray=[],this.movers=[],this.updaters=[]}async draw(t){const e=this.container,n=this.container.canvas.size;this.quadTree=new B5(new J2(-n.width/4,-n.height/4,n.width*3/2,n.height*3/2),4),e.canvas.clear(),await this.update(t),this.needsSort&&(this.zArray.sort((o,s)=>s.position.z-o.position.z||o.id-s.id),this.lastZIndex=this.zArray[this.zArray.length-1].position.z,this.needsSort=!1);for(const[,o]of e.plugins)e.canvas.drawPlugin(o,t);for(const o of this.zArray)o.draw(t)}handleClickMode(t){this.interactionManager.handleClickMode(t)}init(){var t;const e=this.container,n=e.actualOptions;this.lastZIndex=0,this.needsSort=!1;let o=!1;this.updaters=this._engine.plugins.getUpdaters(e,!0),this.interactionManager.init();for(const[,s]of e.plugins)if(s.particlesInitialization!==void 0&&(o=s.particlesInitialization()),o)break;this.interactionManager.init();for(const[,s]of e.pathGenerators)s.init(e);if(this.addManualParticles(),!o){for(const s in n.particles.groups){const r=n.particles.groups[s];for(let l=this.count,a=0;a<((t=r.number)===null||t===void 0?void 0:t.value)&&l<n.particles.number.value;l++,a++)this.addParticle(void 0,r,s)}for(let s=this.count;s<n.particles.number.value;s++)this.addParticle()}}push(t,e,n,o){this.pushing=!0;for(let s=0;s<t;s++)this.addParticle(e==null?void 0:e.position,n,o);this.pushing=!1}async redraw(){this.clear(),this.init(),await this.draw({value:0,factor:0})}remove(t,e,n){this.removeAt(this.array.indexOf(t),void 0,e,n)}removeAt(t,e=1,n,o){if(t<0||t>this.count)return;let s=0;for(let r=t;s<e&&r<this.count;r++){const l=this.array[r];if(!l||l.group!==n)continue;l.destroy(o),this.array.splice(r--,1);const a=this.zArray.indexOf(l);this.zArray.splice(a,1),this.pool.push(l),s++,this._engine.dispatchEvent("particleRemoved",{container:this.container,data:{particle:l}})}}removeQuantity(t,e){this.removeAt(0,t,e)}setDensity(){const t=this.container.actualOptions;for(const e in t.particles.groups)this._applyDensity(t.particles.groups[e],0,e);this._applyDensity(t.particles,t.manualParticles.length)}async update(t){var e,n;const o=this.container,s=[];for(const[,r]of o.pathGenerators)r.update();for(const[,r]of o.plugins)(e=r.update)===null||e===void 0||e.call(r,t);for(const r of this.array){const l=o.canvas.resizeFactor;l&&!r.ignoresResizeRatio&&(r.position.x*=l.width,r.position.y*=l.height,r.initialPosition.x*=l.width,r.initialPosition.y*=l.height),r.ignoresResizeRatio=!1,await this.interactionManager.reset(r);for(const[,a]of this.container.plugins){if(r.destroyed)break;(n=a.particleUpdate)===null||n===void 0||n.call(a,r,t)}for(const a of this.movers)a.isEnabled(r)&&a.move(r,t);if(r.destroyed){s.push(r);continue}this.quadTree.insert(new S_(r.getPosition(),r))}for(const r of s)this.remove(r);await this.interactionManager.externalInteract(t);for(const r of this.array){for(const l of this.updaters)l.update(r,t);!r.destroyed&&!r.spawning&&await this.interactionManager.particlesInteract(r,t)}delete o.canvas.resizeFactor}_applyDensity(t,e,n){var o;if(!(!((o=t.number.density)===null||o===void 0)&&o.enable))return;const s=t.number,r=this._initDensityFactor(s.density),l=s.value,a=s.limit>0?s.limit:l,c=Math.min(l,a)*r+e,u=Math.min(this.count,this.array.filter(h=>h.group===n).length);this.limit=s.limit*r,u<c?this.push(Math.abs(c-u),void 0,t,n):u>c&&this.removeQuantity(u-c,n)}_initDensityFactor(t){const e=this.container;if(!e.canvas.element||!t.enable)return 1;const n=e.canvas.element,o=e.retina.pixelRatio;return n.width*n.height/(t.factor*o**2*t.area)}_pushParticle(t,e,n,o){try{let s=this.pool.pop();s?s.init(this.nextId,t,e,n):s=new P_(this._engine,this.nextId,this.container,t,e,n);let r=!0;return o&&(r=o(s)),r?(this.array.push(s),this.zArray.push(s),this.nextId++,this._engine.dispatchEvent("particleAdded",{container:this.container,data:{particle:s}}),s):void 0}catch(s){console.warn(`error adding particle: ${s}`);return}}}class R_{constructor(t){this.container=t}init(){const t=this.container,e=t.actualOptions;this.pixelRatio=!e.detectRetina||Z6()?1:window.devicePixelRatio,this.reduceFactor=1;const n=this.pixelRatio;if(t.canvas.element){const s=t.canvas.element;t.canvas.size.width=s.offsetWidth*n,t.canvas.size.height=s.offsetHeight*n}const o=e.particles;this.attractDistance=Z1(o.move.attract.distance)*n,this.sizeAnimationSpeed=Z1(o.size.animation.speed)*n,this.maxSpeed=Z1(o.move.gravity.maxSpeed)*n}initParticle(t){const e=t.options,n=this.pixelRatio,o=e.move.distance,s=t.retina;s.attractDistance=Z1(e.move.attract.distance)*n,s.moveDrift=Z1(e.move.drift)*n,s.moveSpeed=Z1(e.move.speed)*n,s.sizeAnimationSpeed=Z1(e.size.animation.speed)*n;const r=s.maxDistance;r.horizontal=o.horizontal!==void 0?o.horizontal*n:void 0,r.vertical=o.vertical!==void 0?o.vertical*n:void 0,s.maxSpeed=Z1(e.move.gravity.maxSpeed)*n}}function $1(i){return i&&!i.destroyed}function B8(i,t,...e){const n=new z_(i,t);return qi(n,...e),n}const I_="default",Q3={generate:i=>{const t=i.velocity.copy();return t.angle+=t.length*Math.PI/180,t},init:()=>{},update:()=>{},reset:()=>{}};class T_{constructor(t,e,n){this.id=e,this._engine=t,this.fpsLimit=120,this.smooth=!1,this._delay=0,this.duration=0,this.lifeTime=0,this._firstStart=!0,this.started=!1,this.destroyed=!1,this._paused=!0,this.lastFrameTime=0,this.zLayers=100,this.pageHidden=!1,this._sourceOptions=n,this._initialSourceOptions=n,this.retina=new R_(this),this.canvas=new $g(this),this.particles=new O_(this._engine,this),this.frameManager=new Ng(this),this.pathGenerators=new Map,this.interactivity={mouse:{clicking:!1,inside:!1}},this.plugins=new Map,this.drawers=new Map,this._options=B8(this._engine,this),this.actualOptions=B8(this._engine,this),this._eventListeners=new Fg(this),typeof IntersectionObserver<"u"&&IntersectionObserver&&(this._intersectionObserver=new IntersectionObserver(o=>this._intersectionManager(o))),this._engine.dispatchEvent("containerBuilt",{container:this})}get options(){return this._options}get sourceOptions(){return this._sourceOptions}addClickHandler(t){if(!$1(this))return;const e=this.interactivity.element;if(!e)return;const n=(h,f,C)=>{if(!$1(this))return;const d=this.retina.pixelRatio,p={x:f.x*d,y:f.y*d},v=this.particles.quadTree.queryCircle(p,C*d);t(h,v)},o=h=>{if(!$1(this))return;const f=h,C={x:f.offsetX||f.clientX,y:f.offsetY||f.clientY};n(h,C,1)},s=()=>{$1(this)&&(c=!0,u=!1)},r=()=>{$1(this)&&(u=!0)},l=h=>{if($1(this)){if(c&&!u){const f=h;let C=f.touches[f.touches.length-1];if(!C&&(C=f.changedTouches[f.changedTouches.length-1],!C))return;const d=this.canvas.element,p=d?d.getBoundingClientRect():void 0,v={x:C.clientX-(p?p.left:0),y:C.clientY-(p?p.top:0)};n(h,v,Math.max(C.radiusX,C.radiusY))}c=!1,u=!1}},a=()=>{$1(this)&&(c=!1,u=!1)};let c=!1,u=!1;e.addEventListener("click",o),e.addEventListener("touchstart",s),e.addEventListener("touchmove",r),e.addEventListener("touchend",l),e.addEventListener("touchcancel",a)}addPath(t,e,n=!1){return!$1(this)||!n&&this.pathGenerators.has(t)?!1:(this.pathGenerators.set(t,e??Q3),!0)}destroy(){if(!$1(this))return;this.stop(),this.particles.destroy(),this.canvas.destroy();for(const[,n]of this.drawers)n.destroy&&n.destroy(this);for(const n of this.drawers.keys())this.drawers.delete(n);this._engine.plugins.destroy(this),this.destroyed=!0;const t=this._engine.dom(),e=t.findIndex(n=>n===this);e>=0&&t.splice(e,1),this._engine.dispatchEvent("containerDestroyed",{container:this})}draw(t){if(!$1(this))return;let e=t;this._drawAnimationFrame=hg()(async n=>{e&&(this.lastFrameTime=void 0,e=!1),await this.frameManager.nextFrame(n)})}exportConfiguration(){return JSON.stringify(this.actualOptions,(t,e)=>{if(!(t==="_engine"||t==="_container"))return e},2)}exportImage(t,e,n){const o=this.canvas.element;o&&o.toBlob(t,e??"image/png",n)}exportImg(t){this.exportImage(t)}getAnimationStatus(){return!this._paused&&!this.pageHidden&&$1(this)}handleClickMode(t){if($1(this)){this.particles.handleClickMode(t);for(const[,e]of this.plugins)e.handleClickMode&&e.handleClickMode(t)}}async init(){if(!$1(this))return;const t=this._engine.plugins.getSupportedShapes();for(const n of t){const o=this._engine.plugins.getShapeDrawer(n);o&&this.drawers.set(n,o)}this._options=B8(this._engine,this,this._initialSourceOptions,this.sourceOptions),this.actualOptions=B8(this._engine,this,this._options);const e=this._engine.plugins.getAvailablePlugins(this);for(const[n,o]of e)this.plugins.set(n,o);this.retina.init(),await this.canvas.init(),this.updateActualOptions(),this.canvas.initBackground(),this.canvas.resize(),this.zLayers=this.actualOptions.zLayers,this.duration=Z1(this.actualOptions.duration)*1e3,this._delay=Z1(this.actualOptions.delay)*1e3,this.lifeTime=0,this.fpsLimit=this.actualOptions.fpsLimit>0?this.actualOptions.fpsLimit:120,this.smooth=this.actualOptions.smooth;for(const[,n]of this.drawers)n.init&&await n.init(this);for(const[,n]of this.plugins)n.init&&await n.init();this._engine.dispatchEvent("containerInit",{container:this}),this.particles.init(),this.particles.setDensity();for(const[,n]of this.plugins)n.particlesSetup&&n.particlesSetup();this._engine.dispatchEvent("particlesSetup",{container:this})}async loadTheme(t){$1(this)&&(this._currentTheme=t,await this.refresh())}pause(){if($1(this)&&(this._drawAnimationFrame!==void 0&&(fg()(this._drawAnimationFrame),delete this._drawAnimationFrame),!this._paused)){for(const[,t]of this.plugins)t.pause&&t.pause();this.pageHidden||(this._paused=!0),this._engine.dispatchEvent("containerPaused",{container:this})}}play(t){if(!$1(this))return;const e=this._paused||t;if(this._firstStart&&!this.actualOptions.autoPlay){this._firstStart=!1;return}if(this._paused&&(this._paused=!1),e)for(const[,n]of this.plugins)n.play&&n.play();this._engine.dispatchEvent("containerPlay",{container:this}),this.draw(e||!1)}async refresh(){if($1(this))return this.stop(),this.start()}async reset(){if($1(this))return this._options=B8(this._engine,this),this.refresh()}setNoise(t,e,n){$1(this)&&this.setPath(t,e,n)}setPath(t,e,n){if(!t||!$1(this))return;const o=Object.assign({},Q3);if(typeof t=="function")o.generate=t,e&&(o.init=e),n&&(o.update=n);else{const s=o;o.generate=t.generate||s.generate,o.init=t.init||s.init,o.update=t.update||s.update}this.addPath(I_,o,!0)}async start(){!$1(this)||this.started||(await this.init(),this.started=!0,await new Promise(t=>{this._delayTimeout=setTimeout(async()=>{this._eventListeners.addListeners(),this.interactivity.element instanceof HTMLElement&&this._intersectionObserver&&this._intersectionObserver.observe(this.interactivity.element);for(const[,e]of this.plugins)e.start&&await e.start();this._engine.dispatchEvent("containerStarted",{container:this}),this.play(),t()},this._delay)}))}stop(){if(!(!$1(this)||!this.started)){this._delayTimeout&&(clearTimeout(this._delayTimeout),delete this._delayTimeout),this._firstStart=!0,this.started=!1,this._eventListeners.removeListeners(),this.pause(),this.particles.clear(),this.canvas.stop(),this.interactivity.element instanceof HTMLElement&&this._intersectionObserver&&this._intersectionObserver.unobserve(this.interactivity.element);for(const[,t]of this.plugins)t.stop&&t.stop();for(const t of this.plugins.keys())this.plugins.delete(t);this._sourceOptions=this._options,this._engine.dispatchEvent("containerStopped",{container:this})}}updateActualOptions(){this.actualOptions.responsive=[];const t=this.actualOptions.setResponsive(this.canvas.size.width,this.retina.pixelRatio,this._options);return this.actualOptions.setTheme(this._currentTheme),this.responsiveMaxWidth===t?!1:(this.responsiveMaxWidth=t,!0)}_intersectionManager(t){if(!(!$1(this)||!this.actualOptions.pauseOnOutsideViewport))for(const e of t)e.target===this.interactivity.element&&(e.isIntersecting?this.play:this.pause)()}}async function Z_(i,t){const e=i6(i,t);if(!e)return;const n=await fetch(e);if(n.ok)return n.json();console.error(`tsParticles - Error ${n.status} while retrieving config file`)}class A_{constructor(t){this._engine=t}load(t,e,n){const o={index:n,remote:!1};return typeof t=="string"?o.tagId=t:o.options=t,typeof e=="number"?o.index=e:o.options=e??o.options,this.loadOptions(o)}async loadJSON(t,e,n){let o,s;return typeof e=="number"||e===void 0?o=t:(s=t,o=e),this.loadRemoteOptions({tagId:s,url:o,index:n,remote:!0})}async loadOptions(t){var e,n,o;const s=(e=t.tagId)!==null&&e!==void 0?e:`tsparticles${Math.floor(E5()*1e4)}`,{index:r,url:l,remote:a}=t,c=a?await Z_(l,r):t.options;let u=(n=t.element)!==null&&n!==void 0?n:document.getElementById(s);u||(u=document.createElement("div"),u.id=s,(o=document.querySelector("body"))===null||o===void 0||o.append(u));const h=i6(c,r),f=this._engine.dom(),C=f.findIndex(v=>v.id===s);if(C>=0){const v=this._engine.domItem(C);v&&!v.destroyed&&(v.destroy(),f.splice(C,1))}let d;if(u.tagName.toLowerCase()==="canvas")d=u,d.dataset[n6]="false";else{const v=u.getElementsByTagName("canvas");v.length?(d=v[0],d.dataset[n6]="false"):(d=document.createElement("canvas"),d.dataset[n6]="true",u.appendChild(d))}d.style.width||(d.style.width="100%"),d.style.height||(d.style.height="100%");const p=new T_(this._engine,s,h);return C>=0?f.splice(C,0,p):f.push(p),p.canvas.loadCanvas(d),await p.start(),p}async loadRemoteOptions(t){return this.loadOptions(t)}async set(t,e,n,o){const s={index:o,remote:!1};return typeof t=="string"?s.tagId=t:s.element=t,e instanceof HTMLElement?s.element=e:s.options=e,typeof n=="number"?s.index=n:s.options=n??s.options,this.loadOptions(s)}async setJSON(t,e,n,o){let s,r,l,a;return t instanceof HTMLElement?(a=t,s=e,l=n):(r=t,a=e,s=n,l=o),this.loadRemoteOptions({tagId:r,url:s,index:l,element:a,remote:!0})}}function O4(i,t,e,n=!1){let o=t.get(i);return(!o||n)&&(o=[...e.values()].map(s=>s(i)),t.set(i,o)),o}class D_{constructor(t){this._engine=t,this.plugins=[],this._initializers={interactors:new Map,movers:new Map,updaters:new Map},this.interactors=new Map,this.movers=new Map,this.updaters=new Map,this.presets=new Map,this.drawers=new Map,this.pathGenerators=new Map}addInteractor(t,e){this._initializers.interactors.set(t,e)}addParticleMover(t,e){this._initializers.movers.set(t,e)}addParticleUpdater(t,e){this._initializers.updaters.set(t,e)}addPathGenerator(t,e){this.getPathGenerator(t)||this.pathGenerators.set(t,e)}addPlugin(t){this.getPlugin(t.id)||this.plugins.push(t)}addPreset(t,e,n=!1){(n||!this.getPreset(t))&&this.presets.set(t,e)}addShapeDrawer(t,e){X5(t,n=>{this.getShapeDrawer(n)||this.drawers.set(n,e)})}destroy(t){this.updaters.delete(t),this.movers.delete(t),this.interactors.delete(t)}getAvailablePlugins(t){const e=new Map;for(const n of this.plugins)n.needsPlugin(t.actualOptions)&&e.set(n.id,n.getPlugin(t));return e}getInteractors(t,e=!1){return O4(t,this.interactors,this._initializers.interactors,e)}getMovers(t,e=!1){return O4(t,this.movers,this._initializers.movers,e)}getPathGenerator(t){return this.pathGenerators.get(t)}getPlugin(t){return this.plugins.find(e=>e.id===t)}getPreset(t){return this.presets.get(t)}getShapeDrawer(t){return this.drawers.get(t)}getSupportedShapes(){return this.drawers.keys()}getUpdaters(t,e=!1){return O4(t,this.updaters,this._initializers.updaters,e)}loadOptions(t,e){for(const n of this.plugins)n.loadOptions(t,e)}loadParticlesOptions(t,e,...n){const o=this.updaters.get(t);if(o)for(const s of o)s.loadOptions&&s.loadOptions(e,...n)}}class $_{constructor(){this._domArray=[],this._eventDispatcher=new ig,this._initialized=!1,this._loader=new A_(this),this.plugins=new D_(this)}get version(){return"2.9.2"}addEventListener(t,e){this._eventDispatcher.addEventListener(t,e)}async addInteractor(t,e){this.plugins.addInteractor(t,e),await this.refresh()}async addMover(t,e){this.plugins.addParticleMover(t,e),await this.refresh()}async addParticleUpdater(t,e){this.plugins.addParticleUpdater(t,e),await this.refresh()}async addPathGenerator(t,e){this.plugins.addPathGenerator(t,e),await this.refresh()}async addPlugin(t){this.plugins.addPlugin(t),await this.refresh()}async addPreset(t,e,n=!1){this.plugins.addPreset(t,e,n),await this.refresh()}async addShape(t,e,n,o,s){let r;typeof e=="function"?r={afterEffect:o,destroy:s,draw:e,init:n}:r=e,this.plugins.addShapeDrawer(t,r),await this.refresh()}dispatchEvent(t,e){this._eventDispatcher.dispatchEvent(t,e)}dom(){return this._domArray}domItem(t){const e=this.dom(),n=e[t];if(n&&!n.destroyed)return n;e.splice(t,1)}init(){this._initialized||(this._initialized=!0)}async load(t,e){return this._loader.load(t,e)}async loadFromArray(t,e,n){return this._loader.load(t,e,n)}async loadJSON(t,e,n){return this._loader.loadJSON(t,e,n)}async refresh(){for(const t of this.dom())await t.refresh()}removeEventListener(t,e){this._eventDispatcher.removeEventListener(t,e)}async set(t,e,n){return this._loader.set(t,e,n)}async setJSON(t,e,n,o){return this._loader.setJSON(t,e,n,o)}setOnClickHandler(t){const e=this.dom();if(!e.length)throw new Error("Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()");for(const n of e)n.addClickHandler(t)}}class F_{constructor(){this.key="hsl",this.stringPrefix="hsl"}handleColor(t){var e;const n=t.value,o=(e=n.hsl)!==null&&e!==void 0?e:t.value;if(o.h!==void 0&&o.s!==void 0&&o.l!==void 0)return oe(o)}handleRangeColor(t){var e;const n=t.value,o=(e=n.hsl)!==null&&e!==void 0?e:t.value;if(o.h!==void 0&&o.l!==void 0)return oe({h:Z1(o.h),l:Z1(o.l),s:Z1(o.s)})}parseString(t){if(!t.startsWith("hsl"))return;const e=/hsla?\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([\d.%]+)\s*)?\)/i,n=e.exec(t);return n?gg({a:n.length>4?$i(n[5]):1,h:parseInt(n[1],10),l:parseInt(n[3],10),s:parseInt(n[2],10)}):void 0}}class j_{constructor(){this.key="rgb",this.stringPrefix="rgb"}handleColor(t){var e;const n=t.value,o=(e=n.rgb)!==null&&e!==void 0?e:t.value;if(o.r!==void 0)return o}handleRangeColor(t){var e;const n=t.value,o=(e=n.rgb)!==null&&e!==void 0?e:t.value;if(o.r!==void 0)return{r:Z1(o.r),g:Z1(o.g),b:Z1(o.b)}}parseString(t){if(!t.startsWith(this.stringPrefix))return;const e=/rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([\d.%]+)\s*)?\)/i,n=e.exec(t);return n?{a:n.length>4?$i(n[5]):1,b:parseInt(n[3],10),g:parseInt(n[2],10),r:parseInt(n[1],10)}:void 0}}const N_=new j_,B_=new F_;ji(N_);ji(B_);const V8=new $_;V8.init();let n8;const H_=R8({name:"Particles",props:{id:{type:String,required:!0},options:{type:Object},url:{type:String},particlesLoaded:{type:Function},particlesInit:{type:Function}},mounted(){w6(async()=>{if(!this.id)throw new Error("Prop 'id' is required!");V8.init(),this.particlesInit&&await this.particlesInit(V8);const i=e=>{n8=e,this.particlesLoaded&&n8&&this.particlesLoaded(n8)},t=await(this.url?V8.loadJSON(this.id,this.url):V8.load(this.id,this.options??{}));i(t)})},unmounted(){n8&&(n8.destroy(),n8=void 0)}}),V_=(i,t)=>{const e=i.__vccOpts||i;for(const[n,o]of t)e[n]=o;return e},q_=["id"];function U_(i,t,e,n,o,s){return Y(),i1("div",{id:i.id},null,8,q_)}const W_=V_(H_,[["render",U_]]),G_=(i,t)=>{i.component("Particles",W_)};const Wt=ms(Pr);Wt.use(_s());Wt.use(eg);Wt.use(G_);Wt.mount("#app");export{R1 as F,x1 as _,w as a,zr as b,i1 as c,S5 as d,Rt as e,m1 as f,u1 as g,$ as h,Q2 as i,U5 as j,vo as k,SC as l,I8 as m,t2 as n,Y as o,c5 as p,u5 as q,z1 as r,K1 as t,Er as u};
